var res = {'data':'HTTP/1.1 200 OK\x0aServer: Apache-Coyote/1.1\x0aContent-Type: text/html;charset=ISO-8859-1\x0aTransfer-Encoding: chunked\x0aDate: Tue, 07 Aug 2018 19:12:45 GMT\x0a\x0a\x0d\x0a\x3c!DOCTYPE html PUBLIC \x22-//W3C//DTD HTML 4.01 Transitional//EN\x22 \x22http://www.w3.org/TR/html4/loose.dtd\x22\x3e\x0d\x0a\x3chtml\x3e\x0d\x0a\x3chead\x3e\x0d\x0a\x3cmeta http-equiv=\x22Content-Type\x22 content=\x22text/html; charset=ISO-8859-1\x22\x3e\x0d\x0a\x3ctitle\x3eEvaluation of SQL Injection Detection Accuracy - HTTP GET Method\x3c/title\x3e\x0d\x0a\x3c/head\x3e\x0d\x0a\x3cbody\x3e\x0d\x0a\x3ccenter\x3e\x3cfont size=\x225\x22\x3eTest Cases - Identical HTTP 200 Responses And Blind Cases\x3c/font\x3e\x3c/center\x3e\x3cbr\x3e\x3cbr\x3e\x0d\x0a\x0d\x0a\x3cB\x3e\x3ca href=\x22Case01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp?transactionId=132\x22\x3eCase01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp - Value 1\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a\x3cB\x3e\x3ca href=\x22Case01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp?transactionId=133\x22\x3eCase01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp - Value 2\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Case 1 - Injection into a numeric value in a private resource view page with default valid response on exception.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Exceptions cause a default value to be displayed (132)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  SELECT (WHERE Clause)\x3cbr\x3e \x0d\x0a  \x3cU\x3eSample Detection Structure:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 1 - Locate values that change in the responses to identical requests \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 2 - obtain the following reponses: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x09(1) [Valid Value 1] \x3cbr\x3e\x0d\x0a  \x09(2) [Valid Value 2] \x3cbr\x3e\x0d\x0a  \x09(3) Invalid Syntax Injection \x3cbr\x3e\x0d\x0a  \x09(4) Valid Mathematical Syntax Injection that is Equal to Value 1 \x3cbr\x3e\x0d\x0a  \x09    ([Bigger Valid Value]-/+ Diff[Valid Value 1],[Valid Value 2])])\x3cbr\x3e\x0d\x0a  \x09(5) Valid Mathematical Syntax Injection that is Equal to Value 2 \x3cbr\x3e\x0d\x0a  \x09    ([Bigger Valid Value]-/+ Diff[Valid Value 1],[Valid Value 2])])\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 3 - Ignore values located in phase 1 when comparing responses \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 4 - Compare the responses and conclude: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  The location should be vulnerable to SQL injection (or other syntax executing injection)\x0d\x0a  if the following statement is true:\x3cbr\x3e\x0d\x0a       (valid value 1 response) != (valid value 2 response) && \x3cbr\x3e\x0d\x0a       ( (invalid syntax response)!= (valid value 1 response) || \x3cbr\x3e\x0d\x0a         (invalid syntax response)!= (valid value 2 response) ) && \x3cbr\x3e\x0d\x0a       (Valid Mathematical Syntax Injection response 1) == [Valid Value 1 response] && \x3cbr\x3e\x0d\x0a       (Valid Mathematical Syntax Injection response 2) == [Valid Value 2 response] \x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: 1 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples for Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Request 1: 132 \x3cbr\x3e\x0d\x0a  Request 2: 133 \x3cbr\x3e\x0d\x0a  Request 3: \x27 \x3cbr\x3e\x0d\x0a  Request 4: 134-1 \x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 1 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp?username=user1\x22\x3eCase02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp - Value 1\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3e\x3ca href=\x22Case02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp?username=david\x22\x3eCase02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp - Value 2\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Case 2 - Injection into a string value in a private resource view page with default valid response on exception.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Exceptions cause a default value to be displayed (user1)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  SELECT (WHERE Clause)\x3cbr\x3e \x0d\x0a  \x3cU\x3eSample Detection Structure:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 1 - Locate values that change in the responses to identical requests \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 2 - obtain the following reponses: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x09(1) [Valid Value 1] \x3cbr\x3e\x0d\x0a  \x09(2) [Valid Value 2] \x3cbr\x3e\x0d\x0a  \x09(3) Invalid Syntax Injection \x3cbr\x3e\x0d\x0a  \x09    ([Value2]\x27\x27\x27)\x3cbr\x3e\x0d\x0a  \x09(4) Valid Syntax Injection that is Equal to Value 1 \x3cbr\x3e\x0d\x0a  \x09    ([Valid Value 1]\x27[comment][space]\x3cbr\x3e\x0d\x0a  \x09     OR [Value 1 Part 1 of 2]\x27[Concat operator]\x27[Value 1 Part 2 of 2])\x3cbr\x3e\x0d\x0a  \x09(5) Valid Syntax Injection that is Equal to Value 2 \x3cbr\x3e  \x09    \x0d\x0a  \x09     ([Valid Value 2]\x27[comment][space]\x3cbr\x3e\x0d\x0a  \x09     OR [Value 2 Part 1 of 2]\x27[Concat operator]\x27[Value 2 Part 2 of 2])\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 3 - Ignore values located in phase 1 when comparing responses \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 4 - Compare the responses and conclude: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  The location should be vulnerable to SQL injection (or other syntax executing injection)\x0d\x0a  if the following statement is true:\x3cbr\x3e\x0d\x0a       (valid value 1 response) != (valid value 2 response) && \x3cbr\x3e\x0d\x0a       ( (invalid syntax response)!= (valid value 1 response) || \x3cbr\x3e\x0d\x0a         (invalid syntax response)!= (valid value 2 response) ) && \x3cbr\x3e\x0d\x0a       (Valid Syntax Injection response 1) == [Valid Value 1 response] && \x3cbr\x3e\x0d\x0a       (Valid Syntax Injection response 2) == [Valid Value 2 response] \x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: value\x27 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples for Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Request 1: user1 \x3cbr\x3e\x0d\x0a  Request 2: david \x3cbr\x3e\x0d\x0a  Request 3: david\x27\x27\x27 \x3cbr\x3e\x0d\x0a  Request 4: david\x27--%20 \x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: user1\x27 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp?transactionDate=2010-01-01\x22\x3eCase03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp - Value 1\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3e\x3ca href=\x22Case03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp?transactionDate=2010-02-02\x22\x3eCase03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp - Value 2\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Case 3 - Injection into a date value in a private resource view page with default valid response on exception.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Exceptions cause a default value to be displayed (user1)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  SELECT (WHERE Clause)\x3cbr\x3e \x0d\x0a  \x3cU\x3eSample Detection Structure:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 1 - Locate values that change in the responses to identical requests \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 2 - obtain the following reponses: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x09(1) [Valid Value 1] \x3cbr\x3e\x0d\x0a  \x09(2) [Valid Value 2] \x3cbr\x3e\x0d\x0a  \x09(3) Invalid Syntax Injection \x3cbr\x3e\x0d\x0a  \x09    ([Value2]\x27\x27\x27)\x3cbr\x3e\x0d\x0a  \x09(4) Valid Syntax Injection that is Equal to Value 1 \x3cbr\x3e\x0d\x0a  \x09    ([Valid Value 1]\x27[comment][space])\x3cbr\x3e\x0d\x0a  \x09(5) Valid Syntax Injection that is Equal to Value 2 \x3cbr\x3e  \x09    \x0d\x0a  \x09     ([Valid Value 2]\x27[comment][space])\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 3 - Ignore values located in phase 1 when comparing responses \x3c/B\x3e\x3cbr\x3e\x0d\x0a  \x3cB\x3ePhase 4 - Compare the responses and conclude: \x3c/B\x3e\x3cbr\x3e\x0d\x0a  The location should be vulnerable to SQL injection (or other syntax executing injection)\x0d\x0a  if the following statement is true:\x3cbr\x3e\x0d\x0a       (valid value 1 response) != (valid value 2 response) && \x3cbr\x3e\x0d\x0a       ( (invalid syntax response)!= (valid value 1 response) || \x3cbr\x3e\x0d\x0a         (invalid syntax response)!= (valid value 2 response) ) && \x3cbr\x3e\x0d\x0a       (Valid Syntax Injection response 1) == [Valid Value 1 response] && \x3cbr\x3e\x0d\x0a       (Valid Syntax Injection response 2) == [Valid Value 2 response] \x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: [date value]\x27 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples for Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Request 1: 2010-01-01 \x3cbr\x3e\x0d\x0a  Request 2: 2010-02-02 \x3cbr\x3e\x0d\x0a  Request 3: 2010-02-02\x27\x27\x27 \x3cbr\x3e\x0d\x0a  Request 4: 2010-02-02\x27--%20 \x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 2010-01-01\x27 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case04-InjectionInUpdate-Numeric-TimeDelayExploit-200Identical.jsp?transactionId=895\x22\x3eCase04-InjectionInUpdate-Numeric-TimeDelayExploit-200Identical.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Injection into a numeric value in an update page with identical responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Identical Responses\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  UPDATE (WHERE Clause)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: 1 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 895 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case05-InjectionInUpdate-String-TimeDelayExploit-200Identical.jsp?description=empty\x22\x3eCase05-InjectionInUpdate-String-TimeDelayExploit-200Identical.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Injection into a string value in an update page with identical responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Identical Responses\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  UPDATE (WHERE Clause)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: value\x27 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: empty\x27 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case06-InjectionInUpdate-Date-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02\x22\x3eCase06-InjectionInUpdate-Date-TimeDelayExploit-200Identical.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Injection into a date value in an update page with identical responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Identical Responses\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  UPDATE (WHERE Clause)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: [date value]\x27 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 2010-02-02\x27 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case07-InjectionInUpdate-NumericWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionId=895\x22\x3eCase07-InjectionInUpdate-NumericWithoutQuotes-TimeDelayExploit-200Identical.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Injection into a numeric value in an update page with quote validation and identical responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Identical Responses\x3cbr\x3e\x0d\x0a  Quote Validation\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  UPDATE (WHERE Clause)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: 1 and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 895 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a\x0d\x0a  \x3cB\x3e\x3ca href=\x22Case08-InjectionInUpdate-DateWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02\x22\x3eCase08-InjectionInUpdate-DateWithoutQuotes-TimeDelayExploit-200Identical.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  Injection into a date value in an update page with quote validation and identical responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Identical Responses\x3cbr\x3e\x0d\x0a  Quote Validation\x3cbr\x3e\x0d\x0a  \x3cU\x3eSQL Statement Context:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  UPDATE (WHERE Clause)\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample Time Based Detection Structures:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL Detection: [date value] and exists ([time delay function])[comment][space]\x3cbr\x3e\x0d\x0a  \x3cU\x3eExamples of Time Based Detection Inputs:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  MySQL: 2010-02-02 and 1 in (select BENCHMARK(20000000,MD5(CHAR(97))) ) --%20 \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a\x3c/body\x3e\x0d\x0a\x3c/html\x3e\xe1'}