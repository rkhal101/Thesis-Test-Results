var res = {'data':'HTTP/1.1 200 OK\x0aServer: Apache-Coyote/1.1\x0aContent-Type: text/html;charset=ISO-8859-1\x0aTransfer-Encoding: chunked\x0aDate: Tue, 07 Aug 2018 20:08:36 GMT\x0a\x0a\x0d\x0a\x3c!DOCTYPE html PUBLIC \x22-//W3C//DTD HTML 4.01 Transitional//EN\x22 \x22http://www.w3.org/TR/html4/loose.dtd\x22\x3e\x0d\x0a\x3chtml\x3e\x0d\x0a\x3chead\x3e\x0d\x0a\x3cmeta http-equiv=\x22Content-Type\x22 content=\x22text/html; charset=ISO-8859-1\x22\x3e\x0d\x0a\x3ctitle\x3eEvaluation of SQL Injection False Positive Detection Accuracy - HTTP GET Method\x3c/title\x3e\x0d\x0a\x3c/head\x3e\x0d\x0a\x3cbody\x3e\x0d\x0a\x0d\x0a\x3ccenter\x3e\x3cfont size=\x225\x22\x3eFalse Positive Injection Test Cases\x3c/font\x3e\x3c/center\x3e\x3cbr\x3e\x3cbr\x3e\x0d\x0a\x0d\x0a\x3cB\x3e\x3ca href=\x22Case01-FalsePositiveInjectionInLogin-PsAndIv-500ErrorOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase01-FalsePositiveInjectionInLogin-PsAndIv-500ErrorOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that responds with erroneous 500 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in 500 errornous responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on exceptions (HTTP 500 response)\x0d\x0a  that derives from SQL characters might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case02-FalsePositiveInjectionInLogin-PsAndIv-500SyntaxErrorOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase02-FalsePositiveInjectionInLogin-PsAndIv-500SyntaxErrorOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that responds with erroneous syntax containing 500 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in 500 errornous responses with SQL keywords.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on SQL exceptions (HTTP 500 response)\x0d\x0a  that derives from SQL characters might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case03-FalsePositiveInjectionInLogin-PsAndIv-200ErrorOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase03-FalsePositiveInjectionInLogin-PsAndIv-200ErrorOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that responds with erroneous 200 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in 200 errornous responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on exception text (HTTP 200 response)\x0d\x0a  that derives from SQL characters might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case04-FalsePositiveInjectionInLogin-PsAndIv-200SyntaxErrorOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase04-FalsePositiveInjectionInLogin-PsAndIv-200SyntaxErrorOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that responds with erroneous syntax containing 200 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in 200 errornous responses with SQL keywords.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on SQL exception text (HTTP 200 response)\x0d\x0a  that derives from SQL characters might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case05-FalsePositiveInjectionInLogin-PsAndIv-Different200ValidOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase05-FalsePositiveInjectionInLogin-PsAndIv-Different200ValidOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that responds with different valid 200 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in different valid HTTP 200 responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely response differentiation\x0d\x0a  (that is caused when SQL characters are sent in the input), might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case06-FalsePositiveInjectionInLogin-HoneyPotNoSQL-Fake500SyntaxErrorOnIvFailure.jsp?username=textvalue&password=textvalue2\x22\x3eCase06-FalsePositiveInjectionInLogin-HoneyPotNoSQL-Fake500SyntaxErrorOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a Honeypot (login) page that responds with erroneous fake-sql containing 500 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in 500 errornous responses with SQL keywords.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on exceptions (HTTP 500 response),\x0d\x0a  SQL or keywords that derives from sending SQL characters might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case07-FalsePositiveInjectionInLogin-PsAndIv-500ErrorOnUnrelatedSyntaxError.jsp?username=textvalue&password=textvalue2\x22\x3eCase07-FalsePositiveInjectionInLogin-PsAndIv-500ErrorOnUnrelatedSyntaxError.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that always responds with erroneous 500 HTTP response since it has an internal unrelated syntax error.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  An unrelated SQL implementation flaw will always throw syntax exceptions upon execution, which result in errornous 500 HTTP responses that contain SQL syntax.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on exceptions (HTTP 500 response)\x0d\x0a  with SQL syntax might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Any input \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case08-FalsePositiveInjectionInLogin-PsAndIv-200ErrorOnUnrelatedSyntaxError.jsp?username=textvalue&password=textvalue2\x22\x3eCase08-FalsePositiveInjectionInLogin-PsAndIv-200ErrorOnUnrelatedSyntaxError.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in a login page that always responds with erroneous 200 HTTP response since it has an internal unrelated syntax error.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes, Comments and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  An unrelated SQL implementation flaw will always throw syntax exceptions upon execution, which result in errornous 200 HTTP responses that contain SQL syntax.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on exception text (HTTP 200 response)\x0d\x0a  with SQL syntax might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Any input \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case09-FalsePositiveInjectionInUpdate-PsAndIv-Different200ValidOnIvFailure.jsp?transactionDate=2010-02-02\x22\x3eCase09-FalsePositiveInjectionInUpdate-PsAndIv-Different200ValidOnIvFailure.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in an update page that responds with different 200 HTTP responses to input validation failures.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Quotes and Semicolon Input Validation\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Input validation failures throw exceptions, which result in valid 200 different responses.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on valid 200 reponse differentiation\x0d\x0a  (that derives from sending SQL characters), might detect this case as vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Single Quote Example: \x27 \x3cbr\x3e\x0d\x0a  SQL Comment Example:  -- \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a \x0d\x0a  \x3cB\x3e\x3ca href=\x22Case10-FalsePositiveInjectionInUpdate-PsAndIv-Identical200Response.jsp?transactionDate=2010-02-02\x22\x3eCase10-FalsePositiveInjectionInUpdate-PsAndIv-Identical200Response.jsp\x3c/a\x3e\x3c/B\x3e\x3cbr\x3e\x0d\x0a  False Positive Injection in an update page that always responds with an identical 200 response.\x3cbr\x3e\x0d\x0a  \x3cU\x3eBarriers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Prepared Statements\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Leads:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  This page will always present an identical 200 response.\x3cbr\x3e\x0d\x0a  \x3cU\x3eFalse Detection Potential:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Scanners that base thier Injection identification solely on valid SQL syntax injection\x0d\x0a  (and on the lack of exceptions in the process of injecting this input) might find this page vulnerable.\x3cbr\x3e\x0d\x0a  \x3cU\x3eSample False Positive Detection Triggers:\x3c/U\x3e\x3cbr\x3e\x0d\x0a  Any input \x3cbr\x3e\x0d\x0a  \x3cbr\x3e\x0d\x0a  \x0d\x0a\x3c/body\x3e\x0d\x0a\x3c/html\x3e'}