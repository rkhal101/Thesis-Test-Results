var res = {'data':'HTTP/1.1 200 OK\x0aServer: Apache-Coyote/1.1\x0aContent-Type: application/octet-stream;charset=ISO-8859-1\x0aTransfer-Encoding: chunked\x0aDate: Tue, 07 Aug 2018 21:21:19 GMT\x0a\x0a\x3c%@page import=\x22java.io.*\x22 %\x3e\x0d\x0a\x3c%@page import=\x22java.net.*\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.encoders.HtmlEncoder\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.constants.SystemConstants\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.constants.FileConstants\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.constants.ContentConstants\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.VulnerabilityType\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.ResponseType\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.DefaultInputType\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.FileAccessMethod\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.FileAccessRestriction\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.FileInjectionContext\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.PrefixRequirement\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.OsType\x22 %\x3e\x0d\x0a\x3c%@page import=\x22com.sectooladdict.enums.PathType\x22 %\x3e\x0d\x0a\x0d\x0a\x3c%\x0d\x0a//set debug flag from main config\x0d\x0aboolean debugMode = SystemConstants.DEBUG_FLAG_DEFAULT_STATE;\x0d\x0a\x0d\x0a//begin setting group definitions\x0d\x0a//--------------------------------\x0d\x0a\x0d\x0a//*** Set Default File Access Type ***\x0d\x0a//CONTEXT_STREAM, FILE_CLASS, URL_CLASS, FTP_CLASS, INCLUDE, REDIRECT, FORWARD\x0d\x0aFileAccessMethod fileAccessMethod = FileAccessMethod.FILE_CLASS;\x0d\x0a\x0d\x0a//** Set File Access Restriction ***\x0d\x0a//NONE, WHITE_LIST,\x09LOCAL_FOLDER_ONLY, PERMISSIONS, \x0d\x0a//UNIX_TRAVESAL_INPUT_VALIDATION, UNIX_TRAVESAL_INPUT_REMOVAL, \x0d\x0a//WINDOWS_TRAVESAL_INPUT_VALIDATION, WINDOWS_TRAVESAL_INPUT_REMOVAL,\x0d\x0a//SLASH_INPUT_VALIDATION, SLASH_INPUT_REMOVAL,\x0d\x0a//BACKSLASH_INPUT_VALIDATION, BACKSLASH_INPUT_REMOVAL,\x0d\x0aFileAccessRestriction accessRestriction = FileAccessRestriction.NONE;\x0d\x0a\x0d\x0a//** Set Default Input Format ***\x0d\x0a//FULL_PATH_INPUT, RELATIVE_INPUT, INVALID_INPUT, EMPTY_INPUT\x0d\x0aDefaultInputType defaultInputType = DefaultInputType.FULL_PATH_INPUT;\x0d\x0a\x0d\x0a//*** Set Default Injection Context ***\x0d\x0a/*\x0d\x0aFULL_FILENAME, //filename.extension (nothing appended)\x0d\x0aFILENAME_ONLY, //filename (fixed extension appended)\x0d\x0aDIRECTORY, //directory (fixed filename & extension appended)\x0d\x0aEXTENSION; //extension (nothing appended, *NOT IMPLEMENTED*)\x0d\x0a*/\x0d\x0aFileInjectionContext injectionContext = FileInjectionContext.FULL_FILENAME; \x0d\x0a\x0d\x0a//set path requirement\x0d\x0a//ANY, NONE, SLASH_PREFIX, BACKSLASH_PREFIX,\x0d\x0a//FTP_DIRECTIVE, HTTP_DIRECTIVE, \x0d\x0aPrefixRequirement prefixRequired = PrefixRequirement.ANY;\x09\x09\x09\x09\x09\x09\x09 \x0d\x0a\x0d\x0a//*** set OS simulation (unix default) ***\x0d\x0a//WINDOWS, UNIX\x0d\x0a//OsType osSimulated = OsType.WINDOWS;\x0d\x0a\x0d\x0a//*** Set Default Response Type ***\x0d\x0a//ERROR_500, ERROR_404, REDIRECT_302, ERROR_200, VALID_200, Identical_200\x0d\x0aResponseType invalidResponseType = ResponseType.IDENTICAL_200;\x0d\x0a                                  \x09\x09 \x0d\x0a//*** Set Default Content Type ***\x0d\x0a//CONTENT_TYPE_TEXT_HTML (\x22text/html\x22), CONTENT_TYPE_STREAM (\x22application/octet-stream\x22)\x0d\x0aString validResposeStream = ContentConstants.CONTENT_TYPE_STREAM; \x0d\x0a\x0d\x0a//** Set Default File Path/URL Type **\x0d\x0a//OS_PATH, FILE_DIRECTIVE_URL, FTP_URL, HTTP_URL \x0d\x0aPathType pathType = PathType.OS_PATH;\x0d\x0a\x0d\x0a//*** Set Vulnerability Type ***\x0d\x0a//LFI, RFI, DIRECTORY_TRAVERSAL, CODE_LFI, CODE_RFI, FALSE_POSITIVE\x0d\x0aVulnerabilityType vulnerability = VulnerabilityType.LFI;\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a//final String URL_TYPE_FTP = \x22ftp://\x22; //new URL(new String(\x22ftp://\x22+user+\x22:\x22+password+\x22@\x22+host+\x22/\x22+remotefile+\x22;type=i\x22));\x0d\x0a//*** Set Default Prefix String ***\x0d\x0aString prefix = \x22\x22; //\x22\x22,[FULLPATH], \x22http://\x22,\x22file:/\x22,\x22ftp://\x22\x0d\x0a\x0d\x0a//obtain deliminters and path information\x0d\x0aString fileDelimiter = System.getProperty(\x22file.separator\x22);\x0d\x0aString lineDelimiter = System.getProperty(\x22line.separator\x22);\x0d\x0a\x0d\x0a//Initial Path/URL:\x0d\x0aString DefaultInitialPath = \x22\x22; //Empty\x0d\x0a//Current User Directory File Object\x0d\x0aFile directory = new File (\x22.\x22);\x0d\x0a//User Directory Path - Absolute\x0d\x0aString userPath = System.getProperty(\x22user.dir\x22);\x0d\x0a///Deployement Path Root - Absolute\x0d\x0aString documentRootPath =\x0d\x0a\x09getServletConfig().getServletContext().getRealPath(\x22\x22);\x0d\x0a//Relative path of current file - Absolute\x0d\x0aString currentFilePath = request.getRealPath(request.getServletPath());\x0d\x0a//Relative path of current directory - Absolute - No Final Line Delimiter\x0d\x0aString currentDirPath = request.getRealPath(\x0d\x0a\x09\x09(request.getServletPath()).split(\x22/Case\x22)[0]);\x0d\x0a//Web Path of Root - Relative\x0d\x0aString contextPath = this.getServletContext().getContextPath();\x0d\x0a//Web Path of File - Relative and *NOT* including ROOT (!)\x0d\x0aString contextPathFile = request.getServletPath();\x0d\x0a//Web Path of Dir - Relative and *NOT* including ROOT or File Delimiter(!)\x0d\x0aString contextRelativeDirPath = (request.getServletPath()).split(\x22/Case\x22)[0];\x0d\x0a\x0d\x0aif (debugMode == true) {\x0d\x0a\x09String BR = \x22\x3cBR\x3e\x22;\x0d\x0a\x09String FontStart = \x22\x3cB\x3e\x22;\x0d\x0a\x09String FontEnd = \x22\x3c/B\x3e\x22;\x0d\x0a\x09\x0d\x0a\x09System.out.println (\x22File delimiter: \x22 + fileDelimiter);\x0d\x0a\x09out.println (FontStart + \x22File delimiter: \x22 + FontEnd + fileDelimiter + BR);\x0d\x0a\x09System.out.println (\x22Line delimiter (encoded):\x22 + HtmlEncoder.htmlEncode(lineDelimiter));\x0d\x0a\x09out.println (FontStart + \x22Line delimiter (encoded): \x22 + FontEnd \x0d\x0a\x09\x09\x09+ HtmlEncoder.htmlEncode(HtmlEncoder.htmlEncode(lineDelimiter)) + BR);\x0d\x0a\x09\x0d\x0a\x09//User Directory Path - Absolute\x0d\x0a\x09System.out.println (\x22User Directory Path (Absolute): \x22 + userPath);\x0d\x0a\x09out.println (FontStart + \x22User Directory Path (Absolute): \x22 + FontEnd + userPath + BR);\x0d\x0a\x09///Deployement Path Root - Absolute\x0d\x0a\x09System.out.println (\x22Deployment Path Root (Absolute): \x22 + documentRootPath);\x0d\x0a\x09out.println (FontStart + \x22Deployment Path Root (Absolute): \x22 + FontEnd + documentRootPath + BR);\x0d\x0a\x09//Relative path of current file - Absolute\x0d\x0a\x09System.out.println (\x22Deployment Path Current File (Absolute): \x22 + currentFilePath);\x09\x09\x0d\x0a\x09out.println (FontStart + \x22Deployment Path Current File (Absolute): \x22 + FontEnd + currentFilePath + BR);\x0d\x0a\x09//Relative path of current directory - Absolute\x0d\x0a\x09System.out.println (\x22Deployment Path Current Directory (Absolute): \x22 + currentDirPath);\x0d\x0a\x09out.println (FontStart + \x22Deployment Path Current Directory (Absolute): \x22 + FontEnd + currentDirPath + BR);\x0d\x0a\x09//Web Path of Root - Relative\x0d\x0a\x09System.out.println (\x22Web Path Root (Relative): \x22 + contextPath);\x0d\x0a\x09out.println (FontStart + \x22Web Path Root (Relative): \x22 + FontEnd + contextPath + BR);\x0d\x0a\x09//Web Path of File - Relative and *NOT* including ROOT (!)\x0d\x0a\x09System.out.println (\x22Web Path of File (Relative-no-root): \x22 + contextPathFile);\x0d\x0a\x09out.println (FontStart + \x22Web Path of File (Relative-no-root): \x22 + FontEnd + contextPathFile + BR);\x0d\x0a\x09//Web Path of Dir - Relative and *NOT* including ROOT or File Delimiter(!)\x0d\x0a\x09System.out.println (\x22Web Path of Dir (Relative-no-root): \x22 + contextRelativeDirPath);\x0d\x0a\x09out.println (FontStart + \x22Web Path of Dir (Relative-no-root): \x22 + FontEnd + contextRelativeDirPath + BR);\x0d\x0a\x09//Full URL:\x0d\x0a\x09System.out.println(\x22request URL: \x22 + request.getRequestURL());\x0d\x0a\x09out.println(FontStart + \x22request URL: \x22 + FontEnd + request.getRequestURL() + BR);\x0d\x0a\x09\x0d\x0a\x09//System.out.println(request.getRealPath(\x22/\x22));\x0d\x0a\x09\x0d\x0a\x09try {\x0d\x0a\x09\x09System.out.println (\x22Current directory\x27s canonical path: \x22 \x0d\x0a  \x09\x09\x09+ directory.getCanonicalPath()); \x0d\x0a\x09\x09out.println (FontStart + \x22Current directory\x27s canonical path: \x22 \x0d\x0a\x09\x09    + FontEnd + directory.getCanonicalPath() + BR); \x0d\x0a\x09   \x09System.out.println (\x22Current directory\x27s absolute path: \x22 \x0d\x0a\x09   \x09\x09+ directory.getAbsolutePath());\x0d\x0a\x09   \x09out.println (FontStart + \x22Current directory\x27s absolute  path: \x22 \x0d\x0a\x09   \x09    + FontEnd + directory.getAbsolutePath() + BR);\x0d\x0a\x09} catch(Exception e) {\x0d\x0a\x09\x09System.out.println(\x22Exceptione is =\x22 + e.getMessage());\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09out.println(BR + BR);\x0d\x0a} // end of debug if\x0d\x0a\x0d\x0a//****ways to get the file ****\x0d\x0a//1)context.getRequestDispatcher(\x22/\x22).forward(request, response);\x0d\x0a//2)File file = new File (currentDirPath + targetFile);\x0d\x0a//3)is = getServletContext().getResourceAsStream(contextRelativeDirPath + targetFile);\x0d\x0a//4)is = new FileInputStream(currentDirPath + targetFile);\x0d\x0a//5)URL url = new URL(URLInitialPath + targetFile);\x0d\x0a//   URLConnection urlconn = url.openConnection();\x0d\x0a//6)FORWARD (FP)\x0d\x0a//6)REDIRECT (FP)\x0d\x0a\x0d\x0a%\x3e'}