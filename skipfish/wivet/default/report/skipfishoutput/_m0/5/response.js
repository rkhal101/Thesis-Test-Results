var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Thu, 02 Aug 2018 01:01:46 GMT\x0aServer: Apache/2.4.10 (Debian) PHP/5.6.11\x0aLast-Modified: Thu, 23 Jul 2015 19:18:04 GMT\x0aETag: \x2217435-51b8fbf1a5300-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-28623/28624\x0aContent-Length: 28624\x0aKeep-Alive: timeout=5, max=76\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a(function(){\x0a/*\x0a * jQuery 1.2.2 - New Wave Javascript\x0a *\x0a * Copyright (c) 2007 John Resig (jquery.com)\x0a * Dual licensed under the MIT (MIT-LICENSE.txt)\x0a * and GPL (GPL-LICENSE.txt) licenses.\x0a *\x0a * $Date: 2008-01-14 17:56:07 -0500 (Mon, 14 Jan 2008) $\x0a * $Rev: 4454 $\x0a */\x0a\x0a// Map over jQuery in case of overwrite\x0aif ( window.jQuery )\x0a\x09var _jQuery = window.jQuery;\x0a\x0avar jQuery = window.jQuery = function( selector, context ) {\x0a\x09// The jQuery object is actually just the init constructor \x27enhanced\x27\x0a\x09return new jQuery.prototype.init( selector, context );\x0a};\x0a\x0a// Map over the $ in case of overwrite\x0aif ( window.$ )\x0a\x09var _$ = window.$;\x0a\x09\x0a// Map the jQuery namespace to the \x27$\x27 one\x0awindow.$ = jQuery;\x0a\x0a// A simple way to check for HTML strings or ID strings\x0a// (both of which we optimize for)\x0avar quickExpr = /^[^\x3c]*(\x3c(.|\x5cs)+\x3e)[^\x3e]*$|^#(\x5cw+)$/;\x0a\x0a// Is it a simple selector\x0avar isSimple = /^.[^:#\x5c[\x5c.]*$/;\x0a\x0ajQuery.fn = jQuery.prototype = {\x0a\x09init: function( selector, context ) {\x0a\x09\x09// Make sure that a selection was provided\x0a\x09\x09selector = selector || document;\x0a\x0a\x09\x09// Handle $(DOMElement)\x0a\x09\x09if ( selector.nodeType ) {\x0a\x09\x09\x09this[0] = selector;\x0a\x09\x09\x09this.length = 1;\x0a\x09\x09\x09return this;\x0a\x0a\x09\x09// Handle HTML strings\x0a\x09\x09} else if ( typeof selector == \x22string\x22 ) {\x0a\x09\x09\x09// Are we dealing with HTML string or an ID?\x0a\x09\x09\x09var match = quickExpr.exec( selector );\x0a\x0a\x09\x09\x09// Verify a match, and that no context was specified for #id\x0a\x09\x09\x09if ( match && (match[1] || !context) ) {\x0a\x0a\x09\x09\x09\x09// HANDLE: $(html) -\x3e $(array)\x0a\x09\x09\x09\x09if ( match[1] )\x0a\x09\x09\x09\x09\x09selector = jQuery.clean( [ match[1] ], context );\x0a\x0a\x09\x09\x09\x09// HANDLE: $(\x22#id\x22)\x0a\x09\x09\x09\x09else {\x0a\x09\x09\x09\x09\x09var elem = document.getElementById( match[3] );\x0a\x0a\x09\x09\x09\x09\x09// Make sure an element was located\x0a\x09\x09\x09\x09\x09if ( elem )\x0a\x09\x09\x09\x09\x09\x09// Handle the case where IE and Opera return items\x0a\x09\x09\x09\x09\x09\x09// by name instead of ID\x0a\x09\x09\x09\x09\x09\x09if ( elem.id != match[3] )\x0a\x09\x09\x09\x09\x09\x09\x09return jQuery().find( selector );\x0a\x0a\x09\x09\x09\x09\x09\x09// Otherwise, we inject the element directly into the jQuery object\x0a\x09\x09\x09\x09\x09\x09else {\x0a\x09\x09\x09\x09\x09\x09\x09this[0] = elem;\x0a\x09\x09\x09\x09\x09\x09\x09this.length = 1;\x0a\x09\x09\x09\x09\x09\x09\x09return this;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09else\x0a\x09\x09\x09\x09\x09\x09selector = [];\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09// HANDLE: $(expr, [context])\x0a\x09\x09\x09// (which is just equivalent to: $(content).find(expr)\x0a\x09\x09\x09} else\x0a\x09\x09\x09\x09return new jQuery( context ).find( selector );\x0a\x0a\x09\x09// HANDLE: $(function)\x0a\x09\x09// Shortcut for document ready\x0a\x09\x09} else if ( jQuery.isFunction( selector ) )\x0a\x09\x09\x09return new jQuery( document )[ jQuery.fn.ready ? \x22ready\x22 : \x22load\x22 ]( selector );\x0a\x0a\x09\x09return this.setArray(\x0a\x09\x09\x09// HANDLE: $(array)\x0a\x09\x09\x09selector.constructor == Array && selector ||\x0a\x0a\x09\x09\x09// HANDLE: $(arraylike)\x0a\x09\x09\x09// Watch for when an array-like object, contains DOM nodes, is passed in as the selector\x0a\x09\x09\x09(selector.jquery || selector.length && selector != window && !selector.nodeType && selector[0] != undefined && selector[0].nodeType) && jQuery.makeArray( selector ) ||\x0a\x0a\x09\x09\x09// HANDLE: $(*)\x0a\x09\x09\x09[ selector ] );\x0a\x09},\x0a\x09\x0a\x09// The current version of jQuery being used\x0a\x09jquery: \x221.2.2\x22,\x0a\x0a\x09// The number of elements contained in the matched element set\x0a\x09size: function() {\x0a\x09\x09return this.length;\x0a\x09},\x0a\x09\x0a\x09// The number of elements contained in the matched element set\x0a\x09length: 0,\x0a\x0a\x09// Get the Nth element in the matched element set OR\x0a\x09// Get the whole matched element set as a clean array\x0a\x09get: function( num ) {\x0a\x09\x09return num == undefined ?\x0a\x0a\x09\x09\x09// Return a \x27clean\x27 array\x0a\x09\x09\x09jQuery.makeArray( this ) :\x0a\x0a\x09\x09\x09// Return just the object\x0a\x09\x09\x09this[ num ];\x0a\x09},\x0a\x09\x0a\x09// Take an array of elements and push it onto the stack\x0a\x09// (returning the new matched element set)\x0a\x09pushStack: function( elems ) {\x0a\x09\x09// Build a new jQuery matched element set\x0a\x09\x09var ret = jQuery( elems );\x0a\x0a\x09\x09// Add the old object onto the stack (as a reference)\x0a\x09\x09ret.prevObject = this;\x0a\x0a\x09\x09// Return the newly-formed element set\x0a\x09\x09return ret;\x0a\x09},\x0a\x09\x0a\x09// Force the current matched set of elements to become\x0a\x09// the specified array of elements (destroying the stack in the process)\x0a\x09// You should use pushStack() in order to do this, but maintain the stack\x0a\x09setArray: function( elems ) {\x0a\x09\x09// Resetting the length to 0, then using the native Array push\x0a\x09\x09// is a super-fast way to populate an object with array-like properties\x0a\x09\x09this.length = 0;\x0a\x09\x09Array.prototype.push.apply( this, elems );\x0a\x09\x09\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09// Execute a callback for every element in the matched set.\x0a\x09// (You can seed the arguments with an array of args, but this is\x0a\x09// only used internally.)\x0a\x09each: function( callback, args ) {\x0a\x09\x09return jQuery.each( this, callback, args );\x0a\x09},\x0a\x0a\x09// Determine the position of an element within \x0a\x09// the matched set of elements\x0a\x09index: function( elem ) {\x0a\x09\x09var ret = -1;\x0a\x0a\x09\x09// Locate the position of the desired element\x0a\x09\x09this.each(function(i){\x0a\x09\x09\x09if ( this == elem )\x0a\x09\x09\x09\x09ret = i;\x0a\x09\x09});\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09attr: function( name, value, type ) {\x0a\x09\x09var options = name;\x0a\x09\x09\x0a\x09\x09// Look for the case where we\x27re accessing a style value\x0a\x09\x09if ( name.constructor == String )\x0a\x09\x09\x09if ( value == undefined )\x0a\x09\x09\x09\x09return this.length && jQuery[ type || \x22attr\x22 ]( this[0], name ) || undefined;\x0a\x0a\x09\x09\x09else {\x0a\x09\x09\x09\x09options = {};\x0a\x09\x09\x09\x09options[ name ] = value;\x0a\x09\x09\x09}\x0a\x09\x09\x0a\x09\x09// Check to see if we\x27re setting style values\x0a\x09\x09return this.each(function(i){\x0a\x09\x09\x09// Set all the styles\x0a\x09\x09\x09for ( name in options )\x0a\x09\x09\x09\x09jQuery.attr(\x0a\x09\x09\x09\x09\x09type ?\x0a\x09\x09\x09\x09\x09\x09this.style :\x0a\x09\x09\x09\x09\x09\x09this,\x0a\x09\x09\x09\x09\x09name, jQuery.prop( this, options[ name ], type, i, name )\x0a\x09\x09\x09\x09);\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09css: function( key, value ) {\x0a\x09\x09// ignore negative width and height values\x0a\x09\x09if ( (key == \x27width\x27 || key == \x27height\x27) && parseFloat(value) \x3c 0 )\x0a\x09\x09\x09value = undefined;\x0a\x09\x09return this.attr( key, value, \x22curCSS\x22 );\x0a\x09},\x0a\x0a\x09text: function( text ) {\x0a\x09\x09if ( typeof text != \x22object\x22 && text != null )\x0a\x09\x09\x09return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );\x0a\x0a\x09\x09var ret = \x22\x22;\x0a\x0a\x09\x09jQuery.each( text || this, function(){\x0a\x09\x09\x09jQuery.each( this.childNodes, function(){\x0a\x09\x09\x09\x09if ( this.nodeType != 8 )\x0a\x09\x09\x09\x09\x09ret += this.nodeType != 1 ?\x0a\x09\x09\x09\x09\x09\x09this.nodeValue :\x0a\x09\x09\x09\x09\x09\x09jQuery.fn.text( [ this ] );\x0a\x09\x09\x09});\x0a\x09\x09});\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09wrapAll: function( html ) {\x0a\x09\x09if ( this[0] )\x0a\x09\x09\x09// The elements to wrap the target around\x0a\x09\x09\x09jQuery( html, this[0].ownerDocument )\x0a\x09\x09\x09\x09.clone()\x0a\x09\x09\x09\x09.insertBefore( this[0] )\x0a\x09\x09\x09\x09.map(function(){\x0a\x09\x09\x09\x09\x09var elem = this;\x0a\x0a\x09\x09\x09\x09\x09while ( elem.firstChild )\x0a\x09\x09\x09\x09\x09\x09elem = elem.firstChild;\x0a\x0a\x09\x09\x09\x09\x09return elem;\x0a\x09\x09\x09\x09})\x0a\x09\x09\x09\x09.append(this);\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09wrapInner: function( html ) {\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09jQuery( this ).contents().wrapAll( html );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09wrap: function( html ) {\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09jQuery( this ).wrapAll( html );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09append: function() {\x0a\x09\x09return this.domManip(arguments, true, false, function(elem){\x0a\x09\x09\x09if (this.nodeType == 1)\x0a\x09\x09\x09\x09this.appendChild( elem );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09prepend: function() {\x0a\x09\x09return this.domManip(arguments, true, true, function(elem){\x0a\x09\x09\x09if (this.nodeType == 1)\x0a\x09\x09\x09\x09this.insertBefore( elem, this.firstChild );\x0a\x09\x09});\x0a\x09},\x0a\x09\x0a\x09before: function() {\x0a\x09\x09return this.domManip(arguments, false, false, function(elem){\x0a\x09\x09\x09this.parentNode.insertBefore( elem, this );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09after: function() {\x0a\x09\x09return this.domManip(arguments, false, true, function(elem){\x0a\x09\x09\x09this.parentNode.insertBefore( elem, this.nextSibling );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09end: function() {\x0a\x09\x09return this.prevObject || jQuery( [] );\x0a\x09},\x0a\x0a\x09find: function( selector ) {\x0a\x09\x09var elems = jQuery.map(this, function(elem){\x0a\x09\x09\x09return jQuery.find( selector, elem );\x0a\x09\x09});\x0a\x0a\x09\x09return this.pushStack( /[^+\x3e] [^+\x3e]/.test( selector ) || selector.indexOf(\x22..\x22) \x3e -1 ?\x0a\x09\x09\x09jQuery.unique( elems ) :\x0a\x09\x09\x09elems );\x0a\x09},\x0a\x0a\x09clone: function( events ) {\x0a\x09\x09// Do the clone\x0a\x09\x09var ret = this.map(function(){\x0a\x09\x09\x09if ( jQuery.browser.msie && !jQuery.isXMLDoc(this) ) {\x0a\x09\x09\x09\x09// IE copies events bound via attachEvent when\x0a\x09\x09\x09\x09// using cloneNode. Calling detachEvent on the\x0a\x09\x09\x09\x09// clone will also remove the events from the orignal\x0a\x09\x09\x09\x09// In order to get around this, we use innerHTML.\x0a\x09\x09\x09\x09// Unfortunately, this means some modifications to \x0a\x09\x09\x09\x09// attributes in IE that are actually only stored \x0a\x09\x09\x09\x09// as properties will not be copied (such as the\x0a\x09\x09\x09\x09// the name attribute on an input).\x0a\x09\x09\x09\x09var clone = this.cloneNode(true),\x0a\x09\x09\x09\x09\x09container = document.createElement(\x22div\x22),\x0a\x09\x09\x09\x09\x09container2 = document.createElement(\x22div\x22);\x0a\x09\x09\x09\x09container.appendChild(clone);\x0a\x09\x09\x09\x09container2.innerHTML = container.innerHTML;\x0a\x09\x09\x09\x09return container2.firstChild;\x0a\x09\x09\x09} else\x0a\x09\x09\x09\x09return this.cloneNode(true);\x0a\x09\x09});\x0a\x0a\x09\x09// Need to set the expando to null on the cloned set if it exists\x0a\x09\x09// removeData doesn\x27t work here, IE removes it from the original as well\x0a\x09\x09// this is primarily for IE but the data expando shouldn\x27t be copied over in any browser\x0a\x09\x09var clone = ret.find(\x22*\x22).andSelf().each(function(){\x0a\x09\x09\x09if ( this[ expando ] != undefined )\x0a\x09\x09\x09\x09this[ expando ] = null;\x0a\x09\x09});\x0a\x09\x09\x0a\x09\x09// Copy the events from the original to the clone\x0a\x09\x09if ( events === true )\x0a\x09\x09\x09this.find(\x22*\x22).andSelf().each(function(i){\x0a\x09\x09\x09\x09if (this.nodeType == 3)\x0a\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09var events = jQuery.data( this, \x22events\x22 );\x0a\x0a\x09\x09\x09\x09for ( var type in events )\x0a\x09\x09\x09\x09\x09for ( var handler in events[ type ] )\x0a\x09\x09\x09\x09\x09\x09jQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );\x0a\x09\x09\x09});\x0a\x0a\x09\x09// Return the cloned set\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09filter: function( selector ) {\x0a\x09\x09return this.pushStack(\x0a\x09\x09\x09jQuery.isFunction( selector ) &&\x0a\x09\x09\x09jQuery.grep(this, function(elem, i){\x0a\x09\x09\x09\x09return selector.call( elem, i );\x0a\x09\x09\x09}) ||\x0a\x0a\x09\x09\x09jQuery.multiFilter( selector, this ) );\x0a\x09},\x0a\x0a\x09not: function( selector ) {\x0a\x09\x09if ( selector.constructor == String )\x0a\x09\x09\x09// test special case where just one selector is passed in\x0a\x09\x09\x09if ( isSimple.test( selector ) )\x0a\x09\x09\x09\x09return this.pushStack( jQuery.multiFilter( selector, this, true ) );\x0a\x09\x09\x09else\x0a\x09\x09\x09\x09selector = jQuery.multiFilter( selector, this );\x0a\x0a\x09\x09var isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;\x0a\x09\x09return this.filter(function() {\x0a\x09\x09\x09return isArrayLike ? jQuery.inArray( this, selector ) \x3c 0 : this != selector;\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09add: function( selector ) {\x0a\x09\x09return !selector ? this : this.pushStack( jQuery.merge( \x0a\x09\x09\x09this.get(),\x0a\x09\x09\x09selector.constructor == String ? \x0a\x09\x09\x09\x09jQuery( selector ).get() :\x0a\x09\x09\x09\x09selector.length != undefined && (!selector.nodeName || jQuery.nodeName(selector, \x22form\x22)) ?\x0a\x09\x09\x09\x09\x09selector : [selector] ) );\x0a\x09},\x0a\x0a\x09is: function( selector ) {\x0a\x09\x09return selector ?\x0a\x09\x09\x09jQuery.multiFilter( selector, this ).length \x3e 0 :\x0a\x09\x09\x09false;\x0a\x09},\x0a\x0a\x09hasClass: function( selector ) {\x0a\x09\x09return this.is( \x22.\x22 + selector );\x0a\x09},\x0a\x09\x0a\x09val: function( value ) {\x0a\x09\x09if ( value == undefined ) {\x0a\x0a\x09\x09\x09if ( this.length ) {\x0a\x09\x09\x09\x09var elem = this[0];\x0a\x0a\x09\x09\x09\x09// We need to handle select boxes special\x0a\x09\x09\x09\x09if ( jQuery.nodeName( elem, \x22select\x22 ) ) {\x0a\x09\x09\x09\x09\x09var index = elem.selectedIndex,\x0a\x09\x09\x09\x09\x09\x09values = [],\x0a\x09\x09\x09\x09\x09\x09options = elem.options,\x0a\x09\x09\x09\x09\x09\x09one = elem.type == \x22select-one\x22;\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09// Nothing was selected\x0a\x09\x09\x09\x09\x09if ( index \x3c 0 )\x0a\x09\x09\x09\x09\x09\x09return null;\x0a\x0a\x09\x09\x09\x09\x09// Loop through all the selected options\x0a\x09\x09\x09\x09\x09for ( var i = one ? index : 0, max = one ? index + 1 : options.length; i \x3c max; i++ ) {\x0a\x09\x09\x09\x09\x09\x09var option = options[ i ];\x0a\x0a\x09\x09\x09\x09\x09\x09if ( option.selected ) {\x0a\x09\x09\x09\x09\x09\x09\x09// Get the specifc value for the option\x0a\x09\x09\x09\x09\x09\x09\x09value = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option.value;\x0a\x09\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09\x09// We don\x27t need an array for one selects\x0a\x09\x09\x09\x09\x09\x09\x09if ( one )\x0a\x09\x09\x09\x09\x09\x09\x09\x09return value;\x0a\x09\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09\x09// Multi-Selects return an array\x0a\x09\x09\x09\x09\x09\x09\x09values.push( value );\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09return values;\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Everything else, we just grab the value\x0a\x09\x09\x09\x09} else\x0a\x09\x09\x09\x09\x09return (this[0].value || \x22\x22).replace(/\x5cr/g, \x22\x22);\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return undefined;\x0a\x09\x09}\x0a\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09if ( this.nodeType != 1 )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09if ( value.constructor == Array && /radio|checkbox/.test( this.type ) )\x0a\x09\x09\x09\x09this.checked = (jQuery.inArray(this.value, value) \x3e= 0 ||\x0a\x09\x09\x09\x09\x09jQuery.inArray(this.name, value) \x3e= 0);\x0a\x0a\x09\x09\x09else if ( jQuery.nodeName( this, \x22select\x22 ) ) {\x0a\x09\x09\x09\x09var values = value.constructor == Array ?\x0a\x09\x09\x09\x09\x09value :\x0a\x09\x09\x09\x09\x09[ value ];\x0a\x0a\x09\x09\x09\x09jQuery( \x22option\x22, this ).each(function(){\x0a\x09\x09\x09\x09\x09this.selected = (jQuery.inArray( this.value, values ) \x3e= 0 ||\x0a\x09\x09\x09\x09\x09\x09jQuery.inArray( this.text, values ) \x3e= 0);\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09if ( !values.length )\x0a\x09\x09\x09\x09\x09this.selectedIndex = -1;\x0a\x0a\x09\x09\x09} else\x0a\x09\x09\x09\x09this.value = value;\x0a\x09\x09});\x0a\x09},\x0a\x09\x0a\x09html: function( value ) {\x0a\x09\x09return value == undefined ?\x0a\x09\x09\x09(this.length ?\x0a\x09\x09\x09\x09this[0].innerHTML :\x0a\x09\x09\x09\x09null) :\x0a\x09\x09\x09this.empty().append( value );\x0a\x09},\x0a\x0a\x09replaceWith: function( value ) {\x0a\x09\x09return this.after( value ).remove();\x0a\x09},\x0a\x0a\x09eq: function( i ) {\x0a\x09\x09return this.slice( i, i + 1 );\x0a\x09},\x0a\x0a\x09slice: function() {\x0a\x09\x09return this.pushStack( Array.prototype.slice.apply( this, arguments ) );\x0a\x09},\x0a\x0a\x09map: function( callback ) {\x0a\x09\x09return this.pushStack( jQuery.map(this, function(elem, i){\x0a\x09\x09\x09return callback.call( elem, i, elem );\x0a\x09\x09}));\x0a\x09},\x0a\x0a\x09andSelf: function() {\x0a\x09\x09return this.add( this.prevObject );\x0a\x09},\x0a\x09\x0a\x09domManip: function( args, table, reverse, callback ) {\x0a\x09\x09var clone = this.length \x3e 1, elems; \x0a\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09if ( !elems ) {\x0a\x09\x09\x09\x09elems = jQuery.clean( args, this.ownerDocument );\x0a\x0a\x09\x09\x09\x09if ( reverse )\x0a\x09\x09\x09\x09\x09elems.reverse();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09var obj = this;\x0a\x0a\x09\x09\x09if ( table && jQuery.nodeName( this, \x22table\x22 ) && jQuery.nodeName( elems[0], \x22tr\x22 ) )\x0a\x09\x09\x09\x09obj = this.getElementsByTagName(\x22tbody\x22)[0] || this.appendChild( this.ownerDocument.createElement(\x22tbody\x22) );\x0a\x0a\x09\x09\x09var scripts = jQuery( [] );\x0a\x0a\x09\x09\x09jQuery.each(elems, function(){\x0a\x09\x09\x09\x09var elem = clone ?\x0a\x09\x09\x09\x09\x09jQuery( this ).clone( true )[0] :\x0a\x09\x09\x09\x09\x09this;\x0a\x0a\x09\x09\x09\x09// execute all scripts after the elements have been injected\x0a\x09\x09\x09\x09if ( jQuery.nodeName( elem, \x22script\x22 ) ) {\x0a\x09\x09\x09\x09\x09scripts = scripts.add( elem );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// Remove any inner scripts for later evaluation\x0a\x09\x09\x09\x09\x09if ( elem.nodeType == 1 )\x0a\x09\x09\x09\x09\x09\x09scripts = scripts.add( jQuery( \x22script\x22, elem ).remove() );\x0a\x0a\x09\x09\x09\x09\x09// Inject the elements into the document\x0a\x09\x09\x09\x09\x09callback.call( obj, elem );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09scripts.each( evalScript );\x0a\x09\x09});\x0a\x09}\x0a};\x0a\x0a// Give the init function the jQuery prototype for later instantiation\x0ajQuery.prototype.init.prototype = jQuery.prototype;\x0a\x0afunction evalScript( i, elem ) {\x0a\x09if ( elem.src )\x0a\x09\x09jQuery.ajax({\x0a\x09\x09\x09url: elem.src,\x0a\x09\x09\x09async: false,\x0a\x09\x09\x09dataType: \x22script\x22\x0a\x09\x09});\x0a\x0a\x09else\x0a\x09\x09jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \x22\x22 );\x0a\x0a\x09if ( elem.parentNode )\x0a\x09\x09elem.parentNode.removeChild( elem );\x0a}\x0a\x0ajQuery.extend = jQuery.fn.extend = function() {\x0a\x09// copy reference to target object\x0a\x09var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\x0a\x0a\x09// Handle a deep copy situation\x0a\x09if ( target.constructor == Boolean ) {\x0a\x09\x09deep = target;\x0a\x09\x09target = arguments[1] || {};\x0a\x09\x09// skip the boolean and the target\x0a\x09\x09i = 2;\x0a\x09}\x0a\x0a\x09// Handle case when target is a string or something (possible in deep copy)\x0a\x09if ( typeof target != \x22object\x22 && typeof target != \x22function\x22 )\x0a\x09\x09target = {};\x0a\x0a\x09// extend jQuery itself if only one argument is passed\x0a\x09if ( length == 1 ) {\x0a\x09\x09target = this;\x0a\x09\x09i = 0;\x0a\x09}\x0a\x0a\x09for ( ; i \x3c length; i++ )\x0a\x09\x09// Only deal with non-null/undefined values\x0a\x09\x09if ( (options = arguments[ i ]) != null )\x0a\x09\x09\x09// Extend the base object\x0a\x09\x09\x09for ( var name in options ) {\x0a\x09\x09\x09\x09// Prevent never-ending loop\x0a\x09\x09\x09\x09if ( target === options[ name ] )\x0a\x09\x09\x09\x09\x09continue;\x0a\x0a\x09\x09\x09\x09// Recurse if we\x27re merging object values\x0a\x09\x09\x09\x09if ( deep && options[ name ] && typeof options[ name ] == \x22object\x22 && target[ name ] && !options[ name ].nodeType )\x0a\x09\x09\x09\x09\x09target[ name ] = jQuery.extend( target[ name ], options[ name ] );\x0a\x0a\x09\x09\x09\x09// Don\x27t bring in undefined values\x0a\x09\x09\x09\x09else if ( options[ name ] != undefined )\x0a\x09\x09\x09\x09\x09target[ name ] = options[ name ];\x0a\x0a\x09\x09\x09}\x0a\x0a\x09// Return the modified object\x0a\x09return target;\x0a};\x0a\x0avar expando = \x22jQuery\x22 + (new Date()).getTime(), uuid = 0, windowData = {};\x0a\x0a// exclude the following css properties to add px\x0avar exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i;\x0a\x0ajQuery.extend({\x0a\x09noConflict: function( deep ) {\x0a\x09\x09window.$ = _$;\x0a\x0a\x09\x09if ( deep )\x0a\x09\x09\x09window.jQuery = _jQuery;\x0a\x0a\x09\x09return jQuery;\x0a\x09},\x0a\x0a\x09// See test/unit/core.js for details concerning this function.\x0a\x09isFunction: function( fn ) {\x0a\x09\x09return !!fn && typeof fn != \x22string\x22 && !fn.nodeName && \x0a\x09\x09\x09fn.constructor != Array && /function/i.test( fn + \x22\x22 );\x0a\x09},\x0a\x09\x0a\x09// check if an element is in a (or is an) XML document\x0a\x09isXMLDoc: function( elem ) {\x0a\x09\x09return elem.documentElement && !elem.body ||\x0a\x09\x09\x09elem.tagName && elem.ownerDocument && !elem.ownerDocument.body;\x0a\x09},\x0a\x0a\x09// Evalulates a script in a global context\x0a\x09globalEval: function( data ) {\x0a\x09\x09data = jQuery.trim( data );\x0a\x0a\x09\x09if ( data ) {\x0a\x09\x09\x09// Inspired by code by Andrea Giammarchi\x0a\x09\x09\x09// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html\x0a\x09\x09\x09var head = document.getElementsByTagName(\x22head\x22)[0] || document.documentElement,\x0a\x09\x09\x09\x09script = document.createElement(\x22script\x22);\x0a\x0a\x09\x09\x09script.type = \x22text/javascript\x22;\x0a\x09\x09\x09if ( jQuery.browser.msie )\x0a\x09\x09\x09\x09script.text = data;\x0a\x09\x09\x09else\x0a\x09\x09\x09\x09script.appendChild( document.createTextNode( data ) );\x0a\x0a\x09\x09\x09head.appendChild( script );\x0a\x09\x09\x09head.removeChild( script );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09nodeName: function( elem, name ) {\x0a\x09\x09return elem.nodeName && elem.nodeName.toUpperCase() == name.toUpperCase();\x0a\x09},\x0a\x09\x0a\x09cache: {},\x0a\x09\x0a\x09data: function( elem, name, data ) {\x0a\x09\x09elem = elem == window ?\x0a\x09\x09\x09windowData :\x0a\x09\x09\x09elem;\x0a\x0a\x09\x09var id = elem[ expando ];\x0a\x0a\x09\x09// Compute a unique ID for the element\x0a\x09\x09if ( !id ) \x0a\x09\x09\x09id = elem[ expando ] = ++uuid;\x0a\x0a\x09\x09// Only generate the data cache if we\x27re\x0a\x09\x09// trying to access or manipulate it\x0a\x09\x09if ( name && !jQuery.cache[ id ] )\x0a\x09\x09\x09jQuery.cache[ id ] = {};\x0a\x09\x09\x0a\x09\x09// Prevent overriding the named cache with undefined values\x0a\x09\x09if ( data != undefined )\x0a\x09\x09\x09jQuery.cache[ id ][ name ] = data;\x0a\x09\x09\x0a\x09\x09// Return the named cache data, or the ID for the element\x09\x0a\x09\x09return name ?\x0a\x09\x09\x09jQuery.cache[ id ][ name ] :\x0a\x09\x09\x09id;\x0a\x09},\x0a\x09\x0a\x09removeData: function( elem, name ) {\x0a\x09\x09elem = elem == window ?\x0a\x09\x09\x09windowData :\x0a\x09\x09\x09elem;\x0a\x0a\x09\x09var id = elem[ expando ];\x0a\x0a\x09\x09// If we want to remove a specific section of the element\x27s data\x0a\x09\x09if ( name ) {\x0a\x09\x09\x09if ( jQuery.cache[ id ] ) {\x0a\x09\x09\x09\x09// Remove the section of cache data\x0a\x09\x09\x09\x09delete jQuery.cache[ id ][ name ];\x0a\x0a\x09\x09\x09\x09// If we\x27ve removed all the data, remove the element\x27s cache\x0a\x09\x09\x09\x09name = \x22\x22;\x0a\x0a\x09\x09\x09\x09for ( name in jQuery.cache[ id ] )\x0a\x09\x09\x09\x09\x09break;\x0a\x0a\x09\x09\x09\x09if ( !name )\x0a\x09\x09\x09\x09\x09jQuery.removeData( elem );\x0a\x09\x09\x09}\x0a\x0a\x09\x09// Otherwise, we want to remove all of the element\x27s data\x0a\x09\x09} else {\x0a\x09\x09\x09// Clean up the element expando\x0a\x09\x09\x09try {\x0a\x09\x09\x09\x09delete elem[ expando ];\x0a\x09\x09\x09} catch(e){\x0a\x09\x09\x09\x09// IE has trouble directly removing the expando\x0a\x09\x09\x09\x09// but it\x27s ok with using removeAttribute\x0a\x09\x09\x09\x09if ( elem.removeAttribute )\x0a\x09\x09\x09\x09\x09elem.removeAttribute( expando );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Completely remove the data cache\x0a\x09\x09\x09delete jQuery.cache[ id ];\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// args is for internal usage only\x0a\x09each: function( object, callback, args ) {\x0a\x09\x09if ( args ) {\x0a\x09\x09\x09if ( object.length == undefined ) {\x0a\x09\x09\x09\x09for ( var name in object )\x0a\x09\x09\x09\x09\x09if ( callback.apply( object[ name ], args ) === false )\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09} else\x0a\x09\x09\x09\x09for ( var i = 0, length = object.length; i \x3c length; i++ )\x0a\x09\x09\x09\x09\x09if ( callback.apply( object[ i ], args ) === false )\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x0a\x09\x09// A special, fast, case for the most common use of each\x0a\x09\x09} else {\x0a\x09\x09\x09if ( object.length == undefined ) {\x0a\x09\x09\x09\x09for ( var name in object )\x0a\x09\x09\x09\x09\x09if ( callback.call( object[ name ], name, object[ name ] ) === false )\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09} else\x0a\x09\x09\x09\x09for ( var i = 0, length = object.length, value = object[0]; \x0a\x09\x09\x09\x09\x09i \x3c length && callback.call( value, i, value ) !== false; value = object[++i] ){}\x0a\x09\x09}\x0a\x0a\x09\x09return object;\x0a\x09},\x0a\x09\x0a\x09prop: function( elem, value, type, i, name ) {\x0a\x09\x09\x09// Handle executable functions\x0a\x09\x09\x09if ( jQuery.isFunction( value ) )\x0a\x09\x09\x09\x09value = value.call( elem, i );\x0a\x09\x09\x09\x09\x0a\x09\x09\x09// Handle passing in a number to a CSS property\x0a\x09\x09\x09return value && value.constructor == Number && type == \x22curCSS\x22 && !exclude.test( name ) ?\x0a\x09\x09\x09\x09value + \x22px\x22 :\x0a\x09\x09\x09\x09value;\x0a\x09},\x0a\x0a\x09className: {\x0a\x09\x09// internal only, use addClass(\x22class\x22)\x0a\x09\x09add: function( elem, classNames ) {\x0a\x09\x09\x09jQuery.each((classNames || \x22\x22).split(/\x5cs+/), function(i, className){\x0a\x09\x09\x09\x09if ( elem.nodeType == 1 && !jQuery.className.has( elem.className, className ) )\x0a\x09\x09\x09\x09\x09elem.className += (elem.className ? \x22 \x22 : \x22\x22) + className;\x0a\x09\x09\x09});\x0a\x09\x09},\x0a\x0a\x09\x09// internal only, use removeClass(\x22class\x22)\x0a\x09\x09remove: function( elem, classNames ) {\x0a\x09\x09\x09if (elem.nodeType == 1)\x0a\x09\x09\x09\x09elem.className = classNames != undefined ?\x0a\x09\x09\x09\x09\x09jQuery.grep(elem.className.split(/\x5cs+/), function(className){\x0a\x09\x09\x09\x09\x09\x09return !jQuery.className.has( classNames, className );\x09\x0a\x09\x09\x09\x09\x09}).join(\x22 \x22) :\x0a\x09\x09\x09\x09\x09\x22\x22;\x0a\x09\x09},\x0a\x0a\x09\x09// internal only, use is(\x22.class\x22)\x0a\x09\x09has: function( elem, className ) {\x0a\x09\x09\x09return jQuery.inArray( className, (elem.className || elem).toString().split(/\x5cs+/) ) \x3e -1;\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// A method for quickly swapping in/out CSS properties to get correct calculations\x0a\x09swap: function( elem, options, callback ) {\x0a\x09\x09var old = {};\x0a\x09\x09// Remember the old values, and insert the new ones\x0a\x09\x09for ( var name in options ) {\x0a\x09\x09\x09old[ name ] = elem.style[ name ];\x0a\x09\x09\x09elem.style[ name ] = options[ name ];\x0a\x09\x09}\x0a\x0a\x09\x09callback.call( elem );\x0a\x0a\x09\x09// Revert the old values\x0a\x09\x09for ( var name in options )\x0a\x09\x09\x09elem.style[ name ] = old[ name ];\x0a\x09},\x0a\x0a\x09css: function( elem, name, force ) {\x0a\x09\x09if ( name == \x22width\x22 || name == \x22height\x22 ) {\x0a\x09\x09\x09var val, props = { position: \x22absolute\x22, visibility: \x22hidden\x22, display:\x22block\x22 }, which = name == \x22width\x22 ? [ \x22Left\x22, \x22Right\x22 ] : [ \x22Top\x22, \x22Bottom\x22 ];\x0a\x09\x09\x0a\x09\x09\x09function getWH() {\x0a\x09\x09\x09\x09val = name == \x22width\x22 ? elem.offsetWidth : elem.offsetHeight;\x0a\x09\x09\x09\x09var padding = 0, border = 0;\x0a\x09\x09\x09\x09jQuery.each( which, function() {\x0a\x09\x09\x09\x09\x09padding += parseFloat(jQuery.curCSS( elem, \x22padding\x22 + this, true)) || 0;\x0a\x09\x09\x09\x09\x09border += parseFloat(jQuery.curCSS( elem, \x22border\x22 + this + \x22Width\x22, true)) || 0;\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09\x09val -= Math.round(padding + border);\x0a\x09\x09\x09}\x0a\x09\x09\x0a\x09\x09\x09if ( jQuery(elem).is(\x22:visible\x22) )\x0a\x09\x09\x09\x09getWH();\x0a\x09\x09\x09else\x0a\x09\x09\x09\x09jQuery.swap( elem, props, getWH );\x0a\x09\x09\x09\x0a\x09\x09\x09return Math.max(0, val);\x0a\x09\x09}\x0a\x09\x09\x0a\x09\x09return jQuery.curCSS( elem, name, force );\x0a\x09},\x0a\x0a\x09curCSS: function( elem, name, force ) {\x0a\x09\x09var ret;\x0a\x0a\x09\x09// A helper method for determining if an element\x27s values are broken\x0a\x09\x09function color( elem ) {\x0a\x09\x09\x09if ( !jQuery.browser.safari )\x0a\x09\x09\x09\x09return false;\x0a\x0a\x09\x09\x09var ret = document.defaultView.getComputedStyle( elem, null );\x0a\x09\x09\x09return !ret || ret.getPropertyValue(\x22color\x22) == \x22\x22;\x0a\x09\x09}\x0a\x0a\x09\x09// We need to handle opacity special in IE\x0a\x09\x09if ( name == \x22opacity\x22 && jQuery.browser.msie ) {\x0a\x09\x09\x09ret = jQuery.attr( elem.style, \x22opacity\x22 );\x0a\x0a\x09\x09\x09return ret == \x22\x22 ?\x0a\x09\x09\x09\x09\x221\x22 :\x0a\x09\x09\x09\x09ret;\x0a\x09\x09}\x0a\x09\x09// Opera sometimes will give the wrong display answer, this fixes it, see #2037\x0a\x09\x09if ( jQuery.browser.opera && name == \x22display\x22 ) {\x0a\x09\x09\x09var save = elem.style.display;\x0a\x09\x09\x09elem.style.display = \x22block\x22;\x0a\x09\x09\x09elem.style.display = save;\x0a\x09\x09}\x0a\x09\x09\x0a\x09\x09// Make sure we\x27re using the right name for getting the float value\x0a\x09\x09if ( name.match( /float/i ) )\x0a\x09\x09\x09name = styleFloat;\x0a\x0a\x09\x09if ( !force && elem.style && elem.style[ name ] )\x0a\x09\x09\x09ret = elem.style[ name ];\x0a\x0a\x09\x09else if ( document.defaultView && document.defaultView.getComputedStyle ) {\x0a\x0a\x09\x09\x09// Only \x22float\x22 is needed here\x0a\x09\x09\x09if ( name.match( /float/i ) )\x0a\x09\x09\x09\x09name = \x22float\x22;\x0a\x0a\x09\x09\x09name = name.replace( /([A-Z])/g, \x22-$1\x22 ).toLowerCase();\x0a\x0a\x09\x09\x09var getComputedStyle = document.defaultView.getComputedStyle( elem, null );\x0a\x0a\x09\x09\x09if ( getComputedStyle && !color( elem ) )\x0a\x09\x09\x09\x09ret = getComputedStyle.getPropertyValue( name );\x0a\x0a\x09\x09\x09// If the element isn\x27t reporting its values properly in Safari\x0a\x09\x09\x09// then some display: none elements are involved\x0a\x09\x09\x09else {\x0a\x09\x09\x09\x09var swap = [], stack = [];\x0a\x0a\x09\x09\x09\x09// Locate all of the parent display: none elements\x0a\x09\x09\x09\x09for ( var a = elem; a && color(a); a = a.parentNode )\x0a\x09\x09\x09\x09\x09stack.unshift(a);\x0a\x0a\x09\x09\x09\x09// Go through and make them visible, but in reverse\x0a\x09\x09\x09\x09// (It would be better if we knew the exact display type that they had)\x0a\x09\x09\x09\x09for ( var i = 0; i \x3c stack.length; i++ )\x0a\x09\x09\x09\x09\x09if ( color( stack[ i ] ) ) {\x0a\x09\x09\x09\x09\x09\x09swap[ i ] = stack[ i ].style.display;\x0a\x09\x09\x09\x09\x09\x09stack[ i ].style.display = \x22block\x22;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Since we flip the display style, we have to handle that\x0a\x09\x09\x09\x09// one special, otherwise get the value\x0a\x09\x09\x09\x09ret = name == \x22display\x22 && swap[ stack.length - 1 ] != null ?\x0a\x09\x09\x09\x09\x09\x22none\x22 :\x0a\x09\x09\x09\x09\x09( getComputedStyle && getComputedStyle.getPropertyValue( name ) ) || \x22\x22;\x0a\x0a\x09\x09\x09\x09// Finally, revert the display styles back\x0a\x09\x09\x09\x09for ( var i = 0; i \x3c swap.length; i++ )\x0a\x09\x09\x09\x09\x09if ( swap[ i ] != null )\x0a\x09\x09\x09\x09\x09\x09stack[ i ].style.display = swap[ i ];\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// We should always get a number back from opacity\x0a\x09\x09\x09if ( name == \x22opacity\x22 && ret == \x22\x22 )\x0a\x09\x09\x09\x09ret = \x221\x22;\x0a\x0a\x09\x09} else if ( elem.currentStyle ) {\x0a\x09\x09\x09var camelCase = name.replace(/\x5c-(\x5cw)/g, function(all, letter){\x0a\x09\x09\x09\x09return letter.toUpperCase();\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09ret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];\x0a\x0a\x09\x09\x09// From the awesome hack by Dean Edwards\x0a\x09\x09\x09// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\x0a\x0a\x09\x09\x09// If we\x27re not dealing with a regular pixel number\x0a\x09\x09\x09// but a number that has a weird ending, we need to convert it to pixels\x0a\x09\x09\x09if ( !/^\x5cd+(px)?$/i.test( ret ) && /^\x5cd/.test( ret ) ) {\x0a\x09\x09\x09\x09// Remember the original values\x0a\x09\x09\x09\x09var style = elem.style.left, runtimeStyle = elem.runtimeStyle.left;\x0a\x0a\x09\x09\x09\x09// Put in the new values to get a computed value out\x0a\x09\x09\x09\x09elem.runtimeStyle.left = elem.currentStyle.left;\x0a\x09\x09\x09\x09elem.style.left = ret || 0;\x0a\x09\x09\x09\x09ret = elem.style.pixelLeft + \x22px\x22;\x0a\x0a\x09\x09\x09\x09// Revert the changed values\x0a\x09\x09\x09\x09elem.style.left = style;\x0a\x09\x09\x09\x09elem.runtimeStyle.left = runtimeStyle;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x09\x0a\x09clean: function( elems, context ) {\x0a\x09\x09var ret = [];\x0a\x09\x09context = context || document;\x0a\x09\x09// !context.createElement fails in IE with an error but returns typeof \x27object\x27\x0a\x09\x09if (typeof context.createElement == \x27undefined\x27) \x0a\x09\x09\x09context = context.ownerDocument || context[0] && context[0].ownerDocument || document;\x0a\x0a\x09\x09jQuery.each(elems, function(i, elem){\x0a\x09\x09\x09if ( !elem )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09if ( elem.constructor == Number )\x0a\x09\x09\x09\x09elem = elem.toString();\x0a\x09\x09\x09\x0a\x09\x09\x09// Convert html string into DOM nodes\x0a\x09\x09\x09if ( typeof elem == \x22string\x22 ) {\x0a\x09\x09\x09\x09// Fix \x22XHTML\x22-style tags in all browsers\x0a\x09\x09\x09\x09elem = elem.replace(/(\x3c(\x5cw+)[^\x3e]*?)\x5c/\x3e/g, function(all, front, tag){\x0a\x09\x09\x09\x09\x09return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\x0a\x09\x09\x09\x09\x09\x09all :\x0a\x09\x09\x09\x09\x09\x09front + \x22\x3e\x3c/\x22 + tag + \x22\x3e\x22;\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09// Trim whitespace, otherwise indexOf won\x27t work as expected\x0a\x09\x09\x09\x09var tags = jQuery.trim( elem ).toLowerCase(), div = context.createElement(\x22div\x22);\x0a\x0a\x09\x09\x09\x09var wrap =\x0a\x09\x09\x09\x09\x09// option or optgroup\x0a\x09\x09\x09\x09\x09!tags.indexOf(\x22\x3copt\x22) &&\x0a\x09\x09\x09\x09\x09[ 1, \x22\x3cselect multiple=\x27multiple\x27\x3e\x22, \x22\x3c/select\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09!tags.indexOf(\x22\x3cleg\x22) &&\x0a\x09\x09\x09\x09\x09[ 1, \x22\x3cfieldset\x3e\x22, \x22\x3c/fieldset\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09tags.match(/^\x3c(thead|tbody|tfoot|colg|cap)/) &&\x0a\x09\x09\x09\x09\x09[ 1, \x22\x3ctable\x3e\x22, \x22\x3c/table\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09!tags.indexOf(\x22\x3ctr\x22) &&\x0a\x09\x09\x09\x09\x09[ 2, \x22\x3ctable\x3e\x3ctbody\x3e\x22, \x22\x3c/tbody\x3e\x3c/table\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09 \x09// \x3cthead\x3e matched above\x0a\x09\x09\x09\x09\x09(!tags.indexOf(\x22\x3ctd\x22) || !tags.indexOf(\x22\x3cth\x22)) &&\x0a\x09\x09\x09\x09\x09[ 3, \x22\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e\x22, \x22\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09!tags.indexOf(\x22\x3ccol\x22) &&\x0a\x09\x09\x09\x09\x09[ 2, \x22\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e\x22, \x22\x3c/colgroup\x3e\x3c/table\x3e\x22 ] ||\x0a\x0a\x09\x09\x09\x09\x09// IE can\x27t serialize \x3clink\x3e and \x3cscript\x3e tags normally\x0a\x09\x09\x09\x09\x09jQuery.browser.msie &&\x0a\x09\x09\x09\x09\x09[ 1, \x22div\x3cdiv\x3e\x22, \x22\x3c/div\x3e\x22 ] ||\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09[ 0, \x22\x22, \x22\x22 ];\x0a\x0a\x09\x09\x09\x09// Go to html and back, then peel off extra wrappers\x0a\x09\x09\x09\x09div.innerHTML = wrap[1] + elem + wrap[2];\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Move to the right depth\x0a\x09\x09\x09\x09while ( wrap[0]-- )\x0a\x09\x09\x09\x09\x09div = div.lastChild;\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Remove IE\x27s autoinserted \x3ctbody\x3e from table fragments\x0a\x09\x09\x09\x09if ( jQuery.browser.msie ) {\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09// String was a \x3ctable\x3e, *may* have spurious \x3ctbody\x3e\x0a\x09\x09\x09\x09\x09var tbody = !tags.indexOf(\x22\x3ctable\x22) && tags.indexOf(\x22\x3ctbody\x22) \x3c 0 ?\x0a\x09\x09\x09\x09\x09\x09div.firstChild && div.firstChild.childNodes :\x0a\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09// String was a bare \x3cthead\x3e or \x3ctfoot\x3e\x0a\x09\x09\x09\x09\x09\x09wrap[1] == \x22\x3ctable\x3e\x22 && tags.indexOf(\x22\x3ctbody\x22) \x3c 0 ?\x0a\x09\x09\x09\x09\x09\x09\x09div.childNodes :\x0a\x09\x09\x09\x09\x09\x09\x09[];\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09for ( var j = tbody.length - 1; j \x3e= 0 ; --j )\x0a\x09\x09\x09\x09\x09\x09if ( jQuery.nodeName( tbody[ j ], \x22tbody\x22 ) && !tbody[ j ].childNodes.length )\x0a\x09\x09\x09\x09\x09\x09\x09tbody[ j ].parentNode.removeChild( tbody[ j ] );\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09// IE completely kills leading whitespace when innerHTML is used\x09\x0a\x09\x09\x09\x09\x09if ( /^\x5cs/.test( elem ) )\x09\x0a\x09\x09\x09\x09\x09\x09div.insertBefore( context.createTextNode( elem.match(/^\x5cs*/)[0] ), div.firstChild );\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09elem = jQuery.makeArray( div.childNodes );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( elem.length === 0 && (!jQuery.nodeName( elem, \x22form\x22 ) && !jQuery.nodeName( elem, \x22select\x22 )) )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09if ( elem[0] == undefined || jQuery.nodeName( elem, \x22form\x22 ) || elem.options )\x0a\x09\x09\x09\x09ret.push( elem );\x0a\x0a\x09\x09\x09else\x0a\x09\x09\x09\x09ret = jQuery.merge( ret, elem );\x0a\x0a\x09\x09});\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x09\x0a\x09attr: function( elem, name, value ) {\x0a\x09\x09// don\x27t set attributes on text and comment nodes\x0a\x09\x09if (!elem || elem.nodeType == 3 || elem.nodeType == 8)\x0a\x09\x09\x09return undefined;\x0a\x0a\x09\x09var fix = jQuery.isXMLDoc( elem ) ?\x0a\x09\x09\x09{} :\x0a\x09\x09\x09jQuery.props;\x0a\x0a\x09\x09// Safari mis-reports the default selected property of a hidden option\x0a\x09\x09// Accessing the parent\x27s selectedIndex property fixes it\x0a\x09\x09if ( name == \x22selected\x22 && jQuery.browser.safari )\x0a\x09\x09\x09elem.parentNode.selectedIndex;\x0a\x09\x09\x0a\x09\x09// Certain attributes only work when accessed via the old DOM 0 way\x0a\x09\x09if ( fix[ name ] ) {\x0a\x09\x09\x09if ( value != undefined )\x0a\x09\x09\x09\x09elem[ fix[ name ] ] = value;\x0a\x0a\x09\x09\x09return elem[ fix[ name ] ];\x0a\x0a\x09\x09} else if ( jQuery.browser.msie && name == \x22style\x22 )\x0a\x09\x09\x09return jQuery.attr( elem.style, \x22cssText\x22, value );\x0a\x0a\x09\x09else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName( elem, \x22form\x22 ) && (name == \x22action\x22 || name == \x22method\x22) )\x0a\x09\x09\x09return elem.getAttributeNode( name ).nodeValue;\x0a\x0a\x09\x09// IE elem.getAttribute passes even for style\x0a\x09\x09else if ( elem.tagName ) {\x0a\x0a\x09\x09\x09if ( value != undefined ) {\x0a\x09\x09\x09\x09// We can\x27t allow the type property to be changed (since it causes problems in IE)\x0a\x09\x09\x09\x09if ( name == \x22type\x22 && jQuery.nodeName( elem, \x22input\x22 ) && elem.parentNode )\x0a\x09\x09\x09\x09\x09throw \x22type property can\x27t be changed\x22;\x0a\x0a\x09\x09\x09\x09// convert the value to a string (all browsers do this but IE) see #1070\x0a\x09\x09\x09\x09elem.setAttribute( name, \x22\x22 + value );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( jQuery.browser.msie && /href|src/.test( name ) && !jQuery.isXMLDoc( elem ) ) \x0a\x09\x09\x09\x09return elem.getAttribute( name, 2 );\x0a\x0a\x09\x09\x09return elem.getAttribute( name );\x0a\x0a\x09\x09// elem is actually elem.style ... set the style\x0a\x09\x09} else {\x0a\x09\x09\x09// IE actually uses filters for opacity\x0a\x09\x09\x09if ( name == \x22opacity\x22 && jQuery.browser.msie ) {\x0a\x09\x09\x09\x09if ( value != undefined ) {\x0a\x09\x09\x09\x09\x09// IE has trouble with opacity if it does not have layout\x0a\x09\x09\x09\x09\x09// Force it by setting the zoom level\x0a\x09\x09\x09\x09\x09elem.zoom = 1; \x0a\x09\x0a\x09\x09\x09\x09\x09// Set the alpha filter to set the opacity\x0a\x09\x09\x09\x09\x09elem.filter = (elem.filter || \x22\x22).replace( /alpha\x5c([^)]*\x5c)/, \x22\x22 ) +\x0a\x09\x09\x09\x09\x09\x09(parseFloat( value ).toString() == \x22NaN\x22 ? \x22\x22 : \x22alpha(opacity=\x22 + value * 100 + \x22)\x22);\x0a\x09\x09\x09\x09}\x0a\x09\x0a\x09\x09\x09\x09return elem.filter && elem.filter.indexOf(\x22opacity=\x22) \x3e= 0 ?\x0a\x09\x09\x09\x09\x09(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100).toString() :\x0a\x09\x09\x09\x09\x09\x22\x22;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09name = name.replace(/-([a-z])/ig, function(all, letter){\x0a\x09\x09\x09\x09return letter.toUpperCase();\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09if ( value != undefined )\x0a\x09\x09\x09\x09elem[ name ] = value;\x0a\x0a\x09\x09\x09return elem[ name ];\x0a\x09\x09}\x0a\x09},\x0a\x09\x0a\x09trim: function( text ) {\x0a\x09\x09return (text || \x22\x22).replace( /^\x5cs+|\x5cs+$/g, \x22\x22 );\x0a\x09},\x0a\x0a\x09makeArray: function( array ) {\x0a\x09\x09var ret = [];\x0a\x0a\x09\x09// Need to use typeof to fight Safari childNodes crashes\x0a\x09\x09if ( typeof array != \x22array\x22 )\x0a\x09\x09\x09for ( var i = 0, length = array.length; i \x3c length; i++ )\x0a\x09\x09\x09\x09ret.push( array[ i ] );\x0a\x09\x09else\x0a\x09\x09\x09ret = array.slice( 0 );\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09inArray: function( elem, array ) {\x0a\x09\x09for ( var i = 0, length = array.length; i \x3c length; i++ )\x0a\x09\x09\x09if ( array[ i ] == elem )\x0a\x09\x09\x09\x09return i;\x0a\x0a\x09\x09return -1;\x0a\x09},\x0a\x0a\x09merge: function( first, second ) {\x0a\x09\x09// We have to loop this way because IE & Opera overwrite the length\x0a\x09\x09// expando of getElementsByTagName\x0a\x0a\x09\x09// Also, we need to make sure that the correct elements are being returned\x0a\x09\x09// (IE returns comment nodes in a \x27*\x27 query)\x0a\x09\x09if ( jQuery.browser.msie ) {\x0a\x09\x09\x09for ( var i = 0; second[ i ]; i++ )\x0a\x09\x09\x09\x09if ( second[ i ].nodeType != 8 )\x0a\x09\x09\x09\x09\x09first.push( second[ i ] );\x0a\x0a\x09\x09} else\x0a\x09\x09\x09for ( var i = 0; second[ i ]; i++ )\x0a\x09\x09\x09\x09first.push( second[ i ] );\x0a\x0a\x09\x09return first;\x0a\x09},\x0a\x0a\x09unique: function( array ) {\x0a\x09\x09var ret = [], done = {};\x0a\x0a\x09\x09try {\x0a\x0a\x09\x09\x09for ( var i = 0, length = array.length; i \x3c length; i++ ) {\x0a\x09\x09\x09\x09var id = jQuery.data( array[ i ] );\x0a\x0a\x09\x09\x09\x09if ( !done[ id ] ) {\x0a\x09\x09\x09\x09\x09done[ id ] = true;\x0a\x09\x09\x09\x09\x09ret.push( array[ i ] );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09} catch( e ) {\x0a\x09\x09\x09ret = array;\x0a\x09\x09}\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09grep: function( elems, callback, inv ) {\x0a\x09\x09// If a string is passed in for the function, make a function\x0a\x09\x09// for it (a handy shortcut)\x0a\x09\x09if ( typeof callback == \x22string\x22 )\x0a\x09\x09\x09callback = eval(\x22false||function(a,i){return \x22 + callback + \x22}\x22);\x0a\x0a\x09\x09var ret = [];\x0a\x0a\x09\x09// Go through the array, only saving the items\x0a\x09\x09// that pass the validator function\x0a\x09\x09for ( var i = 0, length = elems.length; i \x3c length; i++ )\x0a\x09\x09\x09if ( !inv && callback( elems[ i ], i ) || inv && !callback( elems[ i ], i ) )\x0a\x09\x09\x09\x09ret.push( elems[ i ] );\x0a\x0a\x09\x09return ret;\x0a\x09},\x0a\x0a\x09map: function( elems, callback ) {\x0a\x09\x09var ret = [];\x0a\x0a\x09\x09// Go through the array, translating each of the items to their\x0a\x09\x09// new value (or values).\x0a\x09\x09for ( var i = 0, length = elems.length; i \x3c length; i++ ) {\x0a\x09\x09\x09var value = callback( elems[ i ], i );\x0a\x0a\x09\x09\x09if ( value !== null && value != undefined ) {\x0a\x09\x09\x09\x09if ( value.constructor != Array )\x0a\x09\x09\x09\x09\x09value = [ value ];\x0a\x0a\x09\x09\x09\x09ret = ret.concat( value );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return ret;\x0a\x09}\x0a});\x0a\x0avar userAgent = navigator.userAgent.toLowerCase();\x0a\x0a// Figure out what browser is being used\x0ajQuery.browser = {\x0a\x09version: (userAgent.match( /.+(?:rv|it|ra|ie)[\x5c/: ]([\x5cd.]+)/ ) || [])[1],\x0a\x09safari: /webkit/.test( userAgent ),\x0a\x09opera: /opera/.test( userAgent ),\x0a\x09msie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\x0a\x09mozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\x0a};\x0a\x0avar styleFloat = jQuery.browser.msie ?\x0a\x09\x22styleFloat\x22 :\x0a\x09\x22cssFloat\x22;\x0a\x09\x0ajQuery.extend({\x0a\x09// Check to see if the W3C box model is being used\x0a\x09boxModel: !jQuery.browser.msie || document.compatMode == \x22CSS1Compat\x22,\x0a\x09\x0a\x09props: {\x0a\x09\x09\x22for\x22: \x22htmlFor\x22,\x0a\x09\x09\x22class\x22: \x22className\x22,\x0a\x09\x09\x22float\x22: styleFloat,\x0a\x09\x09cssFloat: styleFloat,\x0a\x09\x09styleFloat: styleFloat,\x0a\x09\x09innerHTML: \x22innerHTML\x22,\x0a\x09\x09className: \x22className\x22,\x0a\x09\x09value: \x22value\x22,\x0a\x09\x09disabled: \x22disabled\x22,\x0a\x09\x09checked: \x22checked\x22,\x0a\x09\x09readonly: \x22readOnly\x22,\x0a\x09\x09selected: \x22selected\x22,\x0a\x09\x09maxlength: \x22maxLength\x22,\x0a\x09\x09selectedIndex: \x22selectedIndex\x22,\x0a\x09\x09defaultValue: \x22defaultValue\x22,\x0a\x09\x09tagName: \x22tagName\x22,\x0a\x09\x09nodeName: \x22nodeName\x22\x0a\x09}\x0a});\x0a\x0ajQuery.each({\x0a\x09parent: \x22elem.parentNode\x22,\x0a\x09parents: \x22jQuery.dir(elem,\x27parentNode\x27)\x22,\x0a\x09next: \x22jQuery.nth(elem,2,\x27nextSibling\x27)\x22,\x0a\x09prev: \x22jQuery.nth(elem,2,\x27previousSibling\x27)\x22,\x0a\x09nextAll: \x22jQuery.dir(elem,\x27nextSibling\x27)\x22,\x0a\x09prevAll: \x22jQuery.dir(elem,\x27previousSibling\x27)\x22,\x0a\x09siblings: \x22jQuery.sibling(elem.parentNode.firstChild,elem)\x22,\x0a\x09children: \x22jQuery.sibling(elem.firstChild)\x22,\x0a\x09contents: \x22jQuery.nodeName(elem,\x27iframe\x27)?elem.contentDocument||elem.contentWindow.document:jQuery.makeArray(elem.childNodes)\x22\x0a}, function(name, fn){\x0a\x09fn = eval(\x22false||function(elem){return \x22 + fn + \x22}\x22);\x0a\x0a\x09jQuery.fn[ name ] = function( selector ) {\x0a\x09\x09var ret = jQuery.map( this, fn );\x0a\x0a\x09\x09if ( selector && typeof selector == \x22string\x22 )\x0a\x09\x09\x09ret = jQuery.multiFilter( selector, ret );\x0a\x0a\x09\x09return this.pushStack( jQuery.unique( ret ) );\x0a\x09};\x0a});\x0a\x0ajQuery.each({\x0a\x09appendTo: \x22append\x22,\x0a\x09prependTo: \x22prepend\x22,\x0a\x09insertBefore: \x22before\x22,\x0a\x09insertAfter: \x22after\x22,\x0a\x09replaceAll: \x22replaceWith\x22\x0a}, function(name, original){\x0a\x09jQuery.fn[ name ] = function() {\x0a\x09\x09var args = arguments;\x0a\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09for ( var i = 0, length = args.length; i \x3c length; i++ )\x0a\x09\x09\x09\x09jQuery( args[ i ] )[ original ]( this );\x0a\x09\x09});\x0a\x09};\x0a});\x0a\x0ajQuery.each({\x0a\x09removeAttr: function( name ) {\x0a\x09\x09jQuery.attr( this, name, \x22\x22 );\x0a\x09\x09if (this.nodeType == 1) \x0a\x09\x09\x09this.removeAttribute( name );\x0a\x09},\x0a\x0a\x09addClass: function( classNames ) {\x0a\x09\x09jQuery.className.add( this, classNames );\x0a\x09},\x0a\x0a\x09removeClass: function( classNames ) {\x0a\x09\x09jQuery.className.remove( this, classNames );\x0a\x09},\x0a\x0a\x09toggleClass: function( classNames ) {\x0a\x09\x09jQuery.className[ jQuery.className.has( this, classNames ) ? \x22remove\x22 : \x22add\x22 ]( this, classNames );\x0a\x09},\x0a\x0a\x09remove: function( selector ) {\x0a\x09\x09if ( !selector || jQuery.filter( selector, [ this ] ).r.length ) {\x0a\x09\x09\x09// Prevent memory leaks\x0a\x09\x09\x09jQuery( \x22*\x22, this ).add(this).each(function(){\x0a\x09\x09\x09\x09jQuery.event.remove(this);\x0a\x09\x09\x09\x09jQuery.removeData(this);\x0a\x09\x09\x09});\x0a\x09\x09\x09if (this.parentNode)\x0a\x09\x09\x09\x09this.parentNode.removeChild( this );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09empty: function() {\x0a\x09\x09// Remove element nodes and prevent memory leaks\x0a\x09\x09jQuery( \x22\x3e*\x22, this ).remove();\x0a\x09\x09\x0a\x09\x09// Remove any remaining nodes\x0a\x09\x09while ( this.firstChild )\x0a\x09\x09\x09this.removeChild( this.firstChild );\x0a\x09}\x0a}, function(name, fn){\x0a\x09jQuery.fn[ name ] = function(){\x0a\x09\x09return this.each( fn, arguments );\x0a\x09};\x0a});\x0a\x0ajQuery.each([ \x22Height\x22, \x22Width\x22 ], function(i, name){\x0a\x09var type = name.toLowerCase();\x0a\x09\x0a\x09jQuery.fn[ type ] = function( size ) {\x0a\x09\x09// Get window width or height\x0a\x09\x09return this[0] == window ?\x0a\x09\x09\x09// Opera reports document.body.client[Width/Height] properly in both quirks and standards\x0a\x09\x09\x09jQuery.browser.opera && document.body[ \x22client\x22 + name ] || \x0a\x09\x09\x09\x0a\x09\x09\x09// Safari reports inner[Width/Height] just fine (Mozilla and Opera include scroll bar widths)\x0a\x09\x09\x09jQuery.browser.safari && window[ \x22inner\x22 + name ] ||\x0a\x09\x09\x09\x0a\x09\x09\x09// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\x0a\x09\x09\x09document.compatMode == \x22CSS1Compat\x22 && document.documentElement[ \x22client\x22 + name ] || document.body[ \x22client\x22 + name ] :\x0a\x09\x09\x0a\x09\x09\x09// Get document width or height\x0a\x09\x09\x09this[0] == document ?\x0a\x09\x09\x09\x09// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\x0a\x09\x09\x09\x09Math.max( \x0a\x09\x09\x09\x09\x09Math.max(document.body[\x22scroll\x22 + name], document.documentElement[\x22scroll\x22 + name]), \x0a\x09\x09\x09\x09\x09Math.max(document.body[\x22offset\x22 + name], document.documentElement[\x22offset\x22 + name]) \x0a\x09\x09\x09\x09) :\x0a\x0a\x09\x09\x09\x09// Get or set width or height on the element\x0a\x09\x09\x09\x09size == undefined ?\x0a\x09\x09\x09\x09\x09// Get width or height on the element\x0a\x09\x09\x09\x09\x09(this.length ? jQuery.css( this[0], type ) : null) :\x0a\x0a\x09\x09\x09\x09\x09// Set the width or height on the element (default to pixels if value is unitless)\x0a\x09\x09\x09\x09\x09this.css( type, size.constructor == String ? size : size + \x22px\x22 );\x0a\x09};\x0a});\x0a\x0avar chars = jQuery.browser.safari && parseInt(jQuery.browser.version) \x3c 417 ?\x0a\x09\x09\x22(?:[\x5c\x5cw*_-]|\x5c\x5c\x5c\x5c.)\x22 :\x0a\x09\x09\x22(?:[\x5c\x5cw\x5cu0128-\x5cuFFFF*_-]|\x5c\x5c\x5c\x5c.)\x22,\x0a\x09quickChild = new RegExp(\x22^\x3e\x5c\x5cs*(\x22 + chars + \x22+)\x22),\x0a\x09quickID = new RegExp(\x22^(\x22 + chars + \x22+)(#)(\x22 + chars + \x22+)\x22),\x0a\x09quickClass = new RegExp(\x22^([#.]?)(\x22 + chars + \x22*)\x22);\x0a\x0ajQuery.extend({\x0a\x09expr: {\x0a\x09\x09\x22\x22: \x22m[2]==\x27*\x27||jQuery.nodeName(a,m[2])\x22,\x0a\x09\x09\x22#\x22: \x22a.getAttribute(\x27id\x27)==m[2]\x22,\x0a\x09\x09\x22:\x22: {\x0a\x09\x09\x09// Position Checks\x0a\x09\x09\x09lt: \x22i\x3cm[3]-0\x22,\x0a\x09\x09\x09gt: \x22i\x3em[3]-0\x22,\x0a\x09\x09\x09nth: \x22m[3]-0==i\x22,\x0a\x09\x09\x09eq: \x22m[3]-0==i\x22,\x0a\x09\x09\x09first: \x22i==0\x22,\x0a\x09\x09\x09last: \x22i==r.length-1\x22,\x0a\x09\x09\x09even: \x22i%2==0\x22,\x0a\x09\x09\x09odd: \x22i%2\x22,\x0a\x0a\x09\x09\x09// Child Checks\x0a\x09\x09\x09\x22first-child\x22: \x22a.parentNode.getElementsByTagName(\x27*\x27)[0]==a\x22,\x0a\x09\x09\x09\x22last-child\x22: \x22jQuery.nth(a.parentNode.lastChild,1,\x27previousSibling\x27)==a\x22,\x0a\x09\x09\x09\x22only-child\x22: \x22!jQuery.nth(a.parentNode.lastChild,2,\x27previousSibling\x27)\x22,\x0a\x0a\x09\x09\x09// Parent Checks\x0a\x09\x09\x09parent: \x22a.firstChild\x22,\x0a\x09\x09\x09empty: \x22!a.firstChild\x22,\x0a\x0a\x09\x09\x09// Text Check\x0a\x09\x09\x09contains: \x22(a.textContent||a.innerText||jQuery(a).text()||\x27\x27).indexOf(m[3])\x3e=0\x22,\x0a\x0a\x09\x09\x09// Visibility\x0a\x09\x09\x09visible: \x27\x22hidden\x22!=a.type&&jQuery.css(a,\x22display\x22)!=\x22none\x22&&jQuery.css(a,\x22visibility\x22)!=\x22hidden\x22\x27,\x0a\x09\x09\x09hidden: \x27\x22hidden\x22==a.type||jQuery.css(a,\x22display\x22)==\x22none\x22||jQuery.css(a,\x22visibility\x22)==\x22hidden\x22\x27,\x0a\x0a\x09\x09\x09// Form attributes\x0a\x09\x09\x09enabled: \x22!a.disabled\x22,\x0a\x09\x09\x09disabled: \x22a.disabled\x22,\x0a\x09\x09\x09checked: \x22a.checked\x22,\x0a\x09\x09\x09selected: \x22a.selected||jQuery.attr(a,\x27selected\x27)\x22,\x0a\x0a\x09\x09\x09// Form elements\x0a\x09\x09\x09text: \x22\x27text\x27==a.type\x22,\x0a\x09\x09\x09radio: \x22\x27radio\x27==a.type\x22,\x0a\x09\x09\x09checkbox: \x22\x27checkbox\x27==a.type\x22,\x0a\x09\x09\x09file: \x22\x27file\x27==a.type\x22,\x0a\x09\x09\x09password: \x22\x27password\x27==a.type\x22,\x0a\x09\x09\x09submit: \x22\x27submit\x27==a.type\x22,\x0a\x09\x09\x09image: \x22\x27image\x27==a.type\x22,\x0a\x09\x09\x09reset: \x22\x27reset\x27==a.type\x22,\x0a\x09\x09\x09button: \x27\x22button\x22==a.type||jQuery.nodeName(a,\x22button\x22)\x27,\x0a\x09\x09\x09input: \x22/input|select|textarea|button/i.test(a.nodeName)\x22,\x0a\x0a\x09\x09\x09// :has()\x0a\x09\x09\x09has: \x22jQuery.find(m[3],a).length\x22,\x0a\x0a\x09\x09\x09// :header\x0a\x09\x09\x09header: \x22/h\x5c\x5cd/i.test(a.nodeName)\x22,\x0a\x0a\x09\x09\x09// :animated\x0a\x09\x09\x09animated: \x22jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length\x22\x0a\x09\x09}\x0a\x09},\x0a\x09\x0a\x09// The regular expressions that power the parsing engine\x0a\x09parse: [\x0a\x09\x09// Match: [@value=\x27test\x27], [@foo]\x0a\x09\x09/^(\x5c[) *@?([\x5cw-]+) *([!*$^~=]*) *(\x27?\x22?)(.*?)\x5c4 *\x5c]/,\x0a\x0a\x09\x09// Match: :contains(\x27foo\x27)\x0a\x09\x09/^(:)([\x5cw-]+)\x5c(\x22?\x27?(.*?(\x5c(.*?\x5c))?[^(]*?)\x22?\x27?\x5c)/,\x0a\x0a\x09\x09// Match: :even, :last-chlid, #id, .class\x0a\x09\x09new RegExp(\x22^([:.#]*)(\x22 + chars + \x22+)\x22)\x0a\x09],\x0a\x0a\x09multiFilter: function( expr, elems, not ) {\x0a\x09\x09var old, cur = [];\x0a\x0a\x09\x09while ( expr && expr != old ) {\x0a\x09\x09\x09old = expr;\x0a\x09\x09\x09var f = jQuery.filter( expr, elems, not );\x0a\x09\x09\x09expr = f.t.replace(/^\x5cs*,\x5cs*/, \x22\x22 );\x0a\x09\x09\x09cur = not ? elems = f.r : jQuery.merge( cur, f.r );\x0a\x09\x09}\x0a\x0a\x09\x09return cur;\x0a\x09},\x0a\x0a\x09find: function( t, context ) {\x0a\x09\x09// Quickly handle non-string expressions\x0a\x09\x09if ( typeof t != \x22string\x22 )\x0a\x09\x09\x09return [ t ];\x0a\x0a\x09\x09// check to make sure context is a DOM element or a document\x0a\x09\x09if ( context && context.nodeType != 1 && context.nodeType != 9)\x0a\x09\x09\x09return [ ];\x0a\x0a\x09\x09// Set the correct context (if none is provided)\x0a\x09\x09context = context || document;\x0a\x0a\x09\x09// Initialize the search\x0a\x09\x09var ret = [context], done = [], last, nodeName;\x0a\x0a\x09\x09// Continue while a selector expression exists, and while\x0a\x09\x09// we\x27re no longer looping upon ourselves\x0a\x09\x09while ( t && last != t ) {\x0a\x09\x09\x09var r = [];\x0a\x09\x09\x09last = t;\x0a\x0a\x09\x09\x09t = jQuery.trim(t);\x0a\x0a\x09\x09\x09var foundToken = false;\x0a\x0a\x09\x09\x09// An attempt at speeding up child selectors that\x0a\x09\x09\x09// point to a specific element tag\x0a\x09\x09\x09var re = quickChild;\x0a\x09\x09\x09var m = re.exec(t);\x0a\x0a\x09\x09\x09if ( m ) {\x0a\x09\x09\x09\x09nodeName = m[1].toUpperCase();\x0a\x0a\x09\x09\x09\x09// Perform our own iteration and filter\x0a\x09\x09\x09\x09for ( var i = 0; ret[i]; i++ )\x0a\x09\x09\x09\x09\x09for ( var c = ret[i].firstChild; c; c = c.nextSibling )\x0a\x09\x09\x09\x09\x09\x09if ( c.nodeType == 1 && (nodeName == \x22*\x22 || c.nodeName.toUpperCase() == nodeName) )\x0a\x09\x09\x09\x09\x09\x09\x09r.push( c );\x0a\x0a\x09\x09\x09\x09ret = r;\x0a\x09\x09\x09\x09t = t.replace( re, \x22\x22 );\x0a\x09\x09\x09\x09if ( t.indexOf(\x22 \x22) == 0 ) continue;\x0a\x09\x09\x09\x09foundToken = true;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09re = /^([\x3e+~])\x5cs*(\x5cw*)/i;\x0a\x0a\x09\x09\x09\x09if ( (m = re.exec(t)) != null ) {\x0a\x09\x09\x09\x09\x09r = [];\x0a\x0a\x09\x09\x09\x09\x09var merge = {};\x0a\x09\x09\x09\x09\x09nodeName = m[2].toUpperCase();\x0a\x09\x09\x09\x09\x09m = m[1];\x0a\x0a\x09\x09\x09\x09\x09for ( var j = 0, rl = ret.length; j \x3c rl; j++ ) {\x0a\x09\x09\x09\x09\x09\x09var n = m == \x22~\x22 || m == \x22+\x22 ? ret[j].nextSibling : ret[j].firstChild;\x0a\x09\x09\x09\x09\x09\x09for ( ; n; n = n.nextSibling )\x0a\x09\x09\x09\x09\x09\x09\x09if ( n.nodeType == 1 ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09var id = jQuery.data(n);\x0a\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( m == \x22~\x22 && merge[id] ) break;\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09\x09\x09if (!nodeName || n.nodeName.toUpperCase() == nodeName ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09if ( m == \x22~\x22 ) merge[id] = true;\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09r.push( n );\x0a\x09\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( m == \x22+\x22 ) break;\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09ret = r;\x0a\x0a\x09\x09\x09\x09\x09// And remove the token\x0a\x09\x09\x09\x09\x09t = jQuery.trim( t.replace( re, \x22\x22 ) );\x0a\x09\x09\x09\x09\x09foundToken = true;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// See if there\x27s still an expression, and that we haven\x27t already\x0a\x09\x09\x09// matched a token\x0a\x09\x09\x09if ( t && !foundToken ) {\x0a\x09\x09\x09\x09// Handle multiple expressions\x0a\x09\x09\x09\x09if ( !t.indexOf(\x22,\x22) ) {\x0a\x09\x09\x09\x09\x09// Clean the result set\x0a\x09\x09\x09\x09\x09if ( context == ret[0] ) ret.shift();\x0a\x0a\x09\x09\x09\x09\x09// Merge the result sets\x0a\x09\x09\x09\x09\x09done = jQuery.merge( done, ret );\x0a\x0a\x09\x09\x09\x09\x09// Reset the context\x0a\x09\x09\x09\x09\x09r = ret = [context];\x0a\x0a\x09\x09\x09\x09\x09// Touch up the selector string\x0a\x09\x09\x09\x09\x09t = \x22 \x22 + t.substr(1,t.length);\x0a\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// Optimize for the case nodeName#idName\x0a\x09\x09\x09\x09\x09var re2 = quickID;\x0a\x09\x09\x09\x09\x09var m = re2.exec(t);\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09// Re-organize the results, so that they\x27re consistent\x0a\x09\x09\x09\x09\x09if ( m ) {\x0a\x09\x09\x09\x09\x09\x09m = [ 0, m[2], m[3], m[1] ];\x0a\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09// Otherwise, do a traditional filter check for\x0a\x09\x09\x09\x09\x09\x09// ID, class, and element selectors\x0a\x09\x09\x09\x09\x09\x09re2 = quickClass;\x0a\x09\x09\x09\x09\x09\x09m = re2.exec(t);\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09m[2] = m[2].replace(/\x5c\x5c/g, \x22\x22);\x0a\x0a\x09\x09\x09\x09\x09var elem = ret[ret.length-1];\x0a\x0a\x09\x09\x09\x09\x09// Try to do a global search by ID, where we can\x0a\x09\x09\x09\x09\x09if ( m[1] == \x22#\x22 && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\x0a\x09\x09\x09\x09\x09\x09// Optimization for HTML document case\x0a\x09\x09\x09\x09\x09\x09var oid = elem.getElementById(m[2]);\x0a\x09\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09// Do a quick check for the existence of the actual ID attribute\x0a\x09\x09\x09\x09\x09\x09// to avoid selecting by the name attribute in IE\x0a\x09\x09\x09\x09\x09\x09// also check to insure id is a string to avoid selecting an element with the name of \x27id\x27 inside a form\x0a\x09\x09\x09\x09\x09\x09if ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \x22string\x22 && oid.id != m[2] )\x0a\x09\x09\x09\x09\x09\x09\x09oid = jQuery(\x27[@id=\x22\x27+m[2]+\x27\x22]\x27, elem)[0];\x0a\x0a\x09\x09\x09\x09\x09\x09// Do a quick check for node name (where applicable) so\x0a\x09\x09\x09\x09\x09\x09// that div#foo searches will be really fast\x0a\x09\x09\x09\x09\x09\x09ret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09// We need to find all descendant elements\x0a\x09\x09\x09\x09\x09\x09for ( var i = 0; ret[i]; i++ ) {\x0a\x09\x09\x09\x09\x09\x09\x09// Grab the tag name being searched for\x0a\x09\x09\x09\x09\x09\x09\x09var tag = m[1] == \x22#\x22 && m[3] ? m[3] : m[1] != \x22\x22 || m[0] == \x22\x22 ? \x22*\x22 : m[2];\x0a\x0a\x09\x09\x09\x09\x09\x09\x09// Handle IE7 being really dumb about \x3cobject\x3es\x0a\x09\x09\x09\x09\x09\x09\x09if ( tag == \x22*\x22 && ret[i].nodeName.toLowerCase() == \x22object\x22 )\x0a\x09\x09\x09\x09\x09\x09\x09\x09tag = \x22param\x22;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09r = jQuery.merge( r, ret[i].getElementsByTagName( tag ));\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09// It\x27s faster to filter by class and be done with it\x0a\x09\x09\x09\x09\x09\x09if ( m[1] == \x22.\x22 )\x0a\x09\x09\x09\x09\x09\x09\x09r = jQuery.classFilter( r, m[2] );\x0a\x0a\x09\x09\x09\x09\x09\x09// Same with ID filtering\x0a\x09\x09\x09\x09\x09\x09if ( m[1] == \x22#\x22 ) {\x0a\x09\x09\x09\x09\x09\x09\x09var tmp = [];\x0a\x0a\x09\x09\x09\x09\x09\x09\x09// Try to find the element with the ID\x0a\x09\x09\x09\x09\x09\x09\x09for ( var i = 0; r[i]; i++ )\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( r[i].getAttribute(\x22id\x22) == m[2] ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09tmp = [ r[i] ];\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09r = tmp;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09ret = r;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09t = t.replace( re2, \x22\x22 );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// If a selector string still exists\x0a\x09\x09\x09if ( t ) {\x0a\x09\x09\x09\x09// Attempt to filter it\x0a\x09\x09\x09\x09var val = jQuery.filter(t,r);\x0a\x09\x09\x09\x09ret = r = val.r;\x0a\x09\x09\x09\x09t = jQuery.trim(val.t);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// An error occurred with the selector;\x0a\x09\x09// just return an empty set instead\x0a\x09\x09if ( t )\x0a\x09\x09\x09ret = [];\x0a\x0a\x09\x09// Remove the root context\x0a\x09\x09if ( ret && context == ret[0] )\x0a\x09\x09\x09ret.shift();\x0a\x0a\x09\x09// And combine the results\x0a\x09\x09done = jQuery.merge( done, ret );\x0a\x0a\x09\x09return done;\x0a\x09},\x0a\x0a\x09classFilter: function(r,m,not){\x0a\x09\x09m = \x22 \x22 + m + \x22 \x22;\x0a\x09\x09var tmp = [];\x0a\x09\x09for ( var i = 0; r[i]; i++ ) {\x0a\x09\x09\x09var pass = (\x22 \x22 + r[i].className + \x22 \x22).indexOf( m ) \x3e= 0;\x0a\x09\x09\x09if ( !not && pass || not && !pass )\x0a\x09\x09\x09\x09tmp.push( r[i] );\x0a\x09\x09}\x0a\x09\x09return tmp;\x0a\x09},\x0a\x0a\x09filter: function(t,r,not) {\x0a\x09\x09var last;\x0a\x0a\x09\x09// Look for common filter expressions\x0a\x09\x09while ( t && t != last ) {\x0a\x09\x09\x09last = t;\x0a\x0a\x09\x09\x09var p = jQuery.parse, m;\x0a\x0a\x09\x09\x09for ( var i = 0; p[i]; i++ ) {\x0a\x09\x09\x09\x09m = p[i].exec( t );\x0a\x0a\x09\x09\x09\x09if ( m ) {\x0a\x09\x09\x09\x09\x09// Remove what we just matched\x0a\x09\x09\x09\x09\x09t = t.substring( m[0].length );\x0a\x0a\x09\x09\x09\x09\x09m[2] = m[2].replace(/\x5c\x5c/g, \x22\x22);\x0a\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( !m )\x0a\x09\x09\x09\x09break;\x0a\x0a\x09\x09\x09// :not() is a special case that can be optimized by\x0a\x09\x09\x09// keeping it out of the expression list\x0a\x09\x09\x09if ( m[1] == \x22:\x22 && m[2] == \x22not\x22 )\x0a\x09\x09\x09\x09// optimize if only one selector found (most common case)\x0a\x09\x09\x09\x09r = isSimple.test( m[3] ) ?\x0a\x09\x09\x09\x09\x09jQuery.filter(m[3], r, true).r :\x0a\x09\x09\x09\x09\x09jQuery( r ).not( m[3] );\x0a\x0a\x09\x09\x09// We can get a big speed boost by filtering by class here\x0a\x09\x09\x09else if ( m[1] == \x22.\x22 )\x0a\x09\x09\x09\x09r = jQuery.classFilter(r, m[2], not);\x0a\x0a\x09\x09\x09else if ( m[1] == \x22[\x22 ) {\x0a\x09\x09\x09\x09var tmp = [], type = m[3];\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09for ( var i = 0, rl = r.length; i \x3c rl; i++ ) {\x0a\x09\x09\x09\x09\x09var a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09if ( z == null || /href|src|selected/.test(m[2]) )\x0a\x09\x09\x09\x09\x09\x09z = jQuery.attr(a,m[2]) || \x27\x27;\x0a\x0a\x09\x09\x09\x09\x09if ( (type == \x22\x22 && !!z ||\x0a\x09\x09\x09\x09\x09\x09 type == \x22=\x22 && z == m[5] ||\x0a\x09\x09\x09\x09\x09\x09 type == \x22!=\x22 && z != m[5] ||\x0a\x09\x09\x09\x09\x09\x09 type == \x22^=\x22 && z && !z.indexOf(m[5]) ||\x0a\x09\x09\x09\x09\x09\x09 type == \x22$=\x22 && z.substr(z.length - m[5].length) == m[5] ||\x0a\x09\x09\x09\x09\x09\x09 (type == \x22*=\x22 || type == \x22~=\x22) && z.indexOf(m[5]) \x3e= 0) ^ not )\x0a\x09\x09\x09\x09\x09\x09\x09tmp.push( a );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09r = tmp;\x0a\x0a\x09\x09\x09// We can get a speed boost by handling nth-child here\x0a\x09\x09\x09} else if ( m[1] == \x22:\x22 && m[2] == \x22nth-child\x22 ) {\x0a\x09\x09\x09\x09var merge = {}, tmp = [],\x0a\x09\x09\x09\x09\x09// parse equations like \x27even\x27, \x27odd\x27, \x275\x27, \x272n\x27, \x273n+2\x27, \x274n-1\x27, \x27-n+6\x27\x0a\x09\x09\x09\x09\x09test = /(-?)(\x5cd*)n((?:\x5c+|-)?\x5cd*)/.exec(\x0a\x09\x09\x09\x09\x09\x09m[3] == \x22even\x22 && \x222n\x22 || m[3] == \x22odd\x22 && \x222n+1\x22 ||\x0a\x09\x09\x09\x09\x09\x09!/\x5cD/.test(m[3]) && \x220n+\x22 + m[3] || m[3]),\x0a\x09\x09\x09\x09\x09// calculate the numbers (first)n+(last) including if they are negative\x0a\x09\x09\x09\x09\x09first = (test[1] + (test[2] || 1)) - 0, last = test[3] - 0;\x0a \x0a\x09\x09\x09\x09// loop through all the elements left in the jQuery object\x0a\x09\x09\x09\x09for ( var i = 0, rl = r.length; i \x3c rl; i++ ) {\x0a\x09\x09\x09\x09\x09var node = r[i], parentNode = node.parentNode, id = jQuery.data(parentNode);\x0a\x0a\x09\x09\x09\x09\x09if ( !merge[id] ) {\x0a\x09\x09\x09\x09\x09\x09var c = 1;\x0a\x0a\x09\x09\x09\x09\x09\x09for ( var n = parentNode.firstChild; n; n = n.nextSibling )\x0a\x09\x09\x09\x09\x09\x09\x09if ( n.nodeType == 1 )\x0a\x09\x09\x09\x09\x09\x09\x09\x09n.nodeIndex = c++;\x0a\x0a\x09\x09\x09\x09\x09\x09merge[id] = true;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09var add = false;\x0a\x0a\x09\x09\x09\x09\x09if ( first == 0 ) {\x0a\x09\x09\x09\x09\x09\x09if ( node.nodeIndex == last )\x0a\x09\x09\x09\x09\x09\x09\x09add = true;\x0a\x09\x09\x09\x09\x09} else if ( (node.nodeIndex - last) % first == 0 && (node.nodeIndex - last) / first \x3e= 0 )\x0a\x09\x09\x09\x09\x09\x09add = true;\x0a\x0a\x09\x09\x09\x09\x09if ( add ^ not )\x0a\x09\x09\x09\x09\x09\x09tmp.push( node );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09r = tmp;\x0a\x0a\x09\x09\x09// Otherwise, find the expression to execute\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09var f = jQuery.expr[m[1]];\x0a\x09\x09\x09\x09if ( typeof f != \x22string\x22 )\x0a\x09\x09\x09\x09\x09f = jQuery.expr[m[1]][m[2]];\x0a\x0a\x09\x09\x09\x09// Build a custom macro to enclose it\x0a\x09\x09\x09\x09f = eval(\x22false||function(a,i){return \x22 + f + \x22}\x22);\x0a\x0a\x09\x09\x09\x09// Execute it against the current filter\x0a\x09\x09\x09\x09r = jQuery.grep( r, f, not );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// Return an array of filtered elements (r)\x0a\x09\x09// and the modified expression string (t)\x0a\x09\x09return { r: r, t: t };\x0a\x09},\x0a\x0a\x09dir: function( elem, dir ){\x0a\x09\x09var matched = [];\x0a\x09\x09var cur = elem[dir];\x0a\x09\x09while ( cur && cur != document ) {\x0a\x09\x09\x09if ( cur.nodeType == 1 )\x0a\x09\x09\x09\x09matched.push( cur );\x0a\x09\x09\x09cur = cur[dir];\x0a\x09\x09}\x0a\x09\x09return matched;\x0a\x09},\x0a\x09\x0a\x09nth: function(cur,result,dir,elem){\x0a\x09\x09result = result || 1;\x0a\x09\x09var num = 0;\x0a\x0a\x09\x09for ( ; cur; cur = cur[dir] )\x0a\x09\x09\x09if ( cur.nodeType == 1 && ++num == result )\x0a\x09\x09\x09\x09break;\x0a\x0a\x09\x09return cur;\x0a\x09},\x0a\x09\x0a\x09sibling: function( n, elem ) {\x0a\x09\x09var r = [];\x0a\x0a\x09\x09for ( ; n; n = n.nextSibling ) {\x0a\x09\x09\x09if ( n.nodeType == 1 && (!elem || n != elem) )\x0a\x09\x09\x09\x09r.push( n );\x0a\x09\x09}\x0a\x0a\x09\x09return r;\x0a\x09}\x0a});\x0a\x0a/*\x0a * A number of helper functions used for managing events.\x0a * Many of the ideas behind this code orignated from \x0a * Dean Edwards\x27 addEvent library.\x0a */\x0ajQuery.event = {\x0a\x0a\x09// Bind an event to an element\x0a\x09// Original by Dean Edwards\x0a\x09add: function(elem, types, handler, data) {\x0a\x09\x09if ( elem.nodeType == 3 || elem.nodeType == 8 )\x0a\x09\x09\x09return;\x0a\x0a\x09\x09// For whatever reason, IE has trouble passing the window object\x0a\x09\x09// around, causing it to be cloned in the process\x0a\x09\x09if ( jQuery.browser.msie && elem.setInterval != undefined )\x0a\x09\x09\x09elem = window;\x0a\x0a\x09\x09// Make sure that the function being executed has a unique ID\x0a\x09\x09if ( !handler.guid )\x0a\x09\x09\x09handler.guid = this.guid++;\x0a\x09\x09\x09\x0a\x09\x09// if data is passed, bind to handler \x0a\x09\x09if( data != undefined ) { \x0a\x09\x09\x09// Create temporary function pointer to original handler \x0a\x09\x09\x09var fn = handler; \x0a\x0a\x09\x09\x09// Create unique handler function, wrapped around original handler \x0a\x09\x09\x09handler = function() { \x0a\x09\x09\x09\x09// Pass arguments and context to original handler \x0a\x09\x09\x09\x09return fn.apply(this, arguments); \x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09// Store data in unique handler \x0a\x09\x09\x09handler.data = data;\x0a\x0a\x09\x09\x09// Set the guid of unique handler to the same of original handler, so it can be removed \x0a\x09\x09\x09handler.guid = fn.guid;\x0a\x09\x09}\x0a\x0a\x09\x09// Init the element\x27s event structure\x0a\x09\x09var events = jQuery.data(elem, \x22events\x22) || jQuery.data(elem, \x22events\x22, {}),\x0a\x09\x09\x09handle = jQuery.data(elem, \x22handle\x22) || jQuery.data(elem, \x22handle\x22, function(){\x0a\x09\x09\x09\x09// returned undefined or false\x0a\x09\x09\x09\x09var val;\x0a\x0a\x09\x09\x09\x09// Handle the second event of a trigger and when\x0a\x09\x09\x09\x09// an event is called after a page has unloaded\x0a\x09\x09\x09\x09if ( typeof jQuery == \x22undefined\x22 || jQuery.event.triggered )\x0a\x09\x09\x09\x09\x09return val;\x0a\x09\x09\x0a\x09\x09\x09\x09val = jQuery.event.handle.apply(arguments.callee.elem, arguments);\x0a\x09\x09\x0a\x09\x09\x09\x09return val;\x0a\x09\x09\x09});\x0a\x09\x09// Add elem as a property of the handle function\x0a\x09\x09// This is to prevent a memory leak with non-native\x0a\x09\x09// event in IE.\x0a\x09\x09handle.elem = elem;\x0a\x09\x09\x09\x0a\x09\x09\x09// Handle multiple events seperated by a space\x0a\x09\x09\x09// jQuery(...).bind(\x22mouseover mouseout\x22, fn);\x0a\x09\x09\x09jQuery.each(types.split(/\x5cs+/), function(index, type) {\x0a\x09\x09\x09\x09// Namespaced event handlers\x0a\x09\x09\x09\x09var parts = type.split(\x22.\x22);\x0a\x09\x09\x09\x09type = parts[0];\x0a\x09\x09\x09\x09handler.type = parts[1];\x0a\x0a\x09\x09\x09\x09// Get the current list of functions bound to this event\x0a\x09\x09\x09\x09var handlers = events[type];\x0a\x0a\x09\x09\x09\x09// Init the event handler queue\x0a\x09\x09\x09\x09if (!handlers) {\x0a\x09\x09\x09\x09\x09handlers = events[type] = {};\x0a\x09\x09\x0a\x09\x09\x09\x09\x09// Check for a special event handler\x0a\x09\x09\x09\x09\x09// Only use addEventListener/attachEvent if the special\x0a\x09\x09\x09\x09\x09// events handler returns false\x0a\x09\x09\x09\x09\x09if ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem) === false ) {\x0a\x09\x09\x09\x09\x09\x09// Bind the global event handler to the element\x0a\x09\x09\x09\x09\x09\x09if (elem.addEventListener)\x0a\x09\x09\x09\x09\x09\x09\x09elem.addEventListener(type, handle, false);\x0a\x09\x09\x09\x09\x09\x09else if (elem.attachEvent)\x0a\x09\x09\x09\x09\x09\x09\x09elem.attachEvent(\x22on\x22 + type, handle);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Add the function to the element\x27s handler list\x0a\x09\x09\x09\x09handlers[handler.guid] = handler;\x0a\x0a\x09\x09\x09\x09// Keep track of which events have been used, for global triggering\x0a\x09\x09\x09\x09jQuery.event.global[type] = true;\x0a\x09\x09\x09});\x0a\x09\x09\x0a\x09\x09// Nullify elem to prevent memory leaks in IE\x0a\x09\x09elem = null;\x0a\x09},\x0a\x0a\x09guid: 1,\x0a\x09global: {},\x0a\x0a\x09// Detach an event or set of events from an element\x0a\x09remove: function(elem, types, handler) {\x0a\x09\x09// don\x27t do events on text and comment nodes\x0a\x09\x09if ( elem.nodeType == 3 || elem.nodeType == 8 )\x0a\x09\x09\x09return;\x0a\x0a\x09\x09var events = jQuery.data(elem, \x22events\x22), ret, index;\x0a\x0a\x09\x09if ( events ) {\x0a\x09\x09\x09// Unbind all events for the element\x0a\x09\x09\x09if ( types == undefined )\x0a\x09\x09\x09\x09for ( var type in events )\x0a\x09\x09\x09\x09\x09this.remove( elem, type );\x0a\x09\x09\x09else {\x0a\x09\x09\x09\x09// types is actually an event object here\x0a\x09\x09\x09\x09if ( types.type ) {\x0a\x09\x09\x09\x09\x09handler = types.handler;\x0a\x09\x09\x09\x09\x09types = types.type;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Handle multiple events seperated by a space\x0a\x09\x09\x09\x09// jQuery(...).unbind(\x22mouseover mouseout\x22, fn);\x0a\x09\x09\x09\x09jQuery.each(types.split(/\x5cs+/), function(index, type){\x0a\x09\x09\x09\x09\x09// Namespaced event handlers\x0a\x09\x09\x09\x09\x09var parts = type.split(\x22.\x22);\x0a\x09\x09\x09\x09\x09type = parts[0];\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09if ( events[type] ) {\x0a\x09\x09\x09\x09\x09\x09// remove the given handler for the given type\x0a\x09\x09\x09\x09\x09\x09if ( handler )\x0a\x09\x09\x09\x09\x09\x09\x09delete events[type][handler.guid];\x0a\x09\x09\x09\x0a\x09\x09\x09\x09\x09\x09// remove all handlers for the given type\x0a\x09\x09\x09\x09\x09\x09else\x0a\x09\x09\x09\x09\x09\x09\x09for ( handler in events[type] )\x0a\x09\x09\x09\x09\x09\x09\x09\x09// Handle the removal of namespaced events\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( !parts[1] || events[type][handler].type == parts[1] )\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09delete events[type][handler];\x0a\x0a\x09\x09\x09\x09\x09\x09// remove generic event handler if no more handlers exist\x0a\x09\x09\x09\x09\x09\x09for ( ret in events[type] ) break;\x0a\x09\x09\x09\x09\x09\x09if ( !ret ) {\x0a\x09\x09\x09\x09\x09\x09\x09if ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem) === false ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09if (elem.removeEventListener)\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09elem.removeEventListener(type, jQuery.data(elem, \x22handle\x22), false);\x0a\x09\x09\x09\x09\x09\x09\x09\x09else if (elem.detachEvent)\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09elem.detachEvent(\x22on\x22 + type, jQuery.data(elem, \x22handle\x22));\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09\x09ret = null;\x0a\x09\x09\x09\x09\x09\x09\x09delete events[type];\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Remove the expando if it\x27s no longer used\x0a\x09\x09\x09for ( ret in events ) break;\x0a\x09\x09\x09if ( !ret ) {\x0a\x09\x09\x09\x09var handle = jQuery.data( elem, \x22handle\x22 );\x0a\x09\x09\x09\x09if ( handle ) handle.elem = null;\x0a\x09\x09\x09\x09jQuery.removeData( elem, \x22events\x22 );\x0a\x09\x09\x09\x09jQuery.removeData( elem, \x22handle\x22 );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09trigger: function(type, data, elem, donative, extra) {\x0a\x09\x09// Clone the incoming data, if any\x0a\x09\x09data = jQuery.makeArray(data || []);\x0a\x0a\x09\x09// Handle a global trigger\x0a\x09\x09if ( !elem ) {\x0a\x09\x09\x09// Only trigger if we\x27ve ever bound an event for it\x0a\x09\x09\x09if ( this.global[type] )\x0a\x09\x09\x09\x09jQuery(\x22*\x22).add([window, document]).trigger(type, data);\x0a\x0a\x09\x09// Handle triggering a single element\x0a\x09\x09} else {\x0a\x09\x09\x09// don\x27t do events on text and comment nodes\x0a\x09\x09\x09if ( elem.nodeType == 3 || elem.nodeType == 8 )\x0a\x09\x09\x09\x09return undefined;\x0a\x0a\x09\x09\x09var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),\x0a\x09\x09\x09\x09// Check to see if we need to provide a fake event, or not\x0a\x09\x09\x09\x09event = !data[0] || !data[0].preventDefault;\x0a\x09\x09\x09\x0a\x09\x09\x09// Pass along a fake event\x0a\x09\x09\x09if ( event )\x0a\x09\x09\x09\x09data.unshift( this.fix({ type: type, target: elem }) );\x0a\x0a\x09\x09\x09// Enforce the right trigger type\x0a\x09\x09\x09data[0].type = type;\x0a\x0a\x09\x09\x09// Trigger the event\x0a\x09\x09\x09if ( jQuery.isFunction( jQuery.data(elem, \x22handle\x22) ) )\x0a\x09\x09\x09\x09val = jQuery.data(elem, \x22handle\x22).apply( elem, data );\x0a\x0a\x09\x09\x09// Handle triggering native .onfoo handlers\x0a\x09\x09\x09if ( !fn && elem[\x22on\x22+type] && elem[\x22on\x22+type].apply( elem, data ) === false )\x0a\x09\x09\x09\x09val = false;\x0a\x0a\x09\x09\x09// Extra functions don\x27t get the custom event object\x0a\x09\x09\x09if ( event )\x0a\x09\x09\x09\x09data.shift();\x0a\x0a\x09\x09\x09// Handle triggering of extra function\x0a\x09\x09\x09if ( extra && jQuery.isFunction( extra ) ) {\x0a\x09\x09\x09\x09// call the extra function and tack the current return value on the end for possible inspection\x0a\x09\x09\x09\x09ret = extra.apply( elem, val == null ? data : data.concat( val ) );\x0a\x09\x09\x09\x09// if anything is returned, give it precedence and have it overwrite the previous value\x0a\x09\x09\x09\x09if (ret !== undefined)\x0a\x09\x09\x09\x09\x09val = ret;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Trigger the native events (except for clicks on links)\x0a\x09\x09\x09if ( fn && donative !== false && val !== false && !(jQuery.nodeName(elem, \x27a\x27) && type == \x22click\x22) ) {\x0a\x09\x09\x09\x09this.triggered = true;\x0a\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09elem[ type ]();\x0a\x09\x09\x09\x09// prevent IE from throwing an error for some hidden elements\x0a\x09\x09\x09\x09} catch (e) {}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.triggered = false;\x0a\x09\x09}\x0a\x0a\x09\x09return val;\x0a\x09},\x0a\x0a\x09handle: function(event) {\x0a\x09\x09// returned undefined or false\x0a\x09\x09var val;\x0a\x0a\x09\x09// Empty object is for triggered events with no data\x0a\x09\x09event = jQuery.event.fix( event || window.event || {} ); \x0a\x0a\x09\x09// Namespaced event handlers\x0a\x09\x09var parts = event.type.split(\x22.\x22);\x0a\x09\x09event.type = parts[0];\x0a\x0a\x09\x09var handlers = jQuery.data(this, \x22events\x22) && jQuery.data(this, \x22events\x22)[event.type], args = Array.prototype.slice.call( arguments, 1 );\x0a\x09\x09args.unshift( event );\x0a\x0a\x09\x09for ( var j in handlers ) {\x0a\x09\x09\x09var handler = handlers[j];\x0a\x09\x09\x09// Pass in a reference to the handler function itself\x0a\x09\x09\x09// So that we can later remove it\x0a\x09\x09\x09args[0].handler = handler;\x0a\x09\x09\x09args[0].data = handler.data;\x0a\x0a\x09\x09\x09// Filter the functions by class\x0a\x09\x09\x09if ( !parts[1] || handler.type == parts[1] ) {\x0a\x09\x09\x09\x09var ret = handler.apply( this, args );\x0a\x0a\x09\x09\x09\x09if ( val !== false )\x0a\x09\x09\x09\x09\x09val = ret;\x0a\x0a\x09\x09\x09\x09if ( ret === false ) {\x0a\x09\x09\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09\x09\x09event.stopPropagation();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// Clean up added properties in IE to prevent memory leak\x0a\x09\x09if (jQuery.browser.msie)\x0a\x09\x09\x09event.target = event.preventDefault = event.stopPropagation =\x0a\x09\x09\x09\x09event.handler = event.data = null;\x0a\x0a\x09\x09return val;\x0a\x09},\x0a\x0a\x09fix: function(event) {\x0a\x09\x09// store a copy of the original event object \x0a\x09\x09// and clone to set read-only properties\x0a\x09\x09var originalEvent = event;\x0a\x09\x09event = jQuery.extend({}, originalEvent);\x0a\x09\x09\x0a\x09\x09// add preventDefault and stopPropagation since \x0a\x09\x09// they will not work on the clone\x0a\x09\x09event.preventDefault = function() {\x0a\x09\x09\x09// if preventDefault exists run it on the original event\x0a\x09\x09\x09if (originalEvent.preventDefault)\x0a\x09\x09\x09\x09originalEvent.preventDefault();\x0a\x09\x09\x09// otherwise set the returnValue property of the original event to false (IE)\x0a\x09\x09\x09originalEvent.returnValue = false;\x0a\x09\x09};\x0a\x09\x09event.stopPropagation = function() {\x0a\x09\x09\x09// if stopPropagation exists run it on the original event\x0a\x09\x09\x09if (originalEvent.stopPropagation)\x0a\x09\x09\x09\x09originalEvent.stopPropagation();\x0a\x09\x09\x09// otherwise set the cancelBubble property of the original event to true (IE)\x0a\x09\x09\x09originalEvent.cancelBubble = true;\x0a\x09\x09};\x0a\x09\x09\x0a\x09\x09// Fix target property, if necessary\x0a\x09\x09if ( !event.target )\x0a\x09\x09\x09event.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either\x0a\x09\x09\x09\x09\x0a\x09\x09// check if target is a textnode (safari)\x0a\x09\x09if ( event.target.nodeType == 3 )\x0a\x09\x09\x09event.target = originalEvent.target.parentNode;\x0a\x0a\x09\x09// Add relatedTarget, if necessary\x0a\x09\x09if ( !event.relatedTarget && event.fromElement )\x0a\x09\x09\x09event.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;\x0a\x0a\x09\x09// Calculate pageX/Y if missing and clientX/Y available\x0a\x09\x09if ( event.pageX == null && event.clientX != null ) {\x0a\x09\x09\x09var doc = document.documentElement, body = document.body;\x0a\x09\x09\x09event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);\x0a\x09\x09\x09event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);\x0a\x09\x09}\x0a\x09\x09\x09\x0a\x09\x09// Add which for key events\x0a\x09\x09if ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )\x0a\x09\x09\x09event.which = event.charCode || event.keyCode;\x0a\x09\x09\x0a\x09\x09// Add metaKey to non-Mac browsers (use ctrl for PC\x27s and Meta for Macs)\x0a\x09\x09if ( !event.metaKey && event.ctrlKey )\x0a\x09\x09\x09event.metaKey = event.ctrlKey;\x0a\x0a\x09\x09// Add which for click: 1 == left; 2 == middle; 3 == right\x0a\x09\x09// Note: button is not normalized, so don\x27t use it\x0a\x09\x09if ( !event.which && event.button )\x0a\x09\x09\x09event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\x0a\x09\x09\x09\x0a\x09\x09return event;\x0a\x09},\x0a\x09\x0a\x09special: {\x0a\x09\x09ready: {\x0a\x09\x09\x09setup: function() {\x0a\x09\x09\x09\x09// Make sure the ready event is setup\x0a\x09\x09\x09\x09bindReady();\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09},\x0a\x09\x09\x09\x0a\x09\x09\x09teardown: function() { return; }\x0a\x09\x09},\x0a\x09\x09\x0a\x09\x09mouseenter: {\x0a\x09\x09\x09setup: function() {\x0a\x09\x09\x09\x09if ( jQuery.browser.msie ) return false;\x0a\x09\x09\x09\x09jQuery(this).bind(\x22mouseover\x22, jQuery.event.special.mouseenter.handler);\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09},\x0a\x09\x09\x0a\x09\x09\x09teardown: function() {\x0a\x09\x09\x09\x09if ( jQuery.browser.msie ) return false;\x0a\x09\x09\x09\x09jQuery(this).unbind(\x22mouseover\x22, jQuery.event.special.mouseenter.handler);\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09},\x0a\x09\x09\x09\x0a\x09\x09\x09handler: function(event) {\x0a\x09\x09\x09\x09// If we actually just moused on to a sub-element, ignore it\x0a\x09\x09\x09\x09if ( withinElement(event, this) ) return true;\x0a\x09\x09\x09\x09// Execute the right handlers by setting the event type to mouseenter\x0a\x09\x09\x09\x09arguments[0].type = \x22mouseenter\x22;\x0a\x09\x09\x09\x09return jQuery.event.handle.apply(this, arguments);\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x09\x0a\x09\x09mouseleave: {\x0a\x09\x09\x09setup: function() {\x0a\x09\x09\x09\x09if ( jQuery.browser.msie ) return false;\x0a\x09\x09\x09\x09jQuery(this).bind(\x22mouseout\x22, jQuery.event.special.mouseleave.handler);\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09},\x0a\x09\x09\x0a\x09\x09\x09teardown: function() {\x0a\x09\x09\x09\x09if ( jQuery.browser.msie ) return false;\x0a\x09\x09\x09\x09jQuery(this).unbind(\x22mouseout\x22, jQuery.event.special.mouseleave.handler);\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09},\x0a\x09\x09\x09\x0a\x09\x09\x09handler: function(event) {\x0a\x09\x09\x09\x09// If we actually just moused on to a sub-element, ignore it\x0a\x09\x09\x09\x09if ( withinElement(event, this) ) return true;\x0a\x09\x09\x09\x09// Execute the right handlers by setting the event type to mouseleave\x0a\x09\x09\x09\x09arguments[0].type = \x22mouseleave\x22;\x0a\x09\x09\x09\x09return jQuery.event.handle.apply(this, arguments);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09}\x0a};\x0a\x0ajQuery.fn.extend({\x0a\x09bind: function( type, data, fn ) {\x0a\x09\x09return type == \x22unload\x22 ? this.one(type, data, fn) : this.each(function(){\x0a\x09\x09\x09jQuery.event.add( this, type, fn || data, fn && data );\x0a\x09\x09});\x0a\x09},\x0a\x09\x0a\x09one: function( type, data, fn ) {\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09jQuery.event.add( this, type, function(event) {\x0a\x09\x09\x09\x09jQuery(this).unbind(event);\x0a\x09\x09\x09\x09return (fn || data).apply( this, arguments);\x0a\x09\x09\x09}, fn && data);\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09unbind: function( type, fn ) {\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09jQuery.event.remove( this, type, fn );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09trigger: function( type, data, fn ) {\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09jQuery.event.trigger( type, data, this, true, fn );\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09triggerHandler: function( type, data, fn ) {\x0a\x09\x09if ( this[0] )\x0a\x09\x09\x09return jQuery.event.trigger( type, data, this[0], false, fn );\x0a\x09\x09return undefined;\x0a\x09},\x0a\x0a\x09toggle: function() {\x0a\x09\x09// Save reference to arguments for access in closure\x0a\x09\x09var args = arguments;\x0a\x0a\x09\x09return this.click(function(event) {\x0a\x09\x09\x09// Figure out which function to execute\x0a\x09\x09\x09this.lastToggle = 0 == this.lastToggle ? 1 : 0;\x0a\x09\x09\x09\x0a\x09\x09\x09// Make sure that clicks stop\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09\x0a\x09\x09\x09// and execute the function\x0a\x09\x09\x09return args[this.lastToggle].apply( this, arguments ) || false;\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09hover: function(fnOver, fnOut) {\x0a\x09\x09return this.bind(\x27mouseenter\x27, fnOver).bind(\x27mouseleave\x27, fnOut);\x0a\x09},\x0a\x09\x0a\x09ready: function(fn) {\x0a\x09\x09// Attach the listeners\x0a\x09\x09bindReady();\x0a\x0a\x09\x09// If the DOM is already ready\x0a\x09\x09if ( jQuery.isReady )\x0a\x09\x09\x09// Execute the function immediately\x0a\x09\x09\x09fn.call( document, jQuery );\x0a\x09\x09\x09\x0a\x09\x09// Otherwise, remember the function for later\x0a\x09\x09else\x0a\x09\x09\x09// Add the function to the wait list\x0a\x09\x09\x09jQuery.readyList.push( function() { return fn.call(this, jQuery); } );\x0a\x09\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0ajQuery.extend({\x0a\x09isReady: false,\x0a\x09readyList: [],\x0a\x09// Handle when the DOM is ready\x0a\x09ready: function() {\x0a\x09\x09// Make sure that the DOM is not already loaded\x0a\x09\x09if ( !jQuery.isReady ) {\x0a\x09\x09\x09// Remember that the DOM is ready\x0a\x09\x09\x09jQuery.isReady = true;\x0a\x09\x09\x09\x0a\x09\x09\x09// If there are functions bound, to execute\x0a\x09\x09\x09if ( jQuery.readyList ) {\x0a\x09\x09\x09\x09// Execute all of them\x0a\x09\x09\x09\x09jQuery.each( jQuery.readyList, function(){\x0a\x09\x09\x09\x09\x09this.apply( document );\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Reset the list of functions\x0a\x09\x09\x09\x09jQuery.readyList = null;\x0a\x09\x09\x09}\x0a\x09\x09\x0a\x09\x09\x09// Trigger any bound ready events\x0a\x09\x09\x09jQuery(document).triggerHandler(\x22ready\x22);\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0avar readyBound = false;\x0a\x0afunction bindReady(){\x0a\x09if ( readyBound ) return;\x0a\x09readyBound = true;\x0a\x0a\x09// Mozilla, Opera (see further below for it) and webkit nightlies currently support this event\x0a\x09if ( document.addEventListener && !jQuery.browser.opera)\x0a\x09\x09// Use the handy event callback\x0a\x09\x09document.addEventListener( \x22DOMContentLoaded\x22, jQuery.ready, false );\x0a\x09\x0a\x09// If IE is used and is not in a frame\x0a\x09// Continually check to see if the document is ready\x0a\x09if ( jQuery.browser.msie && window == top ) (function(){\x0a\x09\x09if (jQuery.isReady) return;\x0a\x09\x09try {\x0a\x09\x09\x09// If IE is used, use the trick by Diego Perini\x0a\x09\x09\x09// http://javascript.nwbox.com/IEContentLoaded/\x0a\x09\x09\x09document.documentElement.doScroll(\x22left\x22);\x0a\x09\x09} catch( error ) {\x0a\x09\x09\x09setTimeout( arguments.callee, 0 );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09// and execute any waiting functions\x0a\x09\x09jQuery.ready();\x0a\x09})();\x0a\x0a\x09if ( jQuery.browser.opera )\x0a\x09\x09document.addEventListener( \x22DOMContentLoaded\x22, function () {\x0a\x09\x09\x09if (jQuery.isReady) return;\x0a\x09\x09\x09for (var i = 0; i \x3c document.styleSheets.length; i++)\x0a\x09\x09\x09\x09if (document.styleSheets[i].disabled) {\x0a\x09\x09\x09\x09\x09setTimeout( arguments.callee, 0 );\x0a\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09// and execute any waiting functions\x0a\x09\x09\x09jQuery.ready();\x0a\x09\x09}, false);\x0a\x0a\x09if ( jQuery.browser.safari ) {\x0a\x09\x09var numStyles;\x0a\x09\x09(function(){\x0a\x09\x09\x09if (jQuery.isReady) return;\x0a\x09\x09\x09if ( document.readyState != \x22loaded\x22 && document.readyState != \x22complete\x22 ) {\x0a\x09\x09\x09\x09setTimeout( arguments.callee, 0 );\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09if ( numStyles === undefined )\x0a\x09\x09\x09\x09numStyles = jQuery(\x22style, link[rel=stylesheet]\x22).length;\x0a\x09\x09\x09if ( document.styleSheets.length != numStyles ) {\x0a\x09\x09\x09\x09setTimeout( arguments.callee, 0 );\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09// and execute any waiting functions\x0a\x09\x09\x09jQuery.ready();\x0a\x09\x09})();\x0a\x09}\x0a\x0a\x09// A fallback to window.onload, that will always work\x0a\x09jQuery.event.add( window, \x22load\x22, jQuery.ready );\x0a}\x0a\x0ajQuery.each( (\x22blur,focus,load,resize,scroll,unload,click,dblclick,\x22 +\x0a\x09\x22mousedown,mouseup,mousemove,mouseover,mouseout,change,select,\x22 + \x0a\x09\x22submit,keydown,keypress,keyup,error\x22).split(\x22,\x22), function(i, name){\x0a\x09\x0a\x09// Handle event binding\x0a\x09jQuery.fn[name] = function(fn){\x0a\x09\x09return fn ? this.bind(name, fn) : this.trigger(name);\x0a\x09};\x0a});\x0a\x0a// Checks if an event happened on an element within another element\x0a// Used in jQuery.event.special.mouseenter and mouseleave handlers\x0avar withinElement = function(event, elem) {\x0a\x09// Check if mouse(over|out) are still within the same parent element\x0a\x09var parent = event.relatedTarget;\x0a\x09// Traverse up the tree\x0a\x09while ( parent && parent != elem ) try { parent = parent.parentNode; } catch(error) { parent = elem; }\x0a\x09// Return true if we actually just moused on to a sub-element\x0a\x09return parent == elem;\x0a};\x0a\x0a// Prevent memory leaks in IE\x0a// And prevent errors on refresh with events like mouseover in other browsers\x0a// Window isn\x27t included so as not to unbind existing unload events\x0ajQuery(window).bind(\x22unload\x22, function() {\x0a\x09jQuery(\x22*\x22).add(document).unbind();\x0a});\x0ajQuery.fn.extend({\x0a\x09load: function( url, params, callback ) {\x0a\x09\x09if ( jQuery.isFunction( url ) )\x0a\x09\x09\x09return this.bind(\x22load\x22, url);\x0a\x0a\x09\x09var off = url.indexOf(\x22 \x22);\x0a\x09\x09if ( off \x3e= 0 ) {\x0a\x09\x09\x09var selector = url.slice(off, url.length);\x0a\x09\x09\x09url = url.slice(0, off);\x0a\x09\x09}\x0a\x0a\x09\x09callback = callback || function(){};\x0a\x0a\x09\x09// Default to a GET request\x0a\x09\x09var type = \x22GET\x22;\x0a\x0a\x09\x09// If the second parameter was provided\x0a\x09\x09if ( params )\x0a\x09\x09\x09// If it\x27s a function\x0a\x09\x09\x09if ( jQuery.isFunction( params ) ) {\x0a\x09\x09\x09\x09// We assume that it\x27s the callback\x0a\x09\x09\x09\x09callback = params;\x0a\x09\x09\x09\x09params = null;\x0a\x0a\x09\x09\x09// Otherwise, build a param string\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09params = jQuery.param( params );\x0a\x09\x09\x09\x09type = \x22POST\x22;\x0a\x09\x09\x09}\x0a\x0a\x09\x09var self = this;\x0a\x0a\x09\x09// Request the remote document\x0a\x09\x09jQuery.ajax({\x0a\x09\x09\x09url: url,\x0a\x09\x09\x09type: type,\x0a\x09\x09\x09dataType: \x22html\x22,\x0a\x09\x09\x09data: params,\x0a\x09\x09\x09complete: function(res, status){\x0a\x09\x09\x09\x09// If successful, inject the HTML into all the matched elements\x0a\x09\x09\x09\x09if ( status == \x22success\x22 || status == \x22notmodified\x22 )\x0a\x09\x09\x09\x09\x09// See if a selector was specified\x0a\x09\x09\x09\x09\x09self.html( selector ?\x0a\x09\x09\x09\x09\x09\x09// Create a dummy div to hold the results\x0a\x09\x09\x09\x09\x09\x09jQuery(\x22\x3cdiv/\x3e\x22)\x0a\x09\x09\x09\x09\x09\x09\x09// inject the contents of the document in, removing the scripts\x0a\x09\x09\x09\x09\x09\x09\x09// to avoid any \x27Permission Denied\x27 errors in IE\x0a\x09\x09\x09\x09\x09\x09\x09.append(res.responseText.replace(/\x3cscript(.|\x5cs)*?\x5c/script\x3e/g, \x22\x22))\x0a\x0a\x09\x09\x09\x09\x09\x09\x09// Locate the specified elements\x0a\x09\x09\x09\x09\x09\x09\x09.find(selector) :\x0a\x0a\x09\x09\x09\x09\x09\x09// If not, just inject the full result\x0a\x09\x09\x09\x09\x09\x09res.responseText );\x0a\x0a\x09\x09\x09\x09self.each( callback, [res.responseText, status, res] );\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09serialize: function() {\x0a\x09\x09return jQuery.param(this.serializeArray());\x0a\x09},\x0a\x09serializeArray: function() {\x0a\x09\x09return this.map(function(){\x0a\x09\x09\x09return jQuery.nodeName(this, \x22form\x22) ?\x0a\x09\x09\x09\x09jQuery.makeArray(this.elements) : this;\x0a\x09\x09})\x0a\x09\x09.filter(function(){\x0a\x09\x09\x09return this.name && !this.disabled && \x0a\x09\x09\x09\x09(this.checked || /select|textarea/i.test(this.nodeName) || \x0a\x09\x09\x09\x09\x09/text|hidden|password/i.test(this.type));\x0a\x09\x09})\x0a\x09\x09.map(function(i, elem){\x0a\x09\x09\x09var val = jQuery(this).val();\x0a\x09\x09\x09return val == null ? null :\x0a\x09\x09\x09\x09val.constructor == Array ?\x0a\x09\x09\x09\x09\x09jQuery.map( val, function(val, i){\x0a\x09\x09\x09\x09\x09\x09return {name: elem.name, value: val};\x0a\x09\x09\x09\x09\x09}) :\x0a\x09\x09\x09\x09\x09{name: elem.name, value: val};\x0a\x09\x09}).get();\x0a\x09}\x0a});\x0a\x0a// Attach a bunch of functions for handling common AJAX events\x0ajQuery.each( \x22ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\x22.split(\x22,\x22), function(i,o){\x0a\x09jQuery.fn[o] = function(f){\x0a\x09\x09return this.bind(o, f);\x0a\x09};\x0a});\x0a\x0avar jsc = (new Date).getTime();\x0a\x0ajQuery.extend({\x0a\x09get: function( url, data, callback, type ) {\x0a\x09\x09// shift arguments if data argument was ommited\x0a\x09\x09if ( jQuery.isFunction( data ) ) {\x0a\x09\x09\x09callback = data;\x0a\x09\x09\x09data = null;\x0a\x09\x09}\x0a\x09\x09\x0a\x09\x09return jQuery.ajax({\x0a\x09\x09\x09type: \x22GET\x22,\x0a\x09\x09\x09url: url,\x0a\x09\x09\x09data: data,\x0a\x09\x09\x09success: callback,\x0a\x09\x09\x09dataType: type\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09getScript: function( url, callback ) {\x0a\x09\x09return jQuery.get(url, null, callback, \x22script\x22);\x0a\x09},\x0a\x0a\x09getJSON: function( url, data, callback ) {\x0a\x09\x09return jQuery.get(url, data, callback, \x22json\x22);\x0a\x09},\x0a\x0a\x09post: function( url, data, callback, type ) {\x0a\x09\x09if ( jQuery.isFunction( data ) ) {\x0a\x09\x09\x09callback = data;\x0a\x09\x09\x09data = {};\x0a\x09\x09}\x0a\x0a\x09\x09return jQuery.ajax({\x0a\x09\x09\x09type: \x22POST\x22,\x0a\x09\x09\x09url: url,\x0a\x09\x09\x09data: data,\x0a\x09\x09\x09success: callback,\x0a\x09\x09\x09dataType: type\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09ajaxSetup: function( settings ) {\x0a\x09\x09jQuery.extend( jQuery.ajaxSettings, settings );\x0a\x09},\x0a\x0a\x09ajaxSettings: {\x0a\x09\x09global: true,\x0a\x09\x09type: \x22GET\x22,\x0a\x09\x09timeout: 0,\x0a\x09\x09contentType: \x22application/x-www-form-urlencoded\x22,\x0a\x09\x09processData: true,\x0a\x09\x09async: true,\x0a\x09\x09data: null,\x0a\x09\x09username: null,\x0a\x09\x09password: null,\x0a\x09\x09accepts: {\x0a\x09\x09\x09xml: \x22application/xml, text/xml\x22,\x0a\x09\x09\x09html: \x22text/html\x22,\x0a\x09\x09\x09script: \x22text/javascript, application/javascript\x22,\x0a\x09\x09\x09json: \x22application/json, text/javascript\x22,\x0a\x09\x09\x09text: \x22text/plain\x22,\x0a\x09\x09\x09_default: \x22*/*\x22\x0a\x09\x09}\x0a\x09},\x0a\x09\x0a\x09// Last-Modified header cache for next request\x0a\x09lastModified: {},\x0a\x0a\x09ajax: function( s ) {\x0a\x09\x09var jsonp, jsre = /=\x5c?(&|$)/g, status, data;\x0a\x0a\x09\x09// Extend the settings, but re-extend \x27s\x27 so that it can be\x0a\x09\x09// checked again later (in the test suite, specifically)\x0a\x09\x09s = jQuery.extend(true, s, jQuery.extend(true, {}, jQuery.ajaxSettings, s));\x0a\x0a\x09\x09// convert data if not already a string\x0a\x09\x09if ( s.data && s.processData && typeof s.data != \x22string\x22 )\x0a\x09\x09\x09s.data = jQuery.param(s.data);\x0a\x0a\x09\x09// Handle JSONP Parameter Callbacks\x0a\x09\x09if ( s.dataType == \x22jsonp\x22 ) {\x0a\x09\x09\x09if ( s.type.toLowerCase() == \x22get\x22 ) {\x0a\x09\x09\x09\x09if ( !s.url.match(jsre) )\x0a\x09\x09\x09\x09\x09s.url += (s.url.match(/\x5c?/) ? \x22&\x22 : \x22?\x22) + (s.jsonp || \x22callback\x22) + \x22=?\x22;\x0a\x09\x09\x09} else if ( !s.data || !s.data.match(jsre) )\x0a\x09\x09\x09\x09s.data = (s.data ? s.data + \x22&\x22 : \x22\x22) + (s.jsonp || \x22callback\x22) + \x22=?\x22;\x0a\x09\x09\x09s.dataType = \x22json\x22;\x0a\x09\x09}\x0a\x0a\x09\x09// Build temporary JSONP function\x0a\x09\x09if ( s.dataType == \x22json\x22 && (s.data && s.data.match(jsre) || s.url.match(jsre)) ) {\x0a\x09\x09\x09jsonp = \x22jsonp\x22 + jsc++;\x0a\x0a\x09\x09\x09// Replace the =? sequence both in the query string and the data\x0a\x09\x09\x09if ( s.data )\x0a\x09\x09\x09\x09s.data = (s.data + \x22\x22).replace(jsre, \x22=\x22 + jsonp + \x22$1\x22);\x0a\x09\x09\x09s.url = s.url.replace(jsre, \x22=\x22 + jsonp + \x22$1\x22);\x0a\x0a\x09\x09\x09// We need to make sure\x0a\x09\x09\x09// that a JSONP style response is executed properly\x0a\x09\x09\x09s.dataType = \x22script\x22;\x0a\x0a\x09\x09\x09// Handle JSONP-style loading\x0a\x09\x09\x09window[ jsonp ] = function(tmp){\x0a\x09\x09\x09\x09data = tmp;\x0a\x09\x09\x09\x09success();\x0a\x09\x09\x09\x09complete();\x0a\x09\x09\x09\x09// Garbage collect\x0a\x09\x09\x09\x09window[ jsonp ] = undefined;\x0a\x09\x09\x09\x09try{ delete window[ jsonp ]; } catch(e){}\x0a\x09\x09\x09\x09if ( head )\x0a\x09\x09\x09\x09\x09head.removeChild( script );\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09if ( s.dataType == \x22script\x22 && s.cache == null )\x0a\x09\x09\x09s.cache = false;\x0a\x0a\x09\x09if ( s.cache === false && s.type.toLowerCase() == \x22get\x22 ) {\x0a\x09\x09\x09var ts = (new Date()).getTime();\x0a\x09\x09\x09// try replacing _= if it is there\x0a\x09\x09\x09var ret = s.url.replace(/(\x5c?|&)_=.*?(&|$)/, \x22$1_=\x22 + ts + \x22$2\x22);\x0a\x09\x09\x09// if nothing was replaced, add timestamp to the end\x0a\x09\x09\x09s.url = ret + ((ret == s.url) ? (s.url.match(/\x5c?/) ? \x22&\x22 : \x22?\x22) + \x22_=\x22 + ts : \x22\x22);\x0a\x09\x09}\x0a\x0a\x09\x09// If data is available, append data to url for get requests\x0a\x09\x09if ( s.data && s.type.toLowerCase() == \x22get\x22 ) {\x0a\x09\x09\x09s.url += (s.url.match(/\x5c?/) ? \x22&\x22 : \x22?\x22) + s.data;\x0a\x0a\x09\x09\x09// IE likes to send both get and post data, prevent this\x0a\x09\x09\x09s.data = null;\x0a\x09\x09}\x0a\x0a\x09\x09// Watch for a new set of requests\x0a\x09\x09if ( s.global && ! jQuery.active++ )\x0a\x09\x09\x09jQuery.event.trigger( \x22ajaxStart\x22 );\x0a\x0a\x09\x09// If we\x27re requesting a remote document\x0a\x09\x09// and trying to load JSON or Script with a GET\x0a\x09\x09if ( (!s.url.indexOf(\x22http\x22) || !s.url.indexOf(\x22//\x22)) && ( s.dataType == \x22script\x22 || s.dataType ==\x22json\x22 ) && s.type.toLowerCase() == \x22get\x22 ) {\x0a\x09\x09\x09var head = document.getElementsByTagName(\x22head\x22)[0];\x0a\x09\x09\x09var script = document.createElement(\x22script\x22);\x0a\x09\x09\x09script.src = s.url;\x0a\x09\x09\x09if (s.scriptCharset)\x0a\x09\x09\x09\x09script.charset = s.scriptCharset;\x0a\x0a\x09\x09\x09// Handle Script loading\x0a\x09\x09\x09if ( !jsonp ) {\x0a\x09\x09\x09\x09var done = false;\x0a\x0a\x09\x09\x09\x09// Attach handlers for all browsers\x0a\x09\x09\x09\x09script.onload = script.onreadystatechange = function(){\x0a\x09\x09\x09\x09\x09if ( !done && (!this.readyState || \x0a\x09\x09\x09\x09\x09\x09\x09this.readyState == \x22loaded\x22 || this.readyState == \x22complete\x22) ) {\x0a\x09\x09\x09\x09\x09\x09done = true;\x0a\x09\x09\x09\x09\x09\x09success();\x0a\x09\x09\x09\x09\x09\x09complete();\x0a\x09\x09\x09\x09\x09\x09head.removeChild( script );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09};\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09head.appendChild(script);\x0a\x0a\x09\x09\x09// We handle everything using the script element injection\x0a\x09\x09\x09return undefined;\x0a\x09\x09}\x0a\x0a\x09\x09var requestDone = false;\x0a\x0a\x09\x09// Create the request object; Microsoft failed to properly\x0a\x09\x09// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\x0a\x09\x09var xml = window.ActiveXObject ? new ActiveXObject(\x22Microsoft.XMLHTTP\x22) : new XMLHttpRequest();\x0a\x0a\x09\x09// Open the socket\x0a\x09\x09xml.open(s.type, s.url, s.async, s.username, s.password);\x0a\x0a\x09\x09// Need an extra try/catch for cross domain requests in Firefox 3\x0a\x09\x09try {\x0a\x09\x09\x09// Set the correct header, if data is being sent\x0a\x09\x09\x09if ( s.data )\x0a\x09\x09\x09\x09xml.setRequestHeader(\x22Content-Type\x22, s.contentType);\x0a\x0a\x09\x09\x09// Set the If-Modified-Since header, if ifModified mode.\x0a\x09\x09\x09if ( s.ifModified )\x0a\x09\x09\x09\x09xml.setRequestHeader(\x22If-Modified-Since\x22,\x0a\x09\x09\x09\x09\x09jQuery.lastModified[s.url] || \x22Thu, 01 Jan 1970 00:00:00 GMT\x22 );\x0a\x0a\x09\x09\x09// Set header so the called script knows that it\x27s an XMLHttpRequest\x0a\x09\x09\x09xml.setRequestHeader(\x22X-Requested-With\x22, \x22XMLHttpRequest\x22);\x0a\x0a\x09\x09\x09// Set the Accepts header for the server, depending on the dataType\x0a\x09\x09\x09xml.setRequestHeader(\x22Accept\x22, s.dataType && s.accepts[ s.dataType ] ?\x0a\x09\x09\x09\x09s.accepts[ s.dataType ] + \x22, */*\x22 :\x0a\x09\x09\x09\x09s.accepts._default );\x0a\x09\x09} catch(e){}\x0a\x0a\x09\x09// Allow custom headers/mimetypes\x0a\x09\x09if ( s.beforeSend )\x0a\x09\x09\x09s.beforeSend(xml);\x0a\x09\x09\x09\x0a\x09\x09if ( s.global )\x0a\x09\x09\x09jQuery.event.trigger(\x22ajaxSend\x22, [xml, s]);\x0a\x0a\x09\x09// Wait for a response to come back\x0a\x09\x09var onreadystatechange = function(isTimeout){\x0a\x09\x09\x09// The transfer is complete and the data is available, or the request timed out\x0a\x09\x09\x09if ( !requestDone && xml && (xml.readyState == 4 || isTimeout == \x22timeout\x22) ) {\x0a\x09\x09\x09\x09requestDone = true;\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09// clear poll interval\x0a\x09\x09\x09\x09if (ival) {\x0a\x09\x09\x09\x09\x09clearInterval(ival);\x0a\x09\x09\x09\x09\x09ival = null;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09status = isTimeout == \x22timeout\x22 && \x22timeout\x22 ||\x0a\x09\x09\x09\x09\x09!jQuery.httpSuccess( xml ) && \x22error\x22 ||\x0a\x09\x09\x09\x09\x09s.ifModified && jQuery.httpNotModified( xml, s.url ) && \x22notmodified\x22 ||\x0a\x09\x09\x09\x09\x09\x22success\x22;\x0a\x0a\x09\x09\x09\x09if ( status == \x22success\x22 ) {\x0a\x09\x09\x09\x09\x09// Watch for, and catch, XML document parse errors\x0a\x09\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09\x09// process the data (runs the xml through httpData regardless of callback)\x0a\x09\x09\x09\x09\x09\x09data = jQuery.httpData( xml, s.dataType );\x0a\x09\x09\x09\x09\x09} catch(e) {\x0a\x09\x09\x09\x09\x09\x09status = \x22parsererror\x22;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Make sure that the request was successful or notmodified\x0a\x09\x09\x09\x09if ( status == \x22success\x22 ) {\x0a\x09\x09\x09\x09\x09// Cache Last-Modified header, if ifModified mode.\x0a\x09\x09\x09\x09\x09var modRes;\x0a\x09\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09\x09modRes = xml.getResponseHeader(\x22Last-Modified\x22);\x0a\x09\x09\x09\x09\x09} catch(e) {} // swallow exception thrown by FF if header is not available\x0a\x09\x0a\x09\x09\x09\x09\x09if ( s.ifModified && modRes )\x0a\x09\x09\x09\x09\x09\x09jQuery.lastModified[s.url] = modRes;\x0a\x0a\x09\x09\x09\x09\x09// JSONP handles its own success callback\x0a\x09\x09\x09\x09\x09if ( !jsonp )\x0a\x09\x09\x09\x09\x09\x09success();\x09\x0a\x09\x09\x09\x09} else\x0a\x09\x09\x09\x09\x09jQuery.handleError(s, xml, status);\x0a\x0a\x09\x09\x09\x09// Fire the complete handlers\x0a\x09\x09\x09\x09complete();\x0a\x0a\x09\x09\x09\x09// Stop memory leaks\x0a\x09\x09\x09\x09if ( s.async )\x0a\x09\x09\x09\x09\x09xml = null;\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x09\x09\x0a\x09\x09if ( s.async ) {\x0a\x09\x09\x09// don\x27t attach the handler to the request, just poll it instead\x0a\x09\x09\x09var ival = setInterval(onreadystatechange, 13); \x0a\x0a\x09\x09\x09// Timeout checker\x0a\x09\x09\x09if ( s.timeout \x3e 0 )\x0a\x09\x09\x09\x09setTimeout(function(){\x0a\x09\x09\x09\x09\x09// Check to see if the request is still happening\x0a\x09\x09\x09\x09\x09if ( xml ) {\x0a\x09\x09\x09\x09\x09\x09// Cancel the request\x0a\x09\x09\x09\x09\x09\x09xml.abort();\x0a\x09\x0a\x09\x09\x09\x09\x09\x09if( !requestDone )\x0a\x09\x09\x09\x09\x09\x09\x09onreadystatechange( \x22timeout\x22 );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}, s.timeout);\x0a\x09\x09}\x0a\x09\x09\x09\x0a\x09\x09// Send the data\x0a\x09\x09try {\x0a\x09\x09\x09xml.send(s.data);\x0a\x09\x09} catch(e) {\x0a\x09\x09\x09jQuery.handleError(s, xml, null, e);\x0a\x09\x09}\x0a\x09\x09\x0a\x09\x09// firefox 1.5 doesn\x27t fire statechange for sync requests\x0a\x09\x09if ( !s.async )\x0a\x09\x09\x09onreadystatechange();\x0a\x0a\x09\x09function success(){\x0a\x09\x09\x09// If a local callback was specified, fire it and pass it the data\x0a\x09\x09\x09if ( s.success )\x0a\x09\x09\x09\x09s.success( data, status );\x0a\x0a\x09\x09\x09// Fire the global callback\x0a\x09\x09\x09if ( s.global )\x0a\x09\x09\x09\x09jQuery.event.trigger( \x22ajaxSuccess\x22, [xml, s] );\x0a\x09\x09}\x0a\x0a\x09\x09function complete(){\x0a\x09\x09\x09// Process result\x0a\x09\x09\x09if ( s.complete )\x0a\x09\x09\x09\x09s.complete(xml, status);\x0a\x0a\x09\x09\x09// The request was completed\x0a\x09\x09\x09if ( s.global )\x0a\x09\x09\x09\x09jQuery.event.trigger( \x22ajaxComplete\x22, [xml, s] );\x0a\x0a\x09\x09\x09// Handle the global AJAX counter\x0a\x09\x09\x09if ( s.global && ! --jQuery.active )\x0a\x09\x09\x09\x09jQuery.event.trigger( \x22ajaxStop\x22 );\x0a\x09\x09}\x0a\x09\x09\x0a\x09\x09// return XMLHttpRequest to allow aborting the request etc.\x0a\x09\x09return xml;\x0a\x09},\x0a\x0a\x09handleError: function( s, xml, status, e ) {\x0a\x09\x09// If a local callback was specified, fire it\x0a\x09\x09if ( s.error ) s.error( xml, status, e );\x0a\x0a\x09\x09// Fire the global callback\x0a\x09\x09if ( s.global )\x0a\x09\x09\x09jQuery.event.trigger( \x22ajaxError\x22, [xml, s, e] );\x0a\x09},\x0a\x0a\x09// Counter for holding the number of active queries\x0a\x09active: 0,\x0a\x0a\x09// Determines if an XMLHttpRequest was successful or not\x0a\x09httpSuccess: function( r ) {\x0a\x09\x09try {\x0a\x09\x09\x09// IE error sometimes returns 1223 when it should be 204 so treat it as success, see #1450\x0a\x09\x09\x09return !r.status && location.protocol == \x22file:\x22 ||\x0a\x09\x09\x09\x09( r.status \x3e= 200 && r.status \x3c 300 ) || r.status == 304 || r.status == 1223 ||\x0a\x09\x09\x09\x09jQuery.browser.safari && r.status == undefined;\x0a\x09\x09} catch(e){}\x0a\x09\x09return false;\x0a\x09},\x0a\x0a\x09// Determines if an XMLHttpRequest returns NotModified\x0a\x09httpNotModified: function( xml, url ) {\x0a\x09\x09try {\x0a\x09\x09\x09var xmlRes = xml.getResponseHeader(\x22Last-Modified\x22);\x0a\x0a\x09\x09\x09// Firefox always returns 200. check Last-Modified date\x0a\x09\x09\x09return xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\x0a\x09\x09\x09\x09jQuery.browser.safari && xml.status == undefined;\x0a\x09\x09} catch(e){}\x0a\x09\x09return false;\x0a\x09},\x0a\x0a\x09httpData: function( r, type ) {\x0a\x09\x09var ct = r.getResponseHeader(\x22content-type\x22);\x0a\x09\x09var xml = type == \x22xml\x22 || !type && ct && ct.indexOf(\x22xml\x22) \x3e= 0;\x0a\x09\x09var data = xml ? r.responseXML : r.responseText;\x0a\x0a\x09\x09if ( xml && data.documentElement.tagName == \x22parsererror\x22 )\x0a\x09\x09\x09throw \x22parsererror\x22;\x0a\x0a\x09\x09// If the type is \x22script\x22, eval it in global context\x0a\x09\x09if ( type == \x22script\x22 )\x0a\x09\x09\x09jQuery.globalEval( data );\x0a\x0a\x09\x09// Get the JavaScript object, if JSON is used.\x0a\x09\x09if ( type == \x22json\x22 )\x0a\x09\x09\x09data = eval(\x22(\x22 + data + \x22)\x22);\x0a\x0a\x09\x09return data;\x0a\x09},\x0a\x0a\x09// Serialize an array of form elements or a set of\x0a\x09// key/values into a query string\x0a\x09param: function( a ) {\x0a\x09\x09var s = [];\x0a\x0a\x09\x09// If an array was passed in, assume that it is an array\x0a\x09\x09// of form elements\x0a\x09\x09if ( a.constructor == Array || a.jquery )\x0a\x09\x09\x09// Serialize the form elements\x0a\x09\x09\x09jQuery.each( a, function(){\x0a\x09\x09\x09\x09s.push( encodeURIComponent(this.name) + \x22=\x22 + encodeURIComponent( this.value ) );\x0a\x09\x09\x09});\x0a\x0a\x09\x09// Otherwise, assume that it\x27s an object of key/value pairs\x0a\x09\x09else\x0a\x09\x09\x09// Serialize the key/values\x0a\x09\x09\x09for ( var j in a )\x0a\x09\x09\x09\x09// If the value is an array then the key names need to be repeated\x0a\x09\x09\x09\x09if ( a[j] && a[j].constructor == Array )\x0a\x09\x09\x09\x09\x09jQuery.each( a[j], function(){\x0a\x09\x09\x09\x09\x09\x09s.push( encodeURIComponent(j) + \x22=\x22 + encodeURIComponent( this ) );\x0a\x09\x09\x09\x09\x09});\x0a\x09\x09\x09\x09else\x0a\x09\x09\x09\x09\x09s.push( encodeURIComponent(j) + \x22=\x22 + encodeURIComponent( a[j] ) );\x0a\x0a\x09\x09// Return the resulting serialization\x0a\x09\x09return s.join(\x22&\x22).replace(/%20/g, \x22+\x22);\x0a\x09}\x0a\x0a});\x0ajQuery.fn.extend({\x0a\x09show: function(speed,callback){\x0a\x09\x09return speed ?\x0a\x09\x09\x09this.animate({\x0a\x09\x09\x09\x09height: \x22show\x22, width: \x22show\x22, opacity: \x22show\x22\x0a\x09\x09\x09}, speed, callback) :\x0a\x09\x09\x09\x0a\x09\x09\x09this.filter(\x22:hidden\x22).each(function(){\x0a\x09\x09\x09\x09this.style.display = this.oldblock || \x22\x22;\x0a\x09\x09\x09\x09if ( jQuery.css(this,\x22display\x22) == \x22none\x22 ) {\x0a\x09\x09\x09\x09\x09var elem = jQuery(\x22\x3c\x22 + this.tagName + \x22 /\x3e\x22).appendTo(\x22body\x22);\x0a\x09\x09\x09\x09\x09this.style.display = elem.css(\x22display\x22);\x0a\x09\x09\x09\x09\x09// handle an edge condition where css is - div { display:none; } or similar\x0a\x09\x09\x09\x09\x09if (this.style.display == \x22none\x22)\x0a\x09\x09\x09\x09\x09\x09this.style.display = \x22block\x22;\x0a\x09\x09\x09\x09\x09elem.remove();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}).end();\x0a\x09},\x0a\x09\x0a\x09hide: function(speed,callback){\x0a\x09\x09return speed ?\x0a\x09\x09\x09this.animate({\x0a\x09\x09\x09\x09height: \x22hide\x22, width: \x22hide\x22, opacity: \x22hide\x22\x0a\x09\x09\x09}, speed, callback) :\x0a\x09\x09\x09\x0a\x09\x09\x09this.filter(\x22:visible\x22).each(function(){\x0a\x09\x09\x09\x09this.oldblock = this.oldblock || jQuery.css(this,\x22display\x22);\x0a\x09\x09\x09\x09this.style.display = \x22none\x22;\x0a\x09\x09\x09}).end();\x0a\x09},\x0a\x0a\x09// Save the old toggle function\x0a\x09_toggle: jQuery.fn.toggle,\x0a\x09\x0a\x09toggle: function( fn, fn2 ){\x0a\x09\x09return jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\x0a\x09\x09\x09this._toggle( fn, fn2 ) :\x0a\x09\x09\x09fn ?\x0a\x09\x09\x09\x09this.animate({\x0a\x09\x09\x09\x09\x09height: \x22toggle\x22, width: \x22toggle\x22, opacity: \x22toggle\x22\x0a\x09\x09\x09\x09}, fn, fn2) :\x0a\x09\x09\x09\x09this.each(function(){\x0a\x09\x09\x09\x09\x09jQuery(this)[ jQuery(this).is(\x22:hidden\x22) ? \x22show\x22 : \x22hide\x22 ]();\x0a\x09\x09\x09\x09});\x0a\x09},\x0a\x09\x0a\x09slideDown: function(speed,callback){\x0a\x09\x09return this.animate({height: \x22show\x22}, speed, callback);\x0a\x09},\x0a\x09\x0a\x09slideUp: function(speed,callback){\x0a\x09\x09return this.animate({height: \x22hide\x22}, speed, callback);\x0a\x09},\x0a\x0a\x09slideToggle: function(speed, callback){\x0a\x09\x09return this.animate({height: \x22toggle\x22}, speed, callback);\x0a\x09},\x0a\x09\x0a\x09fadeIn: function(speed, callback){\x0a\x09\x09return this.animate({opacity: \x22show\x22}, speed, callback);\x0a\x09},\x0a\x09\x0a\x09fadeOut: function(speed, callback){\x0a\x09\x09return this.animate({opacity: \x22hide\x22}, speed, callback);\x0a\x09},\x0a\x09\x0a\x09fadeTo: function(speed,to,callback){\x0a\x09\x09return this.animate({opacity: to}, speed, callback);\x0a\x09},\x0a\x09\x0a\x09animate: function( prop, speed, easing, callback ) {\x0a\x09\x09var optall = jQuery.speed(speed, easing, callback);\x0a\x0a\x09\x09return this[ optall.queue === false ? \x22each\x22 : \x22queue\x22 ](function(){\x0a\x09\x09\x09if ( this.nodeType != 1)\x0a\x09\x09\x09\x09return false;\x0a\x0a\x09\x09\x09var opt = jQuery.extend({}, optall);\x0a\x09\x09\x09var hidden = jQuery(this).is(\x22:hidden\x22), self = this;\x0a\x09\x09\x09\x0a\x09\x09\x09for ( var p in prop ) {\x0a\x09\x09\x09\x09if ( prop[p] == \x22hide\x22 && hidden || prop[p] == \x22show\x22 && !hidden )\x0a\x09\x09\x09\x09\x09return jQuery.isFunction(opt.complete) && opt.complete.apply(this);\x0a\x0a\x09\x09\x09\x09if ( p == \x22height\x22 || p == \x22width\x22 ) {\x0a\x09\x09\x09\x09\x09// Store display property\x0a\x09\x09\x09\x09\x09opt.display = jQuery.css(this, \x22display\x22);\x0a\x0a\x09\x09\x09\x09\x09// Make sure that nothing sneaks out\x0a\x09\x09\x09\x09\x09opt.overflow = this.style.overflow;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( opt.overflow != null )\x0a\x09\x09\x09\x09this.style.overflow = \x22hidden\x22;\x0a\x0a\x09\x09\x09opt.curAnim = jQuery.extend({}, prop);\x0a\x09\x09\x09\x0a\x09\x09\x09jQuery.each( prop, function(name, val){\x0a\x09\x09\x09\x09var e = new jQuery.fx( self, opt, name );\x0a\x0a\x09\x09\x09\x09if ( /toggle|show|hide/.test(val) )\x0a\x09\x09\x09\x09\x09e[ val == \x22toggle\x22 ? hidden ? \x22show\x22 : \x22hide\x22 : val ]( prop );\x0a\x09\x09\x09\x09else {\x0a\x09\x09\x09\x09\x09var parts = val.toString().match(/^([+-]=)?([\x5cd+-.]+)(.*)$/),\x0a\x09\x09\x09\x09\x09\x09start = e.cur(true) || 0;\x0a\x0a\x09\x09\x09\x09\x09if ( parts ) {\x0a\x09\x09\x09\x09\x09\x09var end = parseFloat(parts[2]),\x0a\x09\x09\x09\x09\x09\x09\x09unit = parts[3] || \x22px\x22;\x0a\x0a\x09\x09\x09\x09\x09\x09// We need to compute starting value\x0a\x09\x09\x09\x09\x09\x09if ( unit != \x22px\x22 ) {\x0a\x09\x09\x09\x09\x09\x09\x09self.style[ name ] = (end || 1) + unit;\x0a\x09\x09\x09\x09\x09\x09\x09start = ((end || 1) / e.cur(true)) * start;\x0a\x09\x09\x09\x09\x09\x09\x09self.style[ name ] = start + unit;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09// If a +=/-= token was provided, we\x27re doing a relative animation\x0a\x09\x09\x09\x09\x09\x09if ( parts[1] )\x0a\x09\x09\x09\x09\x09\x09\x09end = ((parts[1] == \x22-=\x22 ? -1 : 1) * end) + start;\x0a\x0a\x09\x09\x09\x09\x09\x09e.custom( start, end, unit );\x0a\x09\x09\x09\x09\x09} else\x0a\x09\x09\x09\x09\x09\x09e.custom( start, val, \x22\x22 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09// For JS strict compliance\x0a\x09\x09\x09return true;\x0a\x09\x09});\x0a\x09},\x0a\x09\x0a\x09queue: function(type, fn){\x0a\x09\x09if ( jQuery.isFunction(type) || ( type && type.constructor == Array )) {\x0a\x09\x09\x09fn = type;\x0a\x09\x09\x09type = \x22fx\x22;\x0a\x09\x09}\x0a\x0a\x09\x09if ( !type || (typeof type == \x22string\x22 && !fn) )\x0a\x09\x09\x09return queue( this[0], type );\x0a\x0a\x09\x09return this.each(function(){\x0a\x09\x09\x09if ( fn.constructor == Array )\x0a\x09\x09\x09\x09queue(this, type, fn);\x0a\x09\x09\x09else {\x0a\x09\x09\x09\x09queue(this, type).push( fn );\x0a\x09\x09\x09\x0a\x09\x09\x09\x09if ( queue(this, type).length == 1 )\x0a\x09\x09\x09\x09\x09fn.apply(this);\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09stop: function(clearQueue, gotoEnd){\x0a\x09\x09var timers = jQuery.timers;\x0a\x0a\x09\x09if (clearQueue)\x0a\x09\x09\x09this.queue([]);\x0a\x0a\x09\x09this.each(function(){\x0a\x09\x09\x09// go in reverse order so anything added to the queue during the loop is ignored\x0a\x09\x09\x09for ( var i = timers.length - 1; i \x3e= 0; i-- )\x0a\x09\x09\x09\x09if ( timers[i].elem == this ) {\x0a\x09\x09\x09\x09\x09if (gotoEnd)\x0a\x09\x09\x09\x09\x09\x09// force the next step to be the last\x0a\x09\x09\x09\x09\x09\x09timers[i](true);\x0a\x09\x09\x09\x09\x09timers.splice(i, 1);\x0a\x09\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09// start the next in the queue if the last step wasn\x27t forced\x0a\x09\x09if (!gotoEnd)\x0a\x09\x09\x09this.dequeue();\x0a\x0a\x09\x09return this;\x0a\x09}\x0a\x0a});\x0a\x0avar queue = function( elem, type, array ) {\x0a\x09if ( !elem )\x0a\x09\x09return undefined;\x0a\x0a\x09type = type || \x22fx\x22;\x0a\x0a\x09var q = jQuery.data( elem, type + \x22queue\x22 );\x0a\x0a\x09if ( !q || array )\x0a\x09\x09q = jQuery.data( elem, type + \x22queue\x22, \x0a\x09\x09\x09array ? jQuery.makeArray(array) : [] );\x0a\x0a\x09return q;\x0a};\x0a\x0ajQuery.fn.dequeue = function(type){\x0a\x09type = type || \x22fx\x22;\x0a\x0a\x09return this.each(function(){\x0a\x09\x09var q = queue(this, type);\x0a\x0a\x09\x09q.shift();\x0a\x0a\x09\x09if ( q.length )\x0a\x09\x09\x09q[0].apply( this );\x0a\x09});\x0a};\x0a\x0ajQuery.extend({\x0a\x09\x0a\x09speed: function(speed, easing, fn) {\x0a\x09\x09var opt = speed && speed.constructor == Object ? speed : {\x0a\x09\x09\x09complete: fn || !fn && easing || \x0a\x09\x09\x09\x09jQuery.isFunction( speed ) && speed,\x0a\x09\x09\x09duration: speed,\x0a\x09\x09\x09easing: fn && easing || easing && easing.constructor != Function && easing\x0a\x09\x09};\x0a\x0a\x09\x09opt.duration = (opt.duration && opt.duration.constructor == Number ? \x0a\x09\x09\x09opt.duration : \x0a\x09\x09\x09{ slow: 600, fast: 200 }[opt.duration]) || 400;\x0a\x09\x0a\x09\x09// Queueing\x0a\x09\x09opt.old = opt.complete;\x0a\x09\x09opt.complete = function(){\x0a\x09\x09\x09if ( opt.queue !== false )\x0a\x09\x09\x09\x09jQuery(this).dequeue();\x0a\x09\x09\x09if ( jQuery.isFunction( opt.old ) )\x0a\x09\x09\x09\x09opt.old.apply( this );\x0a\x09\x09};\x0a\x09\x0a\x09\x09return opt;\x0a\x09},\x0a\x09\x0a\x09easing: {\x0a\x09\x09linear: function( p, n, firstNum, diff ) {\x0a\x09\x09\x09return firstNum + diff * p;\x0a\x09\x09},\x0a\x09\x09swing: function( p, n, firstNum, diff ) {\x0a\x09\x09\x09return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;\x0a\x09\x09}\x0a\x09},\x0a\x09\x0a\x09timers: [],\x0a\x09timerId: null,\x0a\x0a\x09fx: function( elem, options, prop ){\x0a\x09\x09this.options = options;\x0a\x09\x09this.elem = elem;\x0a\x09\x09this.prop = prop;\x0a\x0a\x09\x09if ( !options.orig )\x0a\x09\x09\x09options.orig = {};\x0a\x09}\x0a\x0a});\x0a\x0ajQuery.fx.prototype = {\x0a\x0a\x09// Simple function for setting a style value\x0a\x09update: function(){\x0a\x09\x09if ( this.options.step )\x0a\x09\x09\x09this.options.step.apply( this.elem, [ this.now, this ] );\x0a\x0a\x09\x09(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );\x0a\x0a\x09\x09// Set display property to block for height/width animations\x0a\x09\x09if ( this.prop == \x22height\x22 || this.prop == \x22width\x22 )\x0a\x09\x09\x09this.elem.style.display = \x22block\x22;\x0a\x09},\x0a\x0a\x09// Get the current size\x0a\x09cur: function(force){\x0a\x09\x09if ( this.elem[this.prop] != null && this.elem.style[this.prop] == null )\x0a\x09\x09\x09return this.elem[ this.prop ];\x0a\x0a\x09\x09var r = parseFloat(jQuery.css(this.elem, this.prop, force));\x0a\x09\x09return r && r \x3e -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;\x0a\x09},\x0a\x0a\x09// Start an animation from one number to another\x0a\x09custom: function(from, to, unit){\x0a\x09\x09this.startTime = (new Date()).getTime();\x0a\x09\x09this.start = from;\x0a\x09\x09this.end = to;\x0a\x09\x09this.unit = unit || this.unit || \x22px\x22;\x0a\x09\x09this.now = this.start;\x0a\x09\x09this.pos = this.state = 0;\x0a\x09\x09this.update();\x0a\x0a\x09\x09var self = this;\x0a\x09\x09function t(gotoEnd){\x0a\x09\x09\x09return self.step(gotoEnd);\x0a\x09\x09}\x0a\x0a\x09\x09t.elem = this.elem;\x0a\x0a\x09\x09jQuery.timers.push(t);\x0a\x0a\x09\x09if ( jQuery.timerId == null ) {\x0a\x09\x09\x09jQuery.timerId = setInterval(function(){\x0a\x09\x09\x09\x09var timers = jQuery.timers;\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09for ( var i = 0; i \x3c timers.length; i++ )\x0a\x09\x09\x09\x09\x09if ( !timers[i]() )\x0a\x09\x09\x09\x09\x09\x09timers.splice(i--, 1);\x0a\x0a\x09\x09\x09\x09if ( !timers.length ) {\x0a\x09\x09\x09\x09\x09clearInterval( jQuery.timerId );\x0a\x09\x09\x09\x09\x09jQuery.timerId = null;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}, 13);\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// Simple \x27show\x27 function\x0a\x09show: function(){\x0a\x09\x09// Remember where we started, so that we can go back to it later\x0a\x09\x09this.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\x0a\x09\x09this.options.show = true;\x0a\x0a\x09\x09// Begin the animation\x0a\x09\x09this.custom(0, this.cur());\x0a\x0a\x09\x09// Make sure that we start at a small width/height to avoid any\x0a\x09\x09// flash of content\x0a\x09\x09if ( this.prop == \x22width\x22 || this.prop == \x22height\x22 )\x0a\x09\x09\x09this.elem.style[this.prop] = \x221px\x22;\x0a\x09\x09\x0a\x09\x09// Start by showing the element\x0a\x09\x09jQuery(this.elem).show();\x0a\x09},\x0a\x0a\x09// Simple \x27hide\x27 function\x0a\x09hide: function(){\x0a\x09\x09// Remember where we started, so that we can go back to it later\x0a\x09\x09this.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\x0a\x09\x09this.options.hide = true;\x0a\x0a\x09\x09// Begin the animation\x0a\x09\x09this.custom(this.cur(), 0);\x0a\x09},\x0a\x0a\x09// Each step of an animation\x0a\x09step: function(gotoEnd){\x0a\x09\x09var t = (new Date()).getTime();\x0a\x0a\x09\x09if ( gotoEnd || t \x3e this.options.duration + this.startTime ) {\x0a\x09\x09\x09this.now = this.end;\x0a\x09\x09\x09this.pos = this.state = 1;\x0a\x09\x09\x09this.update();\x0a\x0a\x09\x09\x09this.options.curAnim[ this.prop ] = true;\x0a\x0a\x09\x09\x09var done = true;\x0a\x09\x09\x09for ( var i in this.options.curAnim )\x0a\x09\x09\x09\x09if ( this.options.curAnim[i] !== true )\x0a\x09\x09\x09\x09\x09done = false;\x0a\x0a\x09\x09\x09if ( done ) {\x0a\x09\x09\x09\x09if ( this.options.display != null ) {\x0a\x09\x09\x09\x09\x09// Reset the overflow\x0a\x09\x09\x09\x09\x09this.elem.style.overflow = this.options.overflow;\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09\x09// Reset the display\x0a\x09\x09\x09\x09\x09this.elem.style.display = this.options.display;\x0a\x09\x09\x09\x09\x09if ( jQuery.css(this.elem, \x22display\x22) == \x22none\x22 )\x0a\x09\x09\x09\x09\x09\x09this.elem.style.display = \x22block\x22;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Hide the element if the \x22hide\x22 operation was done\x0a\x09\x09\x09\x09if ( this.options.hide )\x0a\x09\x09\x09\x09\x09this.elem.style.display = \x22none\x22;\x0a\x0a\x09\x09\x09\x09// Reset the properties, if the item has been hidden or shown\x0a\x09\x09\x09\x09if ( this.options.hide || this.options.show )\x0a\x09\x09\x09\x09\x09for ( var p in this.options.curAnim )\x0a\x09\x09\x09\x09\x09\x09jQuery.attr(this.elem.style, p, this.options.orig[p]);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// If a callback was provided, execute it\x0a\x09\x09\x09if ( done && jQuery.isFunction( this.options.complete ) )\x0a\x09\x09\x09\x09// Execute the complete function\x0a\x09\x09\x09\x09this.options.complete.apply( this.elem );\x0a\x0a\x09\x09\x09return false;\x0a\x09\x09} else {\x0a\x09\x09\x09var n = t - this.startTime;\x0a\x09\x09\x09this.state = n / this.options.duration;\x0a\x0a\x09\x09\x09// Perform the easing function, defaults to swing\x0a\x09\x09\x09this.pos = jQuery.easing[this.options.easing || (jQuery.easing.swing ? \x22swing\x22 : \x22linear\x22)](this.state, n, 0, 1, this.options.duration);\x0a\x09\x09\x09this.now = this.start + ((this.end - this.start) * this.pos);\x0a\x0a\x09\x09\x09// Perform the next step of the animation\x0a\x09\x09\x09this.update();\x0a\x09\x09}\x0a\x0a\x09\x09return true;\x0a\x09}\x0a\x0a};\x0a\x0ajQuery.fx.step = {\x0a\x09scrollLeft: function(fx){\x0a\x09\x09fx.elem.scrollLeft = fx.now;\x0a\x09},\x0a\x0a\x09scrollTop: function(fx){\x0a\x09\x09fx.elem.scrollTop = fx.now;\x0a\x09},\x0a\x0a\x09opacity: function(fx){\x0a\x09\x09jQuery.attr(fx.elem.style, \x22opacity\x22, fx.now);\x0a\x09},\x0a\x0a\x09_default: function(fx){\x0a\x09\x09fx.elem.style[ fx.prop ] = fx.now + fx.unit;\x0a\x09}\x0a};\x0a// The Offset Method\x0a// Originally By Brandon Aaron, part of the Dimension Plugin\x0a// http://jquery.com/plugins/project/dimensions\x0ajQuery.fn.offset = function() {\x0a\x09var left = 0, top = 0, elem = this[0], results;\x0a\x09\x0a\x09if ( elem ) with ( jQuery.browser ) {\x0a\x09\x09var parent       = elem.parentNode, \x0a\x09\x09    offsetChild  = elem,\x0a\x09\x09    offsetParent = elem.offsetParent, \x0a\x09\x09    doc          = elem.ownerDocument,\x0a\x09\x09    safari2      = safari && parseInt(version) \x3c 522,\x0a\x09\x09    fixed        = jQuery.css(elem, \x22position\x22) == \x22fixed\x22;\x0a\x09\x0a\x09\x09// Use getBoundingClientRect if available\x0a\x09\x09if ( elem.getBoundingClientRect ) {\x0a\x09\x09\x09var box = elem.getBoundingClientRect();\x0a\x09\x09\x0a\x09\x09\x09// Add the document scroll offsets\x0a\x09\x09\x09add(box.left + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\x0a\x09\x09\x09\x09box.top  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\x0a\x09\x09\x0a\x09\x09\x09// IE adds the HTML element\x27s border, by default it is medium which is 2px\x0a\x09\x09\x09// IE 6 and 7 quirks mode the border width is overwritable by the following css html { border: 0; }\x0a\x09\x09\x09// IE 7 standards mode, the border is always 2px\x0a\x09\x09\x09// This border/offset is typically represented by the clientLeft and clientTop properties\x0a\x09\x09\x09// However, in IE6 and 7 quirks mode the clientLeft and clientTop properties are not updated when overwriting it via CSS\x0a\x09\x09\x09// Therefore this method will be off by 2px in IE while in quirksmode\x0a\x09\x09\x09add( -doc.documentElement.clientLeft, -doc.documentElement.clientTop );\x0a\x09\x0a\x09\x09// Otherwise loop through the offsetParents and parentNodes\x0a\x09\x09} else {\x0a\x09\x09\x0a\x09\x09\x09// Initial element offsets\x0a\x09\x09\x09add( elem.offsetLeft, elem.offsetTop );\x0a\x09\x09\x09\x0a\x09\x09\x09// Get parent offsets\x0a\x09\x09\x09while ( offsetParent ) {\x0a\x09\x09\x09\x09// Add offsetParent offsets\x0a\x09\x09\x09\x09add( offsetParent.offsetLeft, offsetParent.offsetTop );\x0a\x09\x09\x09\x0a\x09\x09\x09\x09// Mozilla and Safari \x3e 2 does not include the border on offset parents\x0a\x09\x09\x09\x09// However Mozilla adds the border for table or table cells\x0a\x09\x09\x09\x09if ( mozilla && !/^t(able|d|h)$/i.test(offsetParent.tagName) || safari && !safari2 )\x0a\x09\x09\x09\x09\x09border( offsetParent );\x0a\x09\x09\x09\x09\x09\x0a\x09\x09\x09\x09// Add the document scroll offsets if position is fixed on any offsetParent\x0a\x09\x09\x09\x09if ( !fixed && jQuery.css(offsetParent, \x22position\x22) == \x22fixed\x22 )\x0a\x09\x09\x09\x09\x09fixed = true;\x0a\x09\x09\x09\x0a\x09\x09\x09\x09// Set offsetChild to previous offsetParent unless it is the body element\x0a\x09\x09\x09\x09offsetChild  = /^body$/i.test(offsetParent.tagName) ? offsetChild : offsetParent;\x0a\x09\x09\x09\x09// Get next offsetParent\x0a\x09\x09\x09\x09offsetParent = offsetParent.offsetParent;\x0a\x09\x09\x09}\x0a\x09\x09\x0a\x09\x09\x09// Get parent scroll offsets\x0a\x09\x09\x09while ( parent && parent.tagName && !/^body|html$/i.test(parent.tagName) ) {\x0a\x09\x09\x09\x09// Remove parent scroll UNLESS that parent is inline or a table to work around Opera inline/table scrollLeft/Top bug\x0a\x09\x09\x09\x09if ( !/^inline|table.*$/i.test(jQuery.css(parent, \x22display\x22)) )\x0a\x09\x09\x09\x09\x09// Subtract parent scroll offsets\x0a\x09\x09\x09\x09\x09add( -parent.scrollLeft, -parent.scrollTop );\x0a\x09\x09\x09\x0a\x09\x09\x09\x09// Mozilla does not add the border for a parent that has overflow != visible\x0a\x09\x09\x09\x09if ( mozilla && jQuery.css(parent, \x22overflow\x22) != \x22visible\x22 )\x0a\x09\x09\x09\x09\x09border( parent );\x0a\x09\x09\x09\x0a\x09\x09\x09\x09// Get next parent\x0a\x09\x09\x09\x09parent = parent.parentNode;\x0a\x09\x09\x09}\x0a\x09\x09\x0a\x09\x09\x09// Safari \x3c= 2 doubles body offsets with a fixed position element/offsetParent or absolutely positioned offsetChild\x0a\x09\x09\x09// Mozilla doubles body offsets with a non-absolutely positioned offsetChild\x0a\x09\x09\x09if ( (safari2 && (fixed || jQuery.css(offsetChild, \x22position\x22) == \x22absolute\x22)) || \x0a\x09\x09\x09\x09(mozilla && jQuery.css(offsetChild, \x22position\x22) != \x22absolute\x22) )\x0a\x09\x09\x09\x09\x09add( -doc.body.offsetLeft, -doc.body.offsetTop );\x0a\x09\x09\x09\x0a\x09\x09\x09// Add the document scroll offsets if position is fixed\x0a\x09\x09\x09if ( fixed )\x0a\x09\x09\x09\x09add(Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\x0a\x09\x09\x09\x09\x09Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\x0a\x09\x09}\x0a\x0a\x09\x09// Return an object with top and left properties\x0a\x09\x09results = { top: top, left: left };\x0a\x09}\x0a\x0a\x09function border(elem) {\x0a\x09\x09add( jQuery.curCSS(elem, \x22borderLeftWidth\x22, true), jQuery.curCSS(elem, \x22borderTopWidth\x22, true) );\x0a\x09}\x0a\x0a\x09function add(l, t) {\x0a\x09\x09left += parseInt(l) || 0;\x0a\x09\x09top += parseInt(t) || 0;\x0a\x09}\x0a\x0a\x09return results;\x0a};\x0a})();\x0a'}