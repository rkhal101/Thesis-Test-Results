var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Thu, 02 Aug 2018 01:01:18 GMT\x0aServer: Apache/2.4.10 (Debian) PHP/5.6.11\x0aLast-Modified: Thu, 23 Jul 2015 19:18:04 GMT\x0aETag: \x225fe4-51b8fbf1a5300-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-5712/5713\x0aContent-Length: 5713\x0aConnection: close\x0aContent-Type: application/javascript\x0a\x0aBrowserHistoryUtils = {\x0d\x0a    addEvent: function(elm, evType, fn, useCapture) {\x0d\x0a        useCapture = useCapture || false;\x0d\x0a        if (elm.addEventListener) {\x0d\x0a            elm.addEventListener(evType, fn, useCapture);\x0d\x0a            return true;\x0d\x0a        }\x0d\x0a        else if (elm.attachEvent) {\x0d\x0a            var r = elm.attachEvent(\x27on\x27 + evType, fn);\x0d\x0a            return r;\x0d\x0a        }\x0d\x0a        else {\x0d\x0a            elm[\x27on\x27 + evType] = fn;\x0d\x0a        }\x0d\x0a    }\x0d\x0a}\x0d\x0a\x0d\x0aBrowserHistory = (function() {\x0d\x0a    // type of browser\x0d\x0a    var browser = {\x0d\x0a        ie: false, \x0d\x0a        firefox: false, \x0d\x0a        safari: false, \x0d\x0a        opera: false, \x0d\x0a        version: -1\x0d\x0a    };\x0d\x0a\x0d\x0a    // if setDefaultURL has been called, our first clue\x0d\x0a    // that the SWF is ready and listening\x0d\x0a    //var swfReady = false;\x0d\x0a\x0d\x0a    // the URL we\x27ll send to the SWF once it is ready\x0d\x0a    //var pendingURL = \x27\x27;\x0d\x0a\x0d\x0a    // Default app state URL to use when no fragment ID present\x0d\x0a    var defaultHash = \x27\x27;\x0d\x0a\x0d\x0a    // Last-known app state URL\x0d\x0a    var currentHref = document.location.href;\x0d\x0a\x0d\x0a    // Initial URL (used only by IE)\x0d\x0a    var initialHref = document.location.href;\x0d\x0a\x0d\x0a    // Initial URL (used only by IE)\x0d\x0a    var initialHash = document.location.hash;\x0d\x0a\x0d\x0a    // History frame source URL prefix (used only by IE)\x0d\x0a    var historyFrameSourcePrefix = \x27history/historyFrame.html?\x27;\x0d\x0a\x0d\x0a    // History maintenance (used only by Safari)\x0d\x0a    var currentHistoryLength = -1;\x0d\x0a\x0d\x0a    var historyHash = [];\x0d\x0a\x0d\x0a    var initialState = createState(initialHref, initialHref + \x27#\x27 + initialHash, initialHash);\x0d\x0a\x0d\x0a    var backStack = [];\x0d\x0a    var forwardStack = [];\x0d\x0a\x0d\x0a    var currentObjectId = null;\x0d\x0a\x0d\x0a    //UserAgent detection\x0d\x0a    var useragent = navigator.userAgent.toLowerCase();\x0d\x0a\x0d\x0a    if (useragent.indexOf(\x22opera\x22) != -1) {\x0d\x0a        browser.opera = true;\x0d\x0a    } else if (useragent.indexOf(\x22msie\x22) != -1) {\x0d\x0a        browser.ie = true;\x0d\x0a        browser.version = parseFloat(useragent.substring(useragent.indexOf(\x27msie\x27) + 4));\x0d\x0a    } else if (useragent.indexOf(\x22safari\x22) != -1) {\x0d\x0a        browser.safari = true;\x0d\x0a        browser.version = parseFloat(useragent.substring(useragent.indexOf(\x27safari\x27) + 7));\x0d\x0a    } else if (useragent.indexOf(\x22gecko\x22) != -1) {\x0d\x0a        browser.firefox = true;\x0d\x0a    }\x0d\x0a\x0d\x0a    if (browser.ie == true && browser.version == 7) {\x0d\x0a        window[\x22_ie_firstload\x22] = false;\x0d\x0a    }\x0d\x0a\x0d\x0a    // Accessor functions for obtaining specific elements of the page.\x0d\x0a    function getHistoryFrame()\x0d\x0a    {\x0d\x0a        return document.getElementById(\x27ie_historyFrame\x27);\x0d\x0a    }\x0d\x0a\x0d\x0a    function getAnchorElement()\x0d\x0a    {\x0d\x0a        return document.getElementById(\x27firefox_anchorDiv\x27);\x0d\x0a    }\x0d\x0a\x0d\x0a    function getFormElement()\x0d\x0a    {\x0d\x0a        return document.getElementById(\x27safari_formDiv\x27);\x0d\x0a    }\x0d\x0a\x0d\x0a    function getRememberElement()\x0d\x0a    {\x0d\x0a        return document.getElementById(\x22safari_remember_field\x22);\x0d\x0a    }\x0d\x0a\x0d\x0a    // Get the Flash player object for performing ExternalInterface callbacks.\x0d\x0a    // Updated for changes to SWFObject2.\x0d\x0a    function getPlayer(id) {\x0d\x0a\x09\x09if (id && document.getElementById(id)) {\x0d\x0a\x09\x09\x09var r = document.getElementById(id);\x0d\x0a\x09\x09\x09if (typeof r.SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09return r;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09\x09else {\x0d\x0a\x09\x09\x09\x09var o = r.getElementsByTagName(\x22object\x22);\x0d\x0a\x09\x09\x09\x09var e = r.getElementsByTagName(\x22embed\x22);\x0d\x0a\x09\x09\x09\x09if (o.length \x3e 0 && typeof o[0].SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09\x09return o[0];\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else if (e.length \x3e 0 && typeof e[0].SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09\x09return e[0];\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09}\x0d\x0a\x09\x09else {\x0d\x0a\x09\x09\x09var o = document.getElementsByTagName(\x22object\x22);\x0d\x0a\x09\x09\x09var e = document.getElementsByTagName(\x22embed\x22);\x0d\x0a\x09\x09\x09if (e.length \x3e 0 && typeof e[0].SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09return e[0];\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09\x09else if (o.length \x3e 0 && typeof o[0].SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09return o[0];\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09\x09else if (o.length \x3e 1 && typeof o[1].SetVariable != \x22undefined\x22) {\x0d\x0a\x09\x09\x09\x09return o[1];\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return undefined;\x0d\x0a\x09}\x0d\x0a    \x0d\x0a    function getPlayers() {\x0d\x0a        var players = [];\x0d\x0a        if (players.length == 0) {\x0d\x0a            var tmp = document.getElementsByTagName(\x27object\x27);\x0d\x0a            players = tmp;\x0d\x0a        }\x0d\x0a        \x0d\x0a        if (players.length == 0 || players[0].object == null) {\x0d\x0a            var tmp = document.getElementsByTagName(\x27embed\x27);\x0d\x0a            players = tmp;\x0d\x0a        }\x0d\x0a        return players;\x0d\x0a    }\x0d\x0a\x0d\x0a\x09function getIframeHash() {\x0d\x0a\x09\x09var doc = getHistoryFrame().contentWindow.document;\x0d\x0a\x09\x09var hash = String(doc.location.search);\x0d\x0a\x09\x09if (hash.length == 1 && hash.charAt(0) == \x22?\x22) {\x0d\x0a\x09\x09\x09hash = \x22\x22;\x0d\x0a\x09\x09}\x0d\x0a\x09\x09else if (hash.length \x3e= 2 && hash.charAt(0) == \x22?\x22) {\x0d\x0a\x09\x09\x09hash = hash.substring(1);\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return hash;\x0d\x0a\x09}\x0d\x0a\x0d\x0a    /* Get the current location hash excluding the \x27#\x27 symbol. */\x0d\x0a    function getHash() {\x0d\x0a       // It would be nice if we could use document.location.hash here,\x0d\x0a       // but it\x27s faulty sometimes.\x0d\x0a       var idx = document.location.href.indexOf(\x27#\x27);\x0d\x0a       return (idx \x3e= 0) ? document.location.href.substr(idx+1) : \x27\x27;\x0d\x0a    }\x0d\x0a\x0d\x0a    /* Get the current location hash excluding the \x27#\x27 symbol. */\x0d\x0a    function setHash(hash) {\x0d\x0a       // It would be nice if we could use document.location.hash here,\x0d\x0a       // but it\x27s faulty sometimes.\x0d\x0a       if (hash == \x27\x27) hash = \x27#\x27\x0d\x0a       document.location.hash = hash;\x0d\x0a    }\x0d\x0a\x0d\x0a    function createState(baseUrl, newUrl, flexAppUrl) {\x0d\x0a        return { \x27baseUrl\x27: baseUrl, \x27newUrl\x27: newUrl, \x27flexAppUrl\x27: flexAppUrl, \x27title\x27: null };\x0d\x0a    }\x0d\x0a\x0d\x0a    /* Add a history entry to the browser.\x0d\x0a     *   baseUrl: the portion of the location prior to the \x27#\x27\x0d\x0a     *   newUrl: the entire new URL, including \x27#\x27 and following fragment\x0d\x0a     *   flexAppUrl: the portion of the location following the \x27#\x27 only\x0d\x0a     */\x0d\x0a    function addHistoryEntry(baseUrl, newUrl, flexAppUrl) {\x0d\x0a\x0d\x0a        //delete all the history entries\x0d\x0a        forwardStack = [];\x0d\x0a\x0d\x0a        if (browser.ie) {\x0d\x0a            //Check to see if we are being asked to do a navigate for the first\x0d\x0a            //history entry, and if so ignore, because it\x27s coming from the creation\x0d\x0a            //of the history iframe\x0d\x0a            if (flexAppUrl == defaultHash && document.location.href == initialHref && window[\x27_ie_firstload\x27]) {\x0d\x0a                currentHref = initialHref;\x0d\x0a                return;\x0d\x0a            }\x0d\x0a            if ((!flexAppUrl || flexAppUrl == defaultHash) && window[\x27_ie_firstload\x27]) {\x0d\x0a                newUrl = baseUrl + \x27#\x27 + defaultHash;\x0d\x0a                flexAppUrl = defaultHash;\x0d\x0a            } else {\x0d\x0a                // for IE, tell the history frame to go somewhere without a \x27#\x27\x0d\x0a                // in order to get this entry into the browser history.\x0d\x0a                getHistoryFrame().src = historyFrameSourcePrefix + flexAppUrl;\x0d\x0a            }\x0d\x0a            setHash(flexAppUrl);\x0d\x0a        } else {\x0d\x0a\x0d\x0a            //ADR\x0d\x0a            if (backStack.length == 0 && initialState.flexAppUrl == flexAppUrl) {\x0d\x0a                initialState = createState(baseUrl, newUrl, flexAppUrl);\x0d\x0a            } else if(backStack.length \x3e 0 && backStack[backStack.length - 1].flexAppUrl == flexAppUrl) {\x0d\x0a                backStack[backStack.length - 1] = createState(baseUrl, newUrl, flexAppUrl);\x0d\x0a            }\x0d\x0a\x0d\x0a            if (browser.safari) {\x0d\x0a                // for Safari, submit a form whose action points to the desired URL\x0d\x0a                if (browser.version \x3c= 419.3) {\x0d\x0a                    var file = window.location.pathname.toString();\x0d\x0a                    file = file.substring(file.lastIndexOf(\x22/\x22)+1);\x0d\x0a                    getFormElement().innerHTML = \x27\x3cform name=\x22historyForm\x22 action=\x22\x27+file+\x27#\x27 + flexAppUrl + \x27\x22 method=\x22GET\x22\x3e\x3c/form\x3e\x27;\x0d\x0a                    //get the current elements and add them to the form\x0d\x0a                    var qs = window.location.search.substring(1);\x0d\x0a                    var qs_arr = qs.split(\x22&\x22);\x0d\x0a                    for (var i = 0; i \x3c qs_arr.length; i++) {\x0d\x0a                        var tmp = qs_arr[i].split(\x22=\x22);\x0d\x0a                        var elem = document.createElement(\x22input\x22);\x0d\x0a                        elem.type = \x22hidden\x22;\x0d\x0a                        elem.name = tmp[0];\x0d\x0a                        elem.value = tmp[1];\x0d\x0a                        document.forms.historyForm.appendChild(elem);\x0d\x0a                    }\x0d\x0a                    document.forms.historyForm.submit();\x0d\x0a                } else {\x0d\x0a                    top.location.hash = flexAppUrl;\x0d\x0a                }\x0d\x0a                // We also have to maintain the history by hand for Safari\x0d\x0a                historyHash[history.length] = flexAppUrl;\x0d\x0a                _storeStates();\x0d\x0a            } else {\x0d\x0a                // Otherwise, write an anchor into the page and tell the browser to go there\x0d\x0a                addAnchor(flexAppUrl);\x0d\x0a                setHash(flexAppUrl);\x0d\x0a            }\x0d\x0a        }\x0d\x0a        backStack.push(createState(baseUrl, newUrl, flexAppUrl));\x0d\x0a    }\x0d\x0a\x0d\x0a    function _storeStates() {\x0d\x0a        if (browser.safari) {\x0d\x0a            getRememberElement().value = historyHash.join(\x22,\x22);\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    function handleBackButton() {\x0d\x0a        //The \x22current\x22 page is always at the top of the history stack.\x0d\x0a        var current = backStack.pop();\x0d\x0a        if (!current) { return; }\x0d\x0a        var last = backStack[backStack.length - 1];\x0d\x0a        if (!last && backStack.length == 0){\x0d\x0a            last = initialState;\x0d\x0a        }\x0d\x0a        forwardStack.push(current);\x0d\x0a    }\x0d\x0a\x0d\x0a    function handleForwardButton() {\x0d\x0a        //summary: private method. Do not call this directly.\x0d\x0a\x0d\x0a        var last = forwardStack.pop();\x0d\x0a        if (!last) { return; }\x0d\x0a        backStack.push(last);\x0d\x0a    }\x0d\x0a\x0d\x0a    function handleArbitraryUrl() {\x0d\x0a        //delete all the history entries\x0d\x0a        forwardStack = [];\x0d\x0a    }\x0d\x0a\x0d\x0a    /* Called periodically to poll to see if we need to detect navigation that has occurred */\x0d\x0a    function checkForUrlChange() {\x0d\x0a\x0d\x0a        if (browser.ie) {\x0d\x0a            if (currentHref != document.location.href && currentHref + \x27#\x27 != document.location.href) {\x0d\x0a                //This occurs when the user has navigated to a specific URL\x0d\x0a                //within the app, and didn\x27t use browser back/forward\x0d\x0a                //IE seems to have a bug where it stops updating the URL it\x0d\x0a                //shows the end-user at this point, but programatically it\x0d\x0a                //appears to be correct.  Do a full app reload to get around\x0d\x0a                //this issue.\x0d\x0a                if (browser.version \x3c 7) {\x0d\x0a                    currentHref = document.location.href;\x0d\x0a                    document.location.reload();\x0d\x0a                } else {\x0d\x0a\x09\x09\x09\x09\x09if (getHash() != getIframeHash()) {\x0d\x0a\x09\x09\x09\x09\x09\x09// this.iframe.src = this.blankURL + hash;\x0d\x0a\x09\x09\x09\x09\x09\x09var sourceToSet = historyFrameSourcePrefix + getHash();\x0d\x0a\x09\x09\x09\x09\x09\x09getHistoryFrame().src = sourceToSet;\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a                }\x0d\x0a            }\x0d\x0a        }\x0d\x0a\x0d\x0a        if (browser.safari) {\x0d\x0a            // For Safari, we have to check to see if history.length changed.\x0d\x0a            if (currentHistoryLength \x3e= 0 && history.length != currentHistoryLength) {\x0d\x0a                //alert(\x22did change: \x22 + history.length + \x22, \x22 + historyHash.length + \x22|\x22 + historyHash[history.length] + \x22|\x3e\x22 + historyHash.join(\x22|\x22));\x0d\x0a                // If it did change, then we have to look the old state up\x0d\x0a                // in our hand-maintained array since document.location.hash\x0d\x0a                // won\x27t have changed, then call back into BrowserManager.\x0d\x0a                currentHistoryLength = history.length;\x0d\x0a                var flexAppUrl = historyHash[currentHistoryLength];\x0d\x0a                if (flexAppUrl == \x27\x27) {\x0d\x0a                    //flexAppUrl = defaultHash;\x0d\x0a                }\x0d\x0a                //ADR: to fix multiple\x0d\x0a                if (typeof BrowserHistory_multiple != \x22undefined\x22 && BrowserHistory_multiple == true) {\x0d\x0a                    var pl = getPlayers();\x0d\x0a                    for (var i = 0; i \x3c pl.length; i++) {\x0d\x0a                        pl[i].browserURLChange(flexAppUrl);\x0d\x0a                    }\x0d\x0a                } else {\x0d\x0a                    getPlayer().browserURLChange(flexAppUrl);\x0d\x0a                }\x0d\x0a                _storeStates();\x0d\x0a            }\x0d\x0a        }\x0d\x0a        if (browser.firefox) {\x0d\x0a            if (currentHref != document.location.href) {\x0d\x0a                var bsl = backStack.length;\x0d\x0a\x0d\x0a                var urlActions = {\x0d\x0a                    back: false, \x0d\x0a                    forward: false, \x0d\x0a                    set: false\x0d\x0a                }\x0d\x0a\x0d\x0a                if ((window.location.hash == initialHash || window.location.href == initialHref) && (bsl == 1)) {\x0d\x0a                    urlActions.back = true;\x0d\x0a                    // FIXME: could this ever be a forward button?\x0d\x0a                    // we can\x27t clear it because we still need to check for forwards. Ugg.\x0d\x0a                    // clearInterval(this.locationTimer);\x0d\x0a                    handleBackButton();\x0d\x0a                }\x0d\x0a                \x0d\x0a                // first check to see if we could have gone forward. We always halt on\x0d\x0a                // a no-hash item.\x0d\x0a                if (forwardStack.length \x3e 0) {\x0d\x0a                    if (forwardStack[forwardStack.length-1].flexAppUrl == getHash()) {\x0d\x0a                        urlActions.forward = true;\x0d\x0a                        handleForwardButton();\x0d\x0a                    }\x0d\x0a                }\x0d\x0a\x0d\x0a                // ok, that didn\x27t work, try someplace back in the history stack\x0d\x0a                if ((bsl \x3e= 2) && (backStack[bsl - 2])) {\x0d\x0a                    if (backStack[bsl - 2].flexAppUrl == getHash()) {\x0d\x0a                        urlActions.back = true;\x0d\x0a                        handleBackButton();\x0d\x0a                    }\x0d\x0a                }\x0d\x0a                \x0d\x0a                if (!urlActions.back && !urlActions.forward) {\x0d\x0a                    var foundInStacks = {\x0d\x0a                        back: -1, \x0d\x0a                        forward: -1\x0d\x0a                    }\x0d\x0a\x0d\x0a                    for (var i = 0; i \x3c backStack.length; i++) {\x0d\x0a                        if (backStack[i].flexAppUrl == getHash() && i != (bsl - 2)) {\x0d\x0a                            arbitraryUrl = true;\x0d\x0a                            foundInStacks.back = i;\x0d\x0a                        }\x0d\x0a                    }\x0d\x0a                    for (var i = 0; i \x3c forwardStack.length; i++) {\x0d\x0a                        if (forwardStack[i].flexAppUrl == getHash() && i != (bsl - 2)) {\x0d\x0a                            arbitraryUrl = true;\x0d\x0a                            foundInStacks.forward = i;\x0d\x0a                        }\x0d\x0a                    }\x0d\x0a                    handleArbitraryUrl();\x0d\x0a                }\x0d\x0a\x0d\x0a                // Firefox changed; do a callback into BrowserManager to tell it.\x0d\x0a                currentHref = document.location.href;\x0d\x0a                var flexAppUrl = getHash();\x0d\x0a                if (flexAppUrl == \x27\x27) {\x0d\x0a                    //flexAppUrl = defaultHash;\x0d\x0a                }\x0d\x0a                //ADR: to fix multiple\x0d\x0a                if (typeof BrowserHistory_multiple != \x22undefined\x22 && BrowserHistory_multiple == true) {\x0d\x0a                    var pl = getPlayers();\x0d\x0a                    for (var i = 0; i \x3c pl.length; i++) {\x0d\x0a                        pl[i].browserURLChange(flexAppUrl);\x0d\x0a                    }\x0d\x0a                } else {\x0d\x0a                    getPlayer().browserURLChange(flexAppUrl);\x0d\x0a                }\x0d\x0a            }\x0d\x0a        }\x0d\x0a        //setTimeout(checkForUrlChange, 50);\x0d\x0a    }\x0d\x0a\x0d\x0a    /* Write an anchor into the page to legitimize it as a URL for Firefox et al. */\x0d\x0a    function addAnchor(flexAppUrl)\x0d\x0a    {\x0d\x0a       if (document.getElementsByName(flexAppUrl).length == 0) {\x0d\x0a           getAnchorElement().innerHTML += \x22\x3ca name=\x27\x22 + flexAppUrl + \x22\x27\x3e\x22 + flexAppUrl + \x22\x3c/a\x3e\x22;\x0d\x0a       }\x0d\x0a    }\x0d\x0a\x0d\x0a    var _initialize = function () {\x0d\x0a        if (browser.ie)\x0d\x0a        {\x0d\x0a            var scripts = document.getElementsByTagName(\x27script\x27);\x0d\x0a            for (var i = 0, s; s = scripts[i]; i++) {\x0d\x0a                if (s.src.indexOf(\x22history.js\x22) \x3e -1) {\x0d\x0a                    var iframe_location = (new String(s.src)).replace(\x22history.js\x22, \x22historyFrame.html\x22);\x0d\x0a                }\x0d\x0a            }\x0d\x0a            historyFrameSourcePrefix = iframe_location + \x22?\x22;\x0d\x0a            var src = historyFrameSourcePrefix;\x0d\x0a\x0d\x0a            var iframe = document.createElement(\x22iframe\x22);\x0d\x0a            iframe.id = \x27ie_historyFrame\x27;\x0d\x0a            iframe.name = \x27ie_historyFrame\x27;\x0d\x0a            //iframe.src = historyFrameSourcePrefix;\x0d\x0a            try {\x0d\x0a                document.body.appendChild(iframe);\x0d\x0a            } catch(e) {\x0d\x0a                setTimeout(function() {\x0d\x0a                    document.body.appendChild(iframe);\x0d\x0a                }, 0);\x0d\x0a            }\x0d\x0a        }\x0d\x0a\x0d\x0a        if (browser.safari)\x0d\x0a        {\x0d\x0a            var rememberDiv = document.createElement(\x22div\x22);\x0d\x0a            rememberDiv.id = \x27safari_rememberDiv\x27;\x0d\x0a            document.body.appendChild(rememberDiv);\x0d\x0a            rememberDiv.innerHTML = \x27\x3cinput type=\x22text\x22 id=\x22safari_remember_field\x22 style=\x22width: 500px;\x22\x3e\x27;\x0d\x0a\x0d\x0a            var formDiv = document.createElement(\x22div\x22);\x0d\x0a            formDiv.id = \x27safari_formDiv\x27;\x0d\x0a            document.body.appendChild(formDiv);\x0d\x0a\x0d\x0a            var reloader_content = document.createElement(\x27div\x27);\x0d\x0a            reloader_content.id = \x27safarireloader\x27;\x0d\x0a            var scripts = document.getElementsByTagName(\x27script\x27);\x0d\x0a            for (var i = 0, s; s = scripts[i]; i++) {\x0d\x0a                if (s.src.indexOf(\x22history.js\x22) \x3e -1) {\x0d\x0a                    html = (new String(s.src)).replace(\x22.js\x22, \x22.html\x22);\x0d\x0a                }\x0d\x0a            }\x0d\x0a            reloader_content.innerHTML = \x27\x3ciframe id=\x22safarireloader-iframe\x22 src=\x22about:blank\x22 frameborder=\x22no\x22 scrolling=\x22no\x22\x3e\x3c/iframe\x3e\x27;\x0d\x0a            document.body.appendChild(reloader_content);\x0d\x0a            reloader_content.style.position = \x27absolute\x27;\x0d\x0a            reloader_content.style.left = reloader_content.style.top = \x27-9999px\x27;\x0d\x0a            iframe = reloader_content.getElementsByTagName(\x27iframe\x27)[0];\x0d\x0a\x0d\x0a            if (document.getElementById(\x22safari_remember_field\x22).value != \x22\x22 ) {\x0d\x0a                historyHash = document.getElementById(\x22safari_remember_field\x22).value.split(\x22,\x22);\x0d\x0a            }\x0d\x0a\x0d\x0a        }\x0d\x0a\x0d\x0a        if (browser.firefox)\x0d\x0a        {\x0d\x0a            var anchorDiv = document.createElement(\x22div\x22);\x0d\x0a            anchorDiv.id = \x27firefox_anchorDiv\x27;\x0d\x0a            document.body.appendChild(anchorDiv);\x0d\x0a        }\x0d\x0a        \x0d\x0a        //setTimeout(checkForUrlChange, 50);\x0d\x0a    }\x0d\x0a\x0d\x0a    return {\x0d\x0a        historyHash: historyHash, \x0d\x0a        backStack: function() { return backStack; }, \x0d\x0a        forwardStack: function() { return forwardStack }, \x0d\x0a        getPlayer: getPlayer, \x0d\x0a        initialize: function(src) {\x0d\x0a            _initialize(src);\x0d\x0a        }, \x0d\x0a        setURL: function(url) {\x0d\x0a            document.location.href = url;\x0d\x0a        }, \x0d\x0a        getURL: function() {\x0d\x0a            return document.location.href;\x0d\x0a        }, \x0d\x0a        getTitle: function() {\x0d\x0a            return document.title;\x0d\x0a        }, \x0d\x0a        setTitle: function(title) {\x0d\x0a            try {\x0d\x0a                backStack[backStack.length - 1].title = title;\x0d\x0a            } catch(e) { }\x0d\x0a            //if on safari, set the title to be the empty string. \x0d\x0a            if (browser.safari) {\x0d\x0a                if (title == \x22\x22) {\x0d\x0a                    try {\x0d\x0a                    var tmp = window.location.href.toString();\x0d\x0a                    title = tmp.substring((tmp.lastIndexOf(\x22/\x22)+1), tmp.lastIndexOf(\x22#\x22));\x0d\x0a                    } catch(e) {\x0d\x0a                        title = \x22\x22;\x0d\x0a                    }\x0d\x0a                }\x0d\x0a            }\x0d\x0a            document.title = title;\x0d\x0a        }, \x0d\x0a        setDefaultURL: function(def)\x0d\x0a        {\x0d\x0a            defaultHash = def;\x0d\x0a            def = getHash();\x0d\x0a            //trailing ? is important else an extra frame gets added to the history\x0d\x0a            //when navigating back to the first page.  Alternatively could check\x0d\x0a            //in history frame navigation to compare # and ?.\x0d\x0a            if (browser.ie)\x0d\x0a            {\x0d\x0a                window[\x27_ie_firstload\x27] = true;\x0d\x0a                var sourceToSet = historyFrameSourcePrefix + def;\x0d\x0a                var func = function() {\x0d\x0a                    getHistoryFrame().src = sourceToSet;\x0d\x0a                    window.location.replace(\x22#\x22 + def);\x0d\x0a                    setInterval(checkForUrlChange, 50);\x0d\x0a                }\x0d\x0a                try {\x0d\x0a                    func();\x0d\x0a                } catch(e) {\x0d\x0a                    window.setTimeout(function() { func(); }, 0);\x0d\x0a                }\x0d\x0a            }\x0d\x0a\x0d\x0a            if (browser.safari)\x0d\x0a            {\x0d\x0a                currentHistoryLength = history.length;\x0d\x0a                if (historyHash.length == 0) {\x0d\x0a                    historyHash[currentHistoryLength] = def;\x0d\x0a                    var newloc = \x22#\x22 + def;\x0d\x0a                    window.location.replace(newloc);\x0d\x0a                } else {\x0d\x0a                    //alert(historyHash[historyHash.length-1]);\x0d\x0a                }\x0d\x0a                //setHash(def);\x0d\x0a                setInterval(checkForUrlChange, 50);\x0d\x0a            }\x0d\x0a            \x0d\x0a            \x0d\x0a            if (browser.firefox || browser.opera)\x0d\x0a            {\x0d\x0a                var reg = new RegExp(\x22#\x22 + def + \x22$\x22);\x0d\x0a                if (window.location.toString().match(reg)) {\x0d\x0a                } else {\x0d\x0a                    var newloc =\x22#\x22 + def;\x0d\x0a                    window.location.replace(newloc);\x0d\x0a                }\x0d\x0a                setInterval(checkForUrlChange, 50);\x0d\x0a                //setHash(def);\x0d\x0a            }\x0d\x0a\x0d\x0a        }, \x0d\x0a\x0d\x0a        /* Set the current browser URL; called from inside BrowserManager to propagate\x0d\x0a         * the application state out to the container.\x0d\x0a         */\x0d\x0a        setBrowserURL: function(flexAppUrl, objectId) {\x0d\x0a            if (browser.ie && typeof objectId != \x22undefined\x22) {\x0d\x0a                currentObjectId = objectId;\x0d\x0a            }\x0d\x0a           //fromIframe = fromIframe || false;\x0d\x0a           //fromFlex = fromFlex || false;\x0d\x0a           //alert(\x22setBrowserURL: \x22 + flexAppUrl);\x0d\x0a           //flexAppUrl = (flexAppUrl == \x22\x22) ? defaultHash : flexAppUrl ;\x0d\x0a\x0d\x0a           var pos = document.location.href.indexOf(\x27#\x27);\x0d\x0a           var baseUrl = pos != -1 ? document.location.href.substr(0, pos) : document.location.href;\x0d\x0a           var newUrl = baseUrl + \x27#\x27 + flexAppUrl;\x0d\x0a\x0d\x0a           if (document.location.href != newUrl && document.location.href + \x27#\x27 != newUrl) {\x0d\x0a               currentHref = newUrl;\x0d\x0a               addHistoryEntry(baseUrl, newUrl, flexAppUrl);\x0d\x0a               currentHistoryLength = history.length;\x0d\x0a           }\x0d\x0a\x0d\x0a           return false;\x0d\x0a        }, \x0d\x0a\x0d\x0a        browserURLChange: function(flexAppUrl) {\x0d\x0a            var objectId = null;\x0d\x0a            if (browser.ie && currentObjectId != null) {\x0d\x0a                objectId = currentObjectId;\x0d\x0a            }\x0d\x0a            pendingURL = \x27\x27;\x0d\x0a            \x0d\x0a            if (typeof BrowserHistory_multiple != \x22undefined\x22 && BrowserHistory_multiple == true) {\x0d\x0a                var pl = getPlayers();\x0d\x0a                for (var i = 0; i \x3c pl.length; i++) {\x0d\x0a                    try {\x0d\x0a                        pl[i].browserURLChange(flexAppUrl);\x0d\x0a                    } catch(e) { }\x0d\x0a                }\x0d\x0a            } else {\x0d\x0a                try {\x0d\x0a                    getPlayer(objectId).browserURLChange(flexAppUrl);\x0d\x0a                } catch(e) { }\x0d\x0a            }\x0d\x0a\x0d\x0a            currentObjectId = null;\x0d\x0a        }\x0d\x0a\x0d\x0a    }\x0d\x0a\x0d\x0a})();\x0d\x0a\x0d\x0a// Initialization\x0d\x0a\x0d\x0a// Automated unit testing and other diagnostics\x0d\x0a\x0d\x0afunction setURL(url)\x0d\x0a{\x0d\x0a    document.location.href = url;\x0d\x0a}\x0d\x0a\x0d\x0afunction backButton()\x0d\x0a{\x0d\x0a    history.back();\x0d\x0a}\x0d\x0a\x0d\x0afunction forwardButton()\x0d\x0a{\x0d\x0a    history.forward();\x0d\x0a}\x0d\x0a\x0d\x0afunction goForwardOrBackInHistory(step)\x0d\x0a{\x0d\x0a    history.go(step);\x0d\x0a}\x0d\x0a\x0d\x0a//BrowserHistoryUtils.addEvent(window, \x22load\x22, function() { BrowserHistory.initialize(); });\x0d\x0a(function(i) {\x0d\x0a    var u =navigator.userAgent;var e=/*@cc_on!@*/false; \x0d\x0a    var st = setTimeout;\x0d\x0a    if(/webkit/i.test(u)){\x0d\x0a        st(function(){\x0d\x0a            var dr=document.readyState;\x0d\x0a            if(dr==\x22loaded\x22||dr==\x22complete\x22){i()}\x0d\x0a            else{st(arguments.callee,10);}},10);\x0d\x0a    } else if((/mozilla/i.test(u)&&!/(compati)/.test(u)) || (/opera/i.test(u))){\x0d\x0a        document.addEventListener(\x22DOMContentLoaded\x22,i,false);\x0d\x0a    } else if(e){\x0d\x0a    (function(){\x0d\x0a        var t=document.createElement(\x27doc:rdy\x27);\x0d\x0a        try{t.doScroll(\x27left\x27);\x0d\x0a            i();t=null;\x0d\x0a        }catch(e){st(arguments.callee,0);}})();\x0d\x0a    } else{\x0d\x0a        window.onload=i;\x0d\x0a    }\x0d\x0a})( function() {BrowserHistory.initialize();} );\x0d\x0a'}